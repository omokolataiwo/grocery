// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`NavigationBar Component should render component 1`] = `
ReactWrapper {
  Symbol(enzyme.__unrendered__): <BrowserRouter>
    <TextInputField
      errors={
        Array [
          "Name is required.",
        ]
      }
      label="Item Name"
      name="name"
      onChange={[MockFunction]}
      placeholder="Bread"
      size={12}
      value=""
    />
  </BrowserRouter>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": BrowserRouter {
      "_reactInternalFiber": FiberNode {
        "_debugID": 50,
        "_debugIsCurrentlyTiming": false,
        "_debugOwner": FiberNode {
          "_debugID": 49,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": null,
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": [Circular],
          "childExpirationTime": 0,
          "effectTag": 1,
          "elementType": [Function],
          "expirationTime": 0,
          "firstContextDependency": null,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "children": <TextInputField
                errors={
                  Array [
                    "Name is required.",
                  ]
                }
                label="Item Name"
                name="name"
                onChange={[MockFunction]}
                placeholder="Bread"
                size={12}
                value=""
              />,
            },
          },
          "memoizedState": Object {
            "context": null,
            "mount": true,
            "props": Object {
              "children": <TextInputField
                errors={
                  Array [
                    "Name is required.",
                  ]
                }
                label="Item Name"
                name="name"
                onChange={[MockFunction]}
                placeholder="Bread"
                size={12}
                value=""
              />,
            },
          },
          "mode": 0,
          "nextEffect": FiberNode {
            "_debugID": 47,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": FiberNode {
              "_debugID": 47,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": [Circular],
              "child": null,
              "childExpirationTime": 0,
              "effectTag": 0,
              "elementType": null,
              "expirationTime": 1073741823,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div>
                    <div
                      class="form-group col-md-12"
                    >
                      <label
                        for="name"
                      >
                        Item Name
                      </label>
                      <input
                        class="form-control"
                        id="name"
                        name="name"
                        placeholder="Bread"
                        type="text"
                        value=""
                      />
                      <div
                        class="error"
                      >
                        <span>
                          Name is required.
                        </span>
                      </div>
                    </div>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 12,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "children": <TextInputField
                            errors={
                              Array [
                                "Name is required.",
                              ]
                            }
                            label="Item Name"
                            name="name"
                            onChange={[MockFunction]}
                            placeholder="Bread"
                            size={12}
                            value=""
                          />,
                        }
                      }
                    />,
                  },
                  "tag": 0,
                },
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "children": <TextInputField
                            errors={
                              Array [
                                "Name is required.",
                              ]
                            }
                            label="Item Name"
                            name="name"
                            onChange={[MockFunction]}
                            placeholder="Bread"
                            size={12}
                            value=""
                          />,
                        }
                      }
                    />,
                  },
                  "tag": 0,
                },
              },
            },
            "child": [Circular],
            "childExpirationTime": 0,
            "effectTag": 32,
            "elementType": null,
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={
                  Object {
                    "children": <TextInputField
                      errors={
                        Array [
                          "Name is required.",
                        ]
                      }
                      label="Item Name"
                      name="name"
                      onChange={[MockFunction]}
                      placeholder="Bread"
                      size={12}
                      value=""
                    />,
                  }
                }
              />,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <div>
                  <div
                    class="form-group col-md-12"
                  >
                    <label
                      for="name"
                    >
                      Item Name
                    </label>
                    <input
                      class="form-control"
                      id="name"
                      name="name"
                      placeholder="Bread"
                      type="text"
                      value=""
                    />
                    <div
                      class="error"
                    >
                      <span>
                        Name is required.
                      </span>
                    </div>
                  </div>
                </div>
              </div>,
              "context": Object {},
              "current": [Circular],
              "didError": false,
              "earliestPendingTime": 0,
              "earliestSuspendedTime": 0,
              "expirationTime": 0,
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "interactionThreadID": 12,
              "latestPendingTime": 0,
              "latestPingedTime": 0,
              "latestSuspendedTime": 0,
              "memoizedInteractions": Set {},
              "nextExpirationTimeToWorkOn": 0,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "pendingInteractionMap": Map {},
              "timeoutHandle": -1,
            },
            "tag": 3,
            "treeBaseDuration": 0,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "children": <TextInputField
                        errors={
                          Array [
                            "Name is required.",
                          ]
                        }
                        label="Item Name"
                        name="name"
                        onChange={[MockFunction]}
                        placeholder="Bread"
                        size={12}
                        value=""
                      />,
                    }
                  }
                />,
              },
              "firstCapturedEffect": null,
              "firstCapturedUpdate": null,
              "firstEffect": null,
              "firstUpdate": null,
              "lastCapturedEffect": null,
              "lastCapturedUpdate": null,
              "lastEffect": null,
              "lastUpdate": null,
            },
          },
          "pendingProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "children": <TextInputField
                errors={
                  Array [
                    "Name is required.",
                  ]
                }
                label="Item Name"
                name="name"
                onChange={[MockFunction]}
                placeholder="Bread"
                size={12}
                value=""
              />,
            },
          },
          "ref": null,
          "return": FiberNode {
            "_debugID": 47,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": FiberNode {
              "_debugID": 47,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": [Circular],
              "child": null,
              "childExpirationTime": 0,
              "effectTag": 0,
              "elementType": null,
              "expirationTime": 1073741823,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div>
                    <div
                      class="form-group col-md-12"
                    >
                      <label
                        for="name"
                      >
                        Item Name
                      </label>
                      <input
                        class="form-control"
                        id="name"
                        name="name"
                        placeholder="Bread"
                        type="text"
                        value=""
                      />
                      <div
                        class="error"
                      >
                        <span>
                          Name is required.
                        </span>
                      </div>
                    </div>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 12,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "children": <TextInputField
                            errors={
                              Array [
                                "Name is required.",
                              ]
                            }
                            label="Item Name"
                            name="name"
                            onChange={[MockFunction]}
                            placeholder="Bread"
                            size={12}
                            value=""
                          />,
                        }
                      }
                    />,
                  },
                  "tag": 0,
                },
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "children": <TextInputField
                            errors={
                              Array [
                                "Name is required.",
                              ]
                            }
                            label="Item Name"
                            name="name"
                            onChange={[MockFunction]}
                            placeholder="Bread"
                            size={12}
                            value=""
                          />,
                        }
                      }
                    />,
                  },
                  "tag": 0,
                },
              },
            },
            "child": [Circular],
            "childExpirationTime": 0,
            "effectTag": 32,
            "elementType": null,
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={
                  Object {
                    "children": <TextInputField
                      errors={
                        Array [
                          "Name is required.",
                        ]
                      }
                      label="Item Name"
                      name="name"
                      onChange={[MockFunction]}
                      placeholder="Bread"
                      size={12}
                      value=""
                    />,
                  }
                }
              />,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <div>
                  <div
                    class="form-group col-md-12"
                  >
                    <label
                      for="name"
                    >
                      Item Name
                    </label>
                    <input
                      class="form-control"
                      id="name"
                      name="name"
                      placeholder="Bread"
                      type="text"
                      value=""
                    />
                    <div
                      class="error"
                    >
                      <span>
                        Name is required.
                      </span>
                    </div>
                  </div>
                </div>
              </div>,
              "context": Object {},
              "current": [Circular],
              "didError": false,
              "earliestPendingTime": 0,
              "earliestSuspendedTime": 0,
              "expirationTime": 0,
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "interactionThreadID": 12,
              "latestPendingTime": 0,
              "latestPingedTime": 0,
              "latestSuspendedTime": 0,
              "memoizedInteractions": Set {},
              "nextExpirationTimeToWorkOn": 0,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "pendingInteractionMap": Map {},
              "timeoutHandle": -1,
            },
            "tag": 3,
            "treeBaseDuration": 0,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "children": <TextInputField
                        errors={
                          Array [
                            "Name is required.",
                          ]
                        }
                        label="Item Name"
                        name="name"
                        onChange={[MockFunction]}
                        placeholder="Bread"
                        size={12}
                        value=""
                      />,
                    }
                  }
                />,
              },
              "firstCapturedEffect": null,
              "firstCapturedUpdate": null,
              "firstEffect": null,
              "firstUpdate": null,
              "lastCapturedEffect": null,
              "lastCapturedUpdate": null,
              "lastEffect": null,
              "lastUpdate": null,
            },
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": WrapperComponent {
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "children": <TextInputField
                  errors={
                    Array [
                      "Name is required.",
                    ]
                  }
                  label="Item Name"
                  name="name"
                  onChange={[MockFunction]}
                  placeholder="Bread"
                  size={12}
                  value=""
                />,
              },
            },
            "refs": Object {},
            "state": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "children": <TextInputField
                  errors={
                    Array [
                      "Name is required.",
                    ]
                  }
                  label="Item Name"
                  name="name"
                  onChange={[MockFunction]}
                  placeholder="Bread"
                  size={12}
                  value=""
                />,
              },
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 1,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "_debugSource": null,
        "actualDuration": 0,
        "actualStartTime": -1,
        "alternate": null,
        "child": FiberNode {
          "_debugID": 51,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": [Circular],
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": FiberNode {
            "_debugID": 52,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": FiberNode {
              "_debugID": 53,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 54,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 55,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": null,
                  "childExpirationTime": 0,
                  "effectTag": 0,
                  "elementType": "label",
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": "Item Name",
                    "htmlFor": "name",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": "Item Name",
                    "htmlFor": "name",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": FiberNode {
                    "_debugID": 56,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": null,
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "elementType": "input",
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 1,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "className": "form-control",
                      "id": "name",
                      "name": "name",
                      "onChange": [MockFunction],
                      "placeholder": "Bread",
                      "type": "text",
                      "value": "",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "className": "form-control",
                      "id": "name",
                      "name": "name",
                      "onChange": [MockFunction],
                      "placeholder": "Bread",
                      "type": "text",
                      "value": "",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": FiberNode {
                      "_debugID": 57,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 58,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": null,
                        "childExpirationTime": 0,
                        "effectTag": 0,
                        "elementType": "span",
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 0,
                        "key": "0",
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "Name is required.",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": "Name is required.",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": <span>
                          Name is required.
                        </span>,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "span",
                        "updateQueue": null,
                      },
                      "childExpirationTime": 0,
                      "effectTag": 0,
                      "elementType": "div",
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 2,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": Array [
                          <span>
                            Name is required.
                          </span>,
                        ],
                        "className": "error",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": Array [
                          <span>
                            Name is required.
                          </span>,
                        ],
                        "className": "error",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": <div
                        class="error"
                      >
                        <span>
                          Name is required.
                        </span>
                      </div>,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "stateNode": <input
                      class="form-control"
                      id="name"
                      name="name"
                      placeholder="Bread"
                      type="text"
                      value=""
                    />,
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": "input",
                    "updateQueue": null,
                  },
                  "stateNode": <label
                    for="name"
                  >
                    Item Name
                  </label>,
                  "tag": 5,
                  "treeBaseDuration": 0,
                  "type": "label",
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "effectTag": 0,
                "elementType": "div",
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <label
                      htmlFor="name"
                    >
                      Item Name
                    </label>,
                    <input
                      className="form-control"
                      id="name"
                      name="name"
                      onChange={[MockFunction]}
                      placeholder="Bread"
                      type="text"
                      value=""
                    />,
                    <div
                      className="error"
                    >
                      <span>
                        Name is required.
                      </span>
                    </div>,
                  ],
                  "className": "form-group col-md-12",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": Array [
                    <label
                      htmlFor="name"
                    >
                      Item Name
                    </label>,
                    <input
                      className="form-control"
                      id="name"
                      name="name"
                      onChange={[MockFunction]}
                      placeholder="Bread"
                      type="text"
                      value=""
                    />,
                    <div
                      className="error"
                    >
                      <span>
                        Name is required.
                      </span>
                    </div>,
                  ],
                  "className": "form-group col-md-12",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": <div
                  class="form-group col-md-12"
                >
                  <label
                    for="name"
                  >
                    Item Name
                  </label>
                  <input
                    class="form-control"
                    id="name"
                    name="name"
                    placeholder="Bread"
                    type="text"
                    value=""
                  />
                  <div
                    class="error"
                  >
                    <span>
                      Name is required.
                    </span>
                  </div>
                </div>,
                "tag": 5,
                "treeBaseDuration": 0,
                "type": "div",
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "effectTag": 0,
              "elementType": "div",
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": <div
                  className="form-group col-md-12"
                >
                  <label
                    htmlFor="name"
                  >
                    Item Name
                  </label>
                  <input
                    className="form-control"
                    id="name"
                    name="name"
                    onChange={[MockFunction]}
                    placeholder="Bread"
                    type="text"
                    value=""
                  />
                  <div
                    className="error"
                  >
                    <span>
                      Name is required.
                    </span>
                  </div>
                </div>,
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": <div
                  className="form-group col-md-12"
                >
                  <label
                    htmlFor="name"
                  >
                    Item Name
                  </label>
                  <input
                    className="form-control"
                    id="name"
                    name="name"
                    onChange={[MockFunction]}
                    placeholder="Bread"
                    type="text"
                    value=""
                  />
                  <div
                    className="error"
                  >
                    <span>
                      Name is required.
                    </span>
                  </div>
                </div>,
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": <div>
                <div
                  class="form-group col-md-12"
                >
                  <label
                    for="name"
                  >
                    Item Name
                  </label>
                  <input
                    class="form-control"
                    id="name"
                    name="name"
                    placeholder="Bread"
                    type="text"
                    value=""
                  />
                  <div
                    class="error"
                  >
                    <span>
                      Name is required.
                    </span>
                  </div>
                </div>
              </div>,
              "tag": 5,
              "treeBaseDuration": 0,
              "type": "div",
              "updateQueue": null,
            },
            "childExpirationTime": 0,
            "effectTag": 1,
            "elementType": [Function],
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "errors": Array [
                "Name is required.",
              ],
              "label": "Item Name",
              "name": "name",
              "onChange": [MockFunction],
              "placeholder": "Bread",
              "size": 12,
              "value": "",
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "errors": Array [
                "Name is required.",
              ],
              "label": "Item Name",
              "name": "name",
              "onChange": [MockFunction],
              "placeholder": "Bread",
              "size": 12,
              "value": "",
            },
            "ref": null,
            "return": [Circular],
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": null,
            "tag": 0,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "childExpirationTime": 0,
          "effectTag": 1,
          "elementType": [Function],
          "expirationTime": 0,
          "firstContextDependency": null,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "children": <TextInputField
              errors={
                Array [
                  "Name is required.",
                ]
              }
              label="Item Name"
              name="name"
              onChange={[MockFunction]}
              placeholder="Bread"
              size={12}
              value=""
            />,
            "history": Object {
              "action": "POP",
              "block": [Function],
              "createHref": [Function],
              "go": [Function],
              "goBack": [Function],
              "goForward": [Function],
              "length": 1,
              "listen": [Function],
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
              "push": [Function],
              "replace": [Function],
            },
          },
          "memoizedState": Object {
            "match": Object {
              "isExact": true,
              "params": Object {},
              "path": "/",
              "url": "/",
            },
          },
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "children": <TextInputField
              errors={
                Array [
                  "Name is required.",
                ]
              }
              label="Item Name"
              name="name"
              onChange={[MockFunction]}
              placeholder="Bread"
              size={12}
              value=""
            />,
            "history": Object {
              "action": "POP",
              "block": [Function],
              "createHref": [Function],
              "go": [Function],
              "goBack": [Function],
              "goForward": [Function],
              "length": 1,
              "listen": [Function],
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
              "push": [Function],
              "replace": [Function],
            },
          },
          "ref": null,
          "return": [Circular],
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": Router {
            "__reactInternalMemoizedMaskedChildContext": Object {
              "router": undefined,
            },
            "__reactInternalMemoizedMergedChildContext": Object {
              "router": Object {
                "history": Object {
                  "action": "POP",
                  "block": [Function],
                  "createHref": [Function],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "push": [Function],
                  "replace": [Function],
                },
                "route": Object {
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "match": Object {
                    "isExact": true,
                    "params": Object {},
                    "path": "/",
                    "url": "/",
                  },
                },
              },
            },
            "__reactInternalMemoizedUnmaskedChildContext": Object {},
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {
              "router": undefined,
            },
            "props": Object {
              "children": <TextInputField
                errors={
                  Array [
                    "Name is required.",
                  ]
                }
                label="Item Name"
                name="name"
                onChange={[MockFunction]}
                placeholder="Bread"
                size={12}
                value=""
              />,
              "history": Object {
                "action": "POP",
                "block": [Function],
                "createHref": [Function],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "push": [Function],
                "replace": [Function],
              },
            },
            "refs": Object {},
            "state": Object {
              "match": Object {
                "isExact": true,
                "params": Object {},
                "path": "/",
                "url": "/",
              },
            },
            "unlisten": [Function],
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 1,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "childExpirationTime": 0,
        "effectTag": 1,
        "elementType": [Function],
        "expirationTime": 0,
        "firstContextDependency": null,
        "firstEffect": null,
        "index": 0,
        "key": null,
        "lastEffect": null,
        "memoizedProps": Object {
          "children": <TextInputField
            errors={
              Array [
                "Name is required.",
              ]
            }
            label="Item Name"
            name="name"
            onChange={[MockFunction]}
            placeholder="Bread"
            size={12}
            value=""
          />,
        },
        "memoizedState": null,
        "mode": 0,
        "nextEffect": null,
        "pendingProps": Object {
          "children": <TextInputField
            errors={
              Array [
                "Name is required.",
              ]
            }
            label="Item Name"
            name="name"
            onChange={[MockFunction]}
            placeholder="Bread"
            size={12}
            value=""
          />,
        },
        "ref": null,
        "return": FiberNode {
          "_debugID": 49,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": null,
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": [Circular],
          "childExpirationTime": 0,
          "effectTag": 1,
          "elementType": [Function],
          "expirationTime": 0,
          "firstContextDependency": null,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "children": <TextInputField
                errors={
                  Array [
                    "Name is required.",
                  ]
                }
                label="Item Name"
                name="name"
                onChange={[MockFunction]}
                placeholder="Bread"
                size={12}
                value=""
              />,
            },
          },
          "memoizedState": Object {
            "context": null,
            "mount": true,
            "props": Object {
              "children": <TextInputField
                errors={
                  Array [
                    "Name is required.",
                  ]
                }
                label="Item Name"
                name="name"
                onChange={[MockFunction]}
                placeholder="Bread"
                size={12}
                value=""
              />,
            },
          },
          "mode": 0,
          "nextEffect": FiberNode {
            "_debugID": 47,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": FiberNode {
              "_debugID": 47,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": [Circular],
              "child": null,
              "childExpirationTime": 0,
              "effectTag": 0,
              "elementType": null,
              "expirationTime": 1073741823,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div>
                    <div
                      class="form-group col-md-12"
                    >
                      <label
                        for="name"
                      >
                        Item Name
                      </label>
                      <input
                        class="form-control"
                        id="name"
                        name="name"
                        placeholder="Bread"
                        type="text"
                        value=""
                      />
                      <div
                        class="error"
                      >
                        <span>
                          Name is required.
                        </span>
                      </div>
                    </div>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 12,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "children": <TextInputField
                            errors={
                              Array [
                                "Name is required.",
                              ]
                            }
                            label="Item Name"
                            name="name"
                            onChange={[MockFunction]}
                            placeholder="Bread"
                            size={12}
                            value=""
                          />,
                        }
                      }
                    />,
                  },
                  "tag": 0,
                },
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "children": <TextInputField
                            errors={
                              Array [
                                "Name is required.",
                              ]
                            }
                            label="Item Name"
                            name="name"
                            onChange={[MockFunction]}
                            placeholder="Bread"
                            size={12}
                            value=""
                          />,
                        }
                      }
                    />,
                  },
                  "tag": 0,
                },
              },
            },
            "child": [Circular],
            "childExpirationTime": 0,
            "effectTag": 32,
            "elementType": null,
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={
                  Object {
                    "children": <TextInputField
                      errors={
                        Array [
                          "Name is required.",
                        ]
                      }
                      label="Item Name"
                      name="name"
                      onChange={[MockFunction]}
                      placeholder="Bread"
                      size={12}
                      value=""
                    />,
                  }
                }
              />,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <div>
                  <div
                    class="form-group col-md-12"
                  >
                    <label
                      for="name"
                    >
                      Item Name
                    </label>
                    <input
                      class="form-control"
                      id="name"
                      name="name"
                      placeholder="Bread"
                      type="text"
                      value=""
                    />
                    <div
                      class="error"
                    >
                      <span>
                        Name is required.
                      </span>
                    </div>
                  </div>
                </div>
              </div>,
              "context": Object {},
              "current": [Circular],
              "didError": false,
              "earliestPendingTime": 0,
              "earliestSuspendedTime": 0,
              "expirationTime": 0,
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "interactionThreadID": 12,
              "latestPendingTime": 0,
              "latestPingedTime": 0,
              "latestSuspendedTime": 0,
              "memoizedInteractions": Set {},
              "nextExpirationTimeToWorkOn": 0,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "pendingInteractionMap": Map {},
              "timeoutHandle": -1,
            },
            "tag": 3,
            "treeBaseDuration": 0,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "children": <TextInputField
                        errors={
                          Array [
                            "Name is required.",
                          ]
                        }
                        label="Item Name"
                        name="name"
                        onChange={[MockFunction]}
                        placeholder="Bread"
                        size={12}
                        value=""
                      />,
                    }
                  }
                />,
              },
              "firstCapturedEffect": null,
              "firstCapturedUpdate": null,
              "firstEffect": null,
              "firstUpdate": null,
              "lastCapturedEffect": null,
              "lastCapturedUpdate": null,
              "lastEffect": null,
              "lastUpdate": null,
            },
          },
          "pendingProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "children": <TextInputField
                errors={
                  Array [
                    "Name is required.",
                  ]
                }
                label="Item Name"
                name="name"
                onChange={[MockFunction]}
                placeholder="Bread"
                size={12}
                value=""
              />,
            },
          },
          "ref": null,
          "return": FiberNode {
            "_debugID": 47,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": FiberNode {
              "_debugID": 47,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": [Circular],
              "child": null,
              "childExpirationTime": 0,
              "effectTag": 0,
              "elementType": null,
              "expirationTime": 1073741823,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div>
                    <div
                      class="form-group col-md-12"
                    >
                      <label
                        for="name"
                      >
                        Item Name
                      </label>
                      <input
                        class="form-control"
                        id="name"
                        name="name"
                        placeholder="Bread"
                        type="text"
                        value=""
                      />
                      <div
                        class="error"
                      >
                        <span>
                          Name is required.
                        </span>
                      </div>
                    </div>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 12,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "children": <TextInputField
                            errors={
                              Array [
                                "Name is required.",
                              ]
                            }
                            label="Item Name"
                            name="name"
                            onChange={[MockFunction]}
                            placeholder="Bread"
                            size={12}
                            value=""
                          />,
                        }
                      }
                    />,
                  },
                  "tag": 0,
                },
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "children": <TextInputField
                            errors={
                              Array [
                                "Name is required.",
                              ]
                            }
                            label="Item Name"
                            name="name"
                            onChange={[MockFunction]}
                            placeholder="Bread"
                            size={12}
                            value=""
                          />,
                        }
                      }
                    />,
                  },
                  "tag": 0,
                },
              },
            },
            "child": [Circular],
            "childExpirationTime": 0,
            "effectTag": 32,
            "elementType": null,
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={
                  Object {
                    "children": <TextInputField
                      errors={
                        Array [
                          "Name is required.",
                        ]
                      }
                      label="Item Name"
                      name="name"
                      onChange={[MockFunction]}
                      placeholder="Bread"
                      size={12}
                      value=""
                    />,
                  }
                }
              />,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <div>
                  <div
                    class="form-group col-md-12"
                  >
                    <label
                      for="name"
                    >
                      Item Name
                    </label>
                    <input
                      class="form-control"
                      id="name"
                      name="name"
                      placeholder="Bread"
                      type="text"
                      value=""
                    />
                    <div
                      class="error"
                    >
                      <span>
                        Name is required.
                      </span>
                    </div>
                  </div>
                </div>
              </div>,
              "context": Object {},
              "current": [Circular],
              "didError": false,
              "earliestPendingTime": 0,
              "earliestSuspendedTime": 0,
              "expirationTime": 0,
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "interactionThreadID": 12,
              "latestPendingTime": 0,
              "latestPingedTime": 0,
              "latestSuspendedTime": 0,
              "memoizedInteractions": Set {},
              "nextExpirationTimeToWorkOn": 0,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "pendingInteractionMap": Map {},
              "timeoutHandle": -1,
            },
            "tag": 3,
            "treeBaseDuration": 0,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "children": <TextInputField
                        errors={
                          Array [
                            "Name is required.",
                          ]
                        }
                        label="Item Name"
                        name="name"
                        onChange={[MockFunction]}
                        placeholder="Bread"
                        size={12}
                        value=""
                      />,
                    }
                  }
                />,
              },
              "firstCapturedEffect": null,
              "firstCapturedUpdate": null,
              "firstEffect": null,
              "firstUpdate": null,
              "lastCapturedEffect": null,
              "lastCapturedUpdate": null,
              "lastEffect": null,
              "lastUpdate": null,
            },
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": WrapperComponent {
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "children": <TextInputField
                  errors={
                    Array [
                      "Name is required.",
                    ]
                  }
                  label="Item Name"
                  name="name"
                  onChange={[MockFunction]}
                  placeholder="Bread"
                  size={12}
                  value=""
                />,
              },
            },
            "refs": Object {},
            "state": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "children": <TextInputField
                  errors={
                    Array [
                      "Name is required.",
                    ]
                  }
                  label="Item Name"
                  name="name"
                  onChange={[MockFunction]}
                  placeholder="Bread"
                  size={12}
                  value=""
                />,
              },
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 1,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "selfBaseDuration": 0,
        "sibling": null,
        "stateNode": [Circular],
        "tag": 1,
        "treeBaseDuration": 0,
        "type": [Function],
        "updateQueue": null,
      },
      "_reactInternalInstance": Object {},
      "context": Object {},
      "history": Object {
        "action": "POP",
        "block": [Function],
        "createHref": [Function],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      },
      "props": Object {
        "children": <TextInputField
          errors={
            Array [
              "Name is required.",
            ]
          }
          label="Item Name"
          name="name"
          onChange={[MockFunction]}
          placeholder="Bread"
          size={12}
          value=""
        />,
      },
      "refs": Object {},
      "state": null,
      "updater": Object {
        "enqueueForceUpdate": [Function],
        "enqueueReplaceState": [Function],
        "enqueueSetState": [Function],
        "isMounted": [Function],
      },
    },
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <TextInputField
        errors={
          Array [
            "Name is required.",
          ]
        }
        label="Item Name"
        name="name"
        onChange={[MockFunction]}
        placeholder="Bread"
        size={12}
        value=""
      />,
    },
    "ref": null,
    "rendered": Object {
      "instance": Router {
        "__reactInternalMemoizedMaskedChildContext": Object {
          "router": undefined,
        },
        "__reactInternalMemoizedMergedChildContext": Object {
          "router": Object {
            "history": Object {
              "action": "POP",
              "block": [Function],
              "createHref": [Function],
              "go": [Function],
              "goBack": [Function],
              "goForward": [Function],
              "length": 1,
              "listen": [Function],
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
              "push": [Function],
              "replace": [Function],
            },
            "route": Object {
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
              "match": Object {
                "isExact": true,
                "params": Object {},
                "path": "/",
                "url": "/",
              },
            },
          },
        },
        "__reactInternalMemoizedUnmaskedChildContext": Object {},
        "_reactInternalFiber": FiberNode {
          "_debugID": 51,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": FiberNode {
            "_debugID": 50,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": FiberNode {
              "_debugID": 49,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "children": <TextInputField
                    errors={
                      Array [
                        "Name is required.",
                      ]
                    }
                    label="Item Name"
                    name="name"
                    onChange={[MockFunction]}
                    placeholder="Bread"
                    size={12}
                    value=""
                  />,
                },
              },
              "memoizedState": Object {
                "context": null,
                "mount": true,
                "props": Object {
                  "children": <TextInputField
                    errors={
                      Array [
                        "Name is required.",
                      ]
                    }
                    label="Item Name"
                    name="name"
                    onChange={[MockFunction]}
                    placeholder="Bread"
                    size={12}
                    value=""
                  />,
                },
              },
              "mode": 0,
              "nextEffect": FiberNode {
                "_debugID": 47,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": FiberNode {
                  "_debugID": 47,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": [Circular],
                  "child": null,
                  "childExpirationTime": 0,
                  "effectTag": 0,
                  "elementType": null,
                  "expirationTime": 1073741823,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": null,
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": Object {
                    "containerInfo": <div>
                      <div>
                        <div
                          class="form-group col-md-12"
                        >
                          <label
                            for="name"
                          >
                            Item Name
                          </label>
                          <input
                            class="form-control"
                            id="name"
                            name="name"
                            placeholder="Bread"
                            type="text"
                            value=""
                          />
                          <div
                            class="error"
                          >
                            <span>
                              Name is required.
                            </span>
                          </div>
                        </div>
                      </div>
                    </div>,
                    "context": Object {},
                    "current": [Circular],
                    "didError": false,
                    "earliestPendingTime": 0,
                    "earliestSuspendedTime": 0,
                    "expirationTime": 0,
                    "finishedWork": null,
                    "firstBatch": null,
                    "hydrate": false,
                    "interactionThreadID": 12,
                    "latestPendingTime": 0,
                    "latestPingedTime": 0,
                    "latestSuspendedTime": 0,
                    "memoizedInteractions": Set {},
                    "nextExpirationTimeToWorkOn": 0,
                    "nextScheduledRoot": null,
                    "pendingChildren": null,
                    "pendingCommitExpirationTime": 0,
                    "pendingContext": null,
                    "pendingInteractionMap": Map {},
                    "timeoutHandle": -1,
                  },
                  "tag": 3,
                  "treeBaseDuration": 0,
                  "type": null,
                  "updateQueue": Object {
                    "baseState": null,
                    "firstCapturedEffect": null,
                    "firstCapturedUpdate": null,
                    "firstEffect": null,
                    "firstUpdate": Object {
                      "callback": null,
                      "expirationTime": 1073741823,
                      "next": null,
                      "nextEffect": null,
                      "payload": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "children": <TextInputField
                                errors={
                                  Array [
                                    "Name is required.",
                                  ]
                                }
                                label="Item Name"
                                name="name"
                                onChange={[MockFunction]}
                                placeholder="Bread"
                                size={12}
                                value=""
                              />,
                            }
                          }
                        />,
                      },
                      "tag": 0,
                    },
                    "lastCapturedEffect": null,
                    "lastCapturedUpdate": null,
                    "lastEffect": null,
                    "lastUpdate": Object {
                      "callback": null,
                      "expirationTime": 1073741823,
                      "next": null,
                      "nextEffect": null,
                      "payload": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "children": <TextInputField
                                errors={
                                  Array [
                                    "Name is required.",
                                  ]
                                }
                                label="Item Name"
                                name="name"
                                onChange={[MockFunction]}
                                placeholder="Bread"
                                size={12}
                                value=""
                              />,
                            }
                          }
                        />,
                      },
                      "tag": 0,
                    },
                  },
                },
                "child": [Circular],
                "childExpirationTime": 0,
                "effectTag": 32,
                "elementType": null,
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": null,
                "memoizedState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                      Object {
                        "children": <TextInputField
                          errors={
                            Array [
                              "Name is required.",
                            ]
                          }
                          label="Item Name"
                          name="name"
                          onChange={[MockFunction]}
                          placeholder="Bread"
                          size={12}
                          value=""
                        />,
                      }
                    }
                  />,
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div>
                      <div
                        class="form-group col-md-12"
                      >
                        <label
                          for="name"
                        >
                          Item Name
                        </label>
                        <input
                          class="form-control"
                          id="name"
                          name="name"
                          placeholder="Bread"
                          type="text"
                          value=""
                        />
                        <div
                          class="error"
                        >
                          <span>
                            Name is required.
                          </span>
                        </div>
                      </div>
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "didError": false,
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "expirationTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "interactionThreadID": 12,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextExpirationTimeToWorkOn": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "timeoutHandle": -1,
                },
                "tag": 3,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "children": <TextInputField
                            errors={
                              Array [
                                "Name is required.",
                              ]
                            }
                            label="Item Name"
                            name="name"
                            onChange={[MockFunction]}
                            placeholder="Bread"
                            size={12}
                            value=""
                          />,
                        }
                      }
                    />,
                  },
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": null,
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": null,
                },
              },
              "pendingProps": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "children": <TextInputField
                    errors={
                      Array [
                        "Name is required.",
                      ]
                    }
                    label="Item Name"
                    name="name"
                    onChange={[MockFunction]}
                    placeholder="Bread"
                    size={12}
                    value=""
                  />,
                },
              },
              "ref": null,
              "return": FiberNode {
                "_debugID": 47,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": FiberNode {
                  "_debugID": 47,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": [Circular],
                  "child": null,
                  "childExpirationTime": 0,
                  "effectTag": 0,
                  "elementType": null,
                  "expirationTime": 1073741823,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": null,
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": Object {
                    "containerInfo": <div>
                      <div>
                        <div
                          class="form-group col-md-12"
                        >
                          <label
                            for="name"
                          >
                            Item Name
                          </label>
                          <input
                            class="form-control"
                            id="name"
                            name="name"
                            placeholder="Bread"
                            type="text"
                            value=""
                          />
                          <div
                            class="error"
                          >
                            <span>
                              Name is required.
                            </span>
                          </div>
                        </div>
                      </div>
                    </div>,
                    "context": Object {},
                    "current": [Circular],
                    "didError": false,
                    "earliestPendingTime": 0,
                    "earliestSuspendedTime": 0,
                    "expirationTime": 0,
                    "finishedWork": null,
                    "firstBatch": null,
                    "hydrate": false,
                    "interactionThreadID": 12,
                    "latestPendingTime": 0,
                    "latestPingedTime": 0,
                    "latestSuspendedTime": 0,
                    "memoizedInteractions": Set {},
                    "nextExpirationTimeToWorkOn": 0,
                    "nextScheduledRoot": null,
                    "pendingChildren": null,
                    "pendingCommitExpirationTime": 0,
                    "pendingContext": null,
                    "pendingInteractionMap": Map {},
                    "timeoutHandle": -1,
                  },
                  "tag": 3,
                  "treeBaseDuration": 0,
                  "type": null,
                  "updateQueue": Object {
                    "baseState": null,
                    "firstCapturedEffect": null,
                    "firstCapturedUpdate": null,
                    "firstEffect": null,
                    "firstUpdate": Object {
                      "callback": null,
                      "expirationTime": 1073741823,
                      "next": null,
                      "nextEffect": null,
                      "payload": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "children": <TextInputField
                                errors={
                                  Array [
                                    "Name is required.",
                                  ]
                                }
                                label="Item Name"
                                name="name"
                                onChange={[MockFunction]}
                                placeholder="Bread"
                                size={12}
                                value=""
                              />,
                            }
                          }
                        />,
                      },
                      "tag": 0,
                    },
                    "lastCapturedEffect": null,
                    "lastCapturedUpdate": null,
                    "lastEffect": null,
                    "lastUpdate": Object {
                      "callback": null,
                      "expirationTime": 1073741823,
                      "next": null,
                      "nextEffect": null,
                      "payload": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "children": <TextInputField
                                errors={
                                  Array [
                                    "Name is required.",
                                  ]
                                }
                                label="Item Name"
                                name="name"
                                onChange={[MockFunction]}
                                placeholder="Bread"
                                size={12}
                                value=""
                              />,
                            }
                          }
                        />,
                      },
                      "tag": 0,
                    },
                  },
                },
                "child": [Circular],
                "childExpirationTime": 0,
                "effectTag": 32,
                "elementType": null,
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": null,
                "memoizedState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                      Object {
                        "children": <TextInputField
                          errors={
                            Array [
                              "Name is required.",
                            ]
                          }
                          label="Item Name"
                          name="name"
                          onChange={[MockFunction]}
                          placeholder="Bread"
                          size={12}
                          value=""
                        />,
                      }
                    }
                  />,
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div>
                      <div
                        class="form-group col-md-12"
                      >
                        <label
                          for="name"
                        >
                          Item Name
                        </label>
                        <input
                          class="form-control"
                          id="name"
                          name="name"
                          placeholder="Bread"
                          type="text"
                          value=""
                        />
                        <div
                          class="error"
                        >
                          <span>
                            Name is required.
                          </span>
                        </div>
                      </div>
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "didError": false,
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "expirationTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "interactionThreadID": 12,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextExpirationTimeToWorkOn": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "timeoutHandle": -1,
                },
                "tag": 3,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "children": <TextInputField
                            errors={
                              Array [
                                "Name is required.",
                              ]
                            }
                            label="Item Name"
                            name="name"
                            onChange={[MockFunction]}
                            placeholder="Bread"
                            size={12}
                            value=""
                          />,
                        }
                      }
                    />,
                  },
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": null,
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": null,
                },
              },
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": WrapperComponent {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "children": <TextInputField
                      errors={
                        Array [
                          "Name is required.",
                        ]
                      }
                      label="Item Name"
                      name="name"
                      onChange={[MockFunction]}
                      placeholder="Bread"
                      size={12}
                      value=""
                    />,
                  },
                },
                "refs": Object {},
                "state": Object {
                  "context": null,
                  "mount": true,
                  "props": Object {
                    "children": <TextInputField
                      errors={
                        Array [
                          "Name is required.",
                        ]
                      }
                      label="Item Name"
                      name="name"
                      onChange={[MockFunction]}
                      placeholder="Bread"
                      size={12}
                      value=""
                    />,
                  },
                },
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": null,
            },
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "effectTag": 1,
            "elementType": [Function],
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": <TextInputField
                errors={
                  Array [
                    "Name is required.",
                  ]
                }
                label="Item Name"
                name="name"
                onChange={[MockFunction]}
                placeholder="Bread"
                size={12}
                value=""
              />,
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": <TextInputField
                errors={
                  Array [
                    "Name is required.",
                  ]
                }
                label="Item Name"
                name="name"
                onChange={[MockFunction]}
                placeholder="Bread"
                size={12}
                value=""
              />,
            },
            "ref": null,
            "return": FiberNode {
              "_debugID": 49,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "children": <TextInputField
                    errors={
                      Array [
                        "Name is required.",
                      ]
                    }
                    label="Item Name"
                    name="name"
                    onChange={[MockFunction]}
                    placeholder="Bread"
                    size={12}
                    value=""
                  />,
                },
              },
              "memoizedState": Object {
                "context": null,
                "mount": true,
                "props": Object {
                  "children": <TextInputField
                    errors={
                      Array [
                        "Name is required.",
                      ]
                    }
                    label="Item Name"
                    name="name"
                    onChange={[MockFunction]}
                    placeholder="Bread"
                    size={12}
                    value=""
                  />,
                },
              },
              "mode": 0,
              "nextEffect": FiberNode {
                "_debugID": 47,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": FiberNode {
                  "_debugID": 47,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": [Circular],
                  "child": null,
                  "childExpirationTime": 0,
                  "effectTag": 0,
                  "elementType": null,
                  "expirationTime": 1073741823,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": null,
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": Object {
                    "containerInfo": <div>
                      <div>
                        <div
                          class="form-group col-md-12"
                        >
                          <label
                            for="name"
                          >
                            Item Name
                          </label>
                          <input
                            class="form-control"
                            id="name"
                            name="name"
                            placeholder="Bread"
                            type="text"
                            value=""
                          />
                          <div
                            class="error"
                          >
                            <span>
                              Name is required.
                            </span>
                          </div>
                        </div>
                      </div>
                    </div>,
                    "context": Object {},
                    "current": [Circular],
                    "didError": false,
                    "earliestPendingTime": 0,
                    "earliestSuspendedTime": 0,
                    "expirationTime": 0,
                    "finishedWork": null,
                    "firstBatch": null,
                    "hydrate": false,
                    "interactionThreadID": 12,
                    "latestPendingTime": 0,
                    "latestPingedTime": 0,
                    "latestSuspendedTime": 0,
                    "memoizedInteractions": Set {},
                    "nextExpirationTimeToWorkOn": 0,
                    "nextScheduledRoot": null,
                    "pendingChildren": null,
                    "pendingCommitExpirationTime": 0,
                    "pendingContext": null,
                    "pendingInteractionMap": Map {},
                    "timeoutHandle": -1,
                  },
                  "tag": 3,
                  "treeBaseDuration": 0,
                  "type": null,
                  "updateQueue": Object {
                    "baseState": null,
                    "firstCapturedEffect": null,
                    "firstCapturedUpdate": null,
                    "firstEffect": null,
                    "firstUpdate": Object {
                      "callback": null,
                      "expirationTime": 1073741823,
                      "next": null,
                      "nextEffect": null,
                      "payload": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "children": <TextInputField
                                errors={
                                  Array [
                                    "Name is required.",
                                  ]
                                }
                                label="Item Name"
                                name="name"
                                onChange={[MockFunction]}
                                placeholder="Bread"
                                size={12}
                                value=""
                              />,
                            }
                          }
                        />,
                      },
                      "tag": 0,
                    },
                    "lastCapturedEffect": null,
                    "lastCapturedUpdate": null,
                    "lastEffect": null,
                    "lastUpdate": Object {
                      "callback": null,
                      "expirationTime": 1073741823,
                      "next": null,
                      "nextEffect": null,
                      "payload": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "children": <TextInputField
                                errors={
                                  Array [
                                    "Name is required.",
                                  ]
                                }
                                label="Item Name"
                                name="name"
                                onChange={[MockFunction]}
                                placeholder="Bread"
                                size={12}
                                value=""
                              />,
                            }
                          }
                        />,
                      },
                      "tag": 0,
                    },
                  },
                },
                "child": [Circular],
                "childExpirationTime": 0,
                "effectTag": 32,
                "elementType": null,
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": null,
                "memoizedState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                      Object {
                        "children": <TextInputField
                          errors={
                            Array [
                              "Name is required.",
                            ]
                          }
                          label="Item Name"
                          name="name"
                          onChange={[MockFunction]}
                          placeholder="Bread"
                          size={12}
                          value=""
                        />,
                      }
                    }
                  />,
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div>
                      <div
                        class="form-group col-md-12"
                      >
                        <label
                          for="name"
                        >
                          Item Name
                        </label>
                        <input
                          class="form-control"
                          id="name"
                          name="name"
                          placeholder="Bread"
                          type="text"
                          value=""
                        />
                        <div
                          class="error"
                        >
                          <span>
                            Name is required.
                          </span>
                        </div>
                      </div>
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "didError": false,
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "expirationTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "interactionThreadID": 12,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextExpirationTimeToWorkOn": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "timeoutHandle": -1,
                },
                "tag": 3,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "children": <TextInputField
                            errors={
                              Array [
                                "Name is required.",
                              ]
                            }
                            label="Item Name"
                            name="name"
                            onChange={[MockFunction]}
                            placeholder="Bread"
                            size={12}
                            value=""
                          />,
                        }
                      }
                    />,
                  },
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": null,
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": null,
                },
              },
              "pendingProps": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "children": <TextInputField
                    errors={
                      Array [
                        "Name is required.",
                      ]
                    }
                    label="Item Name"
                    name="name"
                    onChange={[MockFunction]}
                    placeholder="Bread"
                    size={12}
                    value=""
                  />,
                },
              },
              "ref": null,
              "return": FiberNode {
                "_debugID": 47,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": FiberNode {
                  "_debugID": 47,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": [Circular],
                  "child": null,
                  "childExpirationTime": 0,
                  "effectTag": 0,
                  "elementType": null,
                  "expirationTime": 1073741823,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": null,
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": Object {
                    "containerInfo": <div>
                      <div>
                        <div
                          class="form-group col-md-12"
                        >
                          <label
                            for="name"
                          >
                            Item Name
                          </label>
                          <input
                            class="form-control"
                            id="name"
                            name="name"
                            placeholder="Bread"
                            type="text"
                            value=""
                          />
                          <div
                            class="error"
                          >
                            <span>
                              Name is required.
                            </span>
                          </div>
                        </div>
                      </div>
                    </div>,
                    "context": Object {},
                    "current": [Circular],
                    "didError": false,
                    "earliestPendingTime": 0,
                    "earliestSuspendedTime": 0,
                    "expirationTime": 0,
                    "finishedWork": null,
                    "firstBatch": null,
                    "hydrate": false,
                    "interactionThreadID": 12,
                    "latestPendingTime": 0,
                    "latestPingedTime": 0,
                    "latestSuspendedTime": 0,
                    "memoizedInteractions": Set {},
                    "nextExpirationTimeToWorkOn": 0,
                    "nextScheduledRoot": null,
                    "pendingChildren": null,
                    "pendingCommitExpirationTime": 0,
                    "pendingContext": null,
                    "pendingInteractionMap": Map {},
                    "timeoutHandle": -1,
                  },
                  "tag": 3,
                  "treeBaseDuration": 0,
                  "type": null,
                  "updateQueue": Object {
                    "baseState": null,
                    "firstCapturedEffect": null,
                    "firstCapturedUpdate": null,
                    "firstEffect": null,
                    "firstUpdate": Object {
                      "callback": null,
                      "expirationTime": 1073741823,
                      "next": null,
                      "nextEffect": null,
                      "payload": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "children": <TextInputField
                                errors={
                                  Array [
                                    "Name is required.",
                                  ]
                                }
                                label="Item Name"
                                name="name"
                                onChange={[MockFunction]}
                                placeholder="Bread"
                                size={12}
                                value=""
                              />,
                            }
                          }
                        />,
                      },
                      "tag": 0,
                    },
                    "lastCapturedEffect": null,
                    "lastCapturedUpdate": null,
                    "lastEffect": null,
                    "lastUpdate": Object {
                      "callback": null,
                      "expirationTime": 1073741823,
                      "next": null,
                      "nextEffect": null,
                      "payload": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "children": <TextInputField
                                errors={
                                  Array [
                                    "Name is required.",
                                  ]
                                }
                                label="Item Name"
                                name="name"
                                onChange={[MockFunction]}
                                placeholder="Bread"
                                size={12}
                                value=""
                              />,
                            }
                          }
                        />,
                      },
                      "tag": 0,
                    },
                  },
                },
                "child": [Circular],
                "childExpirationTime": 0,
                "effectTag": 32,
                "elementType": null,
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": null,
                "memoizedState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                      Object {
                        "children": <TextInputField
                          errors={
                            Array [
                              "Name is required.",
                            ]
                          }
                          label="Item Name"
                          name="name"
                          onChange={[MockFunction]}
                          placeholder="Bread"
                          size={12}
                          value=""
                        />,
                      }
                    }
                  />,
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div>
                      <div
                        class="form-group col-md-12"
                      >
                        <label
                          for="name"
                        >
                          Item Name
                        </label>
                        <input
                          class="form-control"
                          id="name"
                          name="name"
                          placeholder="Bread"
                          type="text"
                          value=""
                        />
                        <div
                          class="error"
                        >
                          <span>
                            Name is required.
                          </span>
                        </div>
                      </div>
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "didError": false,
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "expirationTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "interactionThreadID": 12,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextExpirationTimeToWorkOn": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "timeoutHandle": -1,
                },
                "tag": 3,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "children": <TextInputField
                            errors={
                              Array [
                                "Name is required.",
                              ]
                            }
                            label="Item Name"
                            name="name"
                            onChange={[MockFunction]}
                            placeholder="Bread"
                            size={12}
                            value=""
                          />,
                        }
                      }
                    />,
                  },
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": null,
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": null,
                },
              },
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": WrapperComponent {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "children": <TextInputField
                      errors={
                        Array [
                          "Name is required.",
                        ]
                      }
                      label="Item Name"
                      name="name"
                      onChange={[MockFunction]}
                      placeholder="Bread"
                      size={12}
                      value=""
                    />,
                  },
                },
                "refs": Object {},
                "state": Object {
                  "context": null,
                  "mount": true,
                  "props": Object {
                    "children": <TextInputField
                      errors={
                        Array [
                          "Name is required.",
                        ]
                      }
                      label="Item Name"
                      name="name"
                      onChange={[MockFunction]}
                      placeholder="Bread"
                      size={12}
                      value=""
                    />,
                  },
                },
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": null,
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": BrowserRouter {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "history": Object {
                "action": "POP",
                "block": [Function],
                "createHref": [Function],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "push": [Function],
                "replace": [Function],
              },
              "props": Object {
                "children": <TextInputField
                  errors={
                    Array [
                      "Name is required.",
                    ]
                  }
                  label="Item Name"
                  name="name"
                  onChange={[MockFunction]}
                  placeholder="Bread"
                  size={12}
                  value=""
                />,
              },
              "refs": Object {},
              "state": null,
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 1,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": FiberNode {
            "_debugID": 52,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": FiberNode {
              "_debugID": 53,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 54,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 55,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": null,
                  "childExpirationTime": 0,
                  "effectTag": 0,
                  "elementType": "label",
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": "Item Name",
                    "htmlFor": "name",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": "Item Name",
                    "htmlFor": "name",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": FiberNode {
                    "_debugID": 56,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": null,
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "elementType": "input",
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 1,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "className": "form-control",
                      "id": "name",
                      "name": "name",
                      "onChange": [MockFunction],
                      "placeholder": "Bread",
                      "type": "text",
                      "value": "",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "className": "form-control",
                      "id": "name",
                      "name": "name",
                      "onChange": [MockFunction],
                      "placeholder": "Bread",
                      "type": "text",
                      "value": "",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": FiberNode {
                      "_debugID": 57,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 58,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": null,
                        "childExpirationTime": 0,
                        "effectTag": 0,
                        "elementType": "span",
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 0,
                        "key": "0",
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "Name is required.",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": "Name is required.",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": <span>
                          Name is required.
                        </span>,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "span",
                        "updateQueue": null,
                      },
                      "childExpirationTime": 0,
                      "effectTag": 0,
                      "elementType": "div",
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 2,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": Array [
                          <span>
                            Name is required.
                          </span>,
                        ],
                        "className": "error",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": Array [
                          <span>
                            Name is required.
                          </span>,
                        ],
                        "className": "error",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": <div
                        class="error"
                      >
                        <span>
                          Name is required.
                        </span>
                      </div>,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "stateNode": <input
                      class="form-control"
                      id="name"
                      name="name"
                      placeholder="Bread"
                      type="text"
                      value=""
                    />,
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": "input",
                    "updateQueue": null,
                  },
                  "stateNode": <label
                    for="name"
                  >
                    Item Name
                  </label>,
                  "tag": 5,
                  "treeBaseDuration": 0,
                  "type": "label",
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "effectTag": 0,
                "elementType": "div",
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <label
                      htmlFor="name"
                    >
                      Item Name
                    </label>,
                    <input
                      className="form-control"
                      id="name"
                      name="name"
                      onChange={[MockFunction]}
                      placeholder="Bread"
                      type="text"
                      value=""
                    />,
                    <div
                      className="error"
                    >
                      <span>
                        Name is required.
                      </span>
                    </div>,
                  ],
                  "className": "form-group col-md-12",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": Array [
                    <label
                      htmlFor="name"
                    >
                      Item Name
                    </label>,
                    <input
                      className="form-control"
                      id="name"
                      name="name"
                      onChange={[MockFunction]}
                      placeholder="Bread"
                      type="text"
                      value=""
                    />,
                    <div
                      className="error"
                    >
                      <span>
                        Name is required.
                      </span>
                    </div>,
                  ],
                  "className": "form-group col-md-12",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": <div
                  class="form-group col-md-12"
                >
                  <label
                    for="name"
                  >
                    Item Name
                  </label>
                  <input
                    class="form-control"
                    id="name"
                    name="name"
                    placeholder="Bread"
                    type="text"
                    value=""
                  />
                  <div
                    class="error"
                  >
                    <span>
                      Name is required.
                    </span>
                  </div>
                </div>,
                "tag": 5,
                "treeBaseDuration": 0,
                "type": "div",
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "effectTag": 0,
              "elementType": "div",
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": <div
                  className="form-group col-md-12"
                >
                  <label
                    htmlFor="name"
                  >
                    Item Name
                  </label>
                  <input
                    className="form-control"
                    id="name"
                    name="name"
                    onChange={[MockFunction]}
                    placeholder="Bread"
                    type="text"
                    value=""
                  />
                  <div
                    className="error"
                  >
                    <span>
                      Name is required.
                    </span>
                  </div>
                </div>,
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": <div
                  className="form-group col-md-12"
                >
                  <label
                    htmlFor="name"
                  >
                    Item Name
                  </label>
                  <input
                    className="form-control"
                    id="name"
                    name="name"
                    onChange={[MockFunction]}
                    placeholder="Bread"
                    type="text"
                    value=""
                  />
                  <div
                    className="error"
                  >
                    <span>
                      Name is required.
                    </span>
                  </div>
                </div>,
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": <div>
                <div
                  class="form-group col-md-12"
                >
                  <label
                    for="name"
                  >
                    Item Name
                  </label>
                  <input
                    class="form-control"
                    id="name"
                    name="name"
                    placeholder="Bread"
                    type="text"
                    value=""
                  />
                  <div
                    class="error"
                  >
                    <span>
                      Name is required.
                    </span>
                  </div>
                </div>
              </div>,
              "tag": 5,
              "treeBaseDuration": 0,
              "type": "div",
              "updateQueue": null,
            },
            "childExpirationTime": 0,
            "effectTag": 1,
            "elementType": [Function],
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "errors": Array [
                "Name is required.",
              ],
              "label": "Item Name",
              "name": "name",
              "onChange": [MockFunction],
              "placeholder": "Bread",
              "size": 12,
              "value": "",
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "errors": Array [
                "Name is required.",
              ],
              "label": "Item Name",
              "name": "name",
              "onChange": [MockFunction],
              "placeholder": "Bread",
              "size": 12,
              "value": "",
            },
            "ref": null,
            "return": [Circular],
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": null,
            "tag": 0,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "childExpirationTime": 0,
          "effectTag": 1,
          "elementType": [Function],
          "expirationTime": 0,
          "firstContextDependency": null,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "children": <TextInputField
              errors={
                Array [
                  "Name is required.",
                ]
              }
              label="Item Name"
              name="name"
              onChange={[MockFunction]}
              placeholder="Bread"
              size={12}
              value=""
            />,
            "history": Object {
              "action": "POP",
              "block": [Function],
              "createHref": [Function],
              "go": [Function],
              "goBack": [Function],
              "goForward": [Function],
              "length": 1,
              "listen": [Function],
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
              "push": [Function],
              "replace": [Function],
            },
          },
          "memoizedState": Object {
            "match": Object {
              "isExact": true,
              "params": Object {},
              "path": "/",
              "url": "/",
            },
          },
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "children": <TextInputField
              errors={
                Array [
                  "Name is required.",
                ]
              }
              label="Item Name"
              name="name"
              onChange={[MockFunction]}
              placeholder="Bread"
              size={12}
              value=""
            />,
            "history": Object {
              "action": "POP",
              "block": [Function],
              "createHref": [Function],
              "go": [Function],
              "goBack": [Function],
              "goForward": [Function],
              "length": 1,
              "listen": [Function],
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
              "push": [Function],
              "replace": [Function],
            },
          },
          "ref": null,
          "return": FiberNode {
            "_debugID": 50,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": FiberNode {
              "_debugID": 49,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "children": <TextInputField
                    errors={
                      Array [
                        "Name is required.",
                      ]
                    }
                    label="Item Name"
                    name="name"
                    onChange={[MockFunction]}
                    placeholder="Bread"
                    size={12}
                    value=""
                  />,
                },
              },
              "memoizedState": Object {
                "context": null,
                "mount": true,
                "props": Object {
                  "children": <TextInputField
                    errors={
                      Array [
                        "Name is required.",
                      ]
                    }
                    label="Item Name"
                    name="name"
                    onChange={[MockFunction]}
                    placeholder="Bread"
                    size={12}
                    value=""
                  />,
                },
              },
              "mode": 0,
              "nextEffect": FiberNode {
                "_debugID": 47,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": FiberNode {
                  "_debugID": 47,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": [Circular],
                  "child": null,
                  "childExpirationTime": 0,
                  "effectTag": 0,
                  "elementType": null,
                  "expirationTime": 1073741823,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": null,
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": Object {
                    "containerInfo": <div>
                      <div>
                        <div
                          class="form-group col-md-12"
                        >
                          <label
                            for="name"
                          >
                            Item Name
                          </label>
                          <input
                            class="form-control"
                            id="name"
                            name="name"
                            placeholder="Bread"
                            type="text"
                            value=""
                          />
                          <div
                            class="error"
                          >
                            <span>
                              Name is required.
                            </span>
                          </div>
                        </div>
                      </div>
                    </div>,
                    "context": Object {},
                    "current": [Circular],
                    "didError": false,
                    "earliestPendingTime": 0,
                    "earliestSuspendedTime": 0,
                    "expirationTime": 0,
                    "finishedWork": null,
                    "firstBatch": null,
                    "hydrate": false,
                    "interactionThreadID": 12,
                    "latestPendingTime": 0,
                    "latestPingedTime": 0,
                    "latestSuspendedTime": 0,
                    "memoizedInteractions": Set {},
                    "nextExpirationTimeToWorkOn": 0,
                    "nextScheduledRoot": null,
                    "pendingChildren": null,
                    "pendingCommitExpirationTime": 0,
                    "pendingContext": null,
                    "pendingInteractionMap": Map {},
                    "timeoutHandle": -1,
                  },
                  "tag": 3,
                  "treeBaseDuration": 0,
                  "type": null,
                  "updateQueue": Object {
                    "baseState": null,
                    "firstCapturedEffect": null,
                    "firstCapturedUpdate": null,
                    "firstEffect": null,
                    "firstUpdate": Object {
                      "callback": null,
                      "expirationTime": 1073741823,
                      "next": null,
                      "nextEffect": null,
                      "payload": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "children": <TextInputField
                                errors={
                                  Array [
                                    "Name is required.",
                                  ]
                                }
                                label="Item Name"
                                name="name"
                                onChange={[MockFunction]}
                                placeholder="Bread"
                                size={12}
                                value=""
                              />,
                            }
                          }
                        />,
                      },
                      "tag": 0,
                    },
                    "lastCapturedEffect": null,
                    "lastCapturedUpdate": null,
                    "lastEffect": null,
                    "lastUpdate": Object {
                      "callback": null,
                      "expirationTime": 1073741823,
                      "next": null,
                      "nextEffect": null,
                      "payload": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "children": <TextInputField
                                errors={
                                  Array [
                                    "Name is required.",
                                  ]
                                }
                                label="Item Name"
                                name="name"
                                onChange={[MockFunction]}
                                placeholder="Bread"
                                size={12}
                                value=""
                              />,
                            }
                          }
                        />,
                      },
                      "tag": 0,
                    },
                  },
                },
                "child": [Circular],
                "childExpirationTime": 0,
                "effectTag": 32,
                "elementType": null,
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": null,
                "memoizedState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                      Object {
                        "children": <TextInputField
                          errors={
                            Array [
                              "Name is required.",
                            ]
                          }
                          label="Item Name"
                          name="name"
                          onChange={[MockFunction]}
                          placeholder="Bread"
                          size={12}
                          value=""
                        />,
                      }
                    }
                  />,
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div>
                      <div
                        class="form-group col-md-12"
                      >
                        <label
                          for="name"
                        >
                          Item Name
                        </label>
                        <input
                          class="form-control"
                          id="name"
                          name="name"
                          placeholder="Bread"
                          type="text"
                          value=""
                        />
                        <div
                          class="error"
                        >
                          <span>
                            Name is required.
                          </span>
                        </div>
                      </div>
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "didError": false,
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "expirationTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "interactionThreadID": 12,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextExpirationTimeToWorkOn": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "timeoutHandle": -1,
                },
                "tag": 3,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "children": <TextInputField
                            errors={
                              Array [
                                "Name is required.",
                              ]
                            }
                            label="Item Name"
                            name="name"
                            onChange={[MockFunction]}
                            placeholder="Bread"
                            size={12}
                            value=""
                          />,
                        }
                      }
                    />,
                  },
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": null,
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": null,
                },
              },
              "pendingProps": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "children": <TextInputField
                    errors={
                      Array [
                        "Name is required.",
                      ]
                    }
                    label="Item Name"
                    name="name"
                    onChange={[MockFunction]}
                    placeholder="Bread"
                    size={12}
                    value=""
                  />,
                },
              },
              "ref": null,
              "return": FiberNode {
                "_debugID": 47,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": FiberNode {
                  "_debugID": 47,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": [Circular],
                  "child": null,
                  "childExpirationTime": 0,
                  "effectTag": 0,
                  "elementType": null,
                  "expirationTime": 1073741823,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": null,
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": Object {
                    "containerInfo": <div>
                      <div>
                        <div
                          class="form-group col-md-12"
                        >
                          <label
                            for="name"
                          >
                            Item Name
                          </label>
                          <input
                            class="form-control"
                            id="name"
                            name="name"
                            placeholder="Bread"
                            type="text"
                            value=""
                          />
                          <div
                            class="error"
                          >
                            <span>
                              Name is required.
                            </span>
                          </div>
                        </div>
                      </div>
                    </div>,
                    "context": Object {},
                    "current": [Circular],
                    "didError": false,
                    "earliestPendingTime": 0,
                    "earliestSuspendedTime": 0,
                    "expirationTime": 0,
                    "finishedWork": null,
                    "firstBatch": null,
                    "hydrate": false,
                    "interactionThreadID": 12,
                    "latestPendingTime": 0,
                    "latestPingedTime": 0,
                    "latestSuspendedTime": 0,
                    "memoizedInteractions": Set {},
                    "nextExpirationTimeToWorkOn": 0,
                    "nextScheduledRoot": null,
                    "pendingChildren": null,
                    "pendingCommitExpirationTime": 0,
                    "pendingContext": null,
                    "pendingInteractionMap": Map {},
                    "timeoutHandle": -1,
                  },
                  "tag": 3,
                  "treeBaseDuration": 0,
                  "type": null,
                  "updateQueue": Object {
                    "baseState": null,
                    "firstCapturedEffect": null,
                    "firstCapturedUpdate": null,
                    "firstEffect": null,
                    "firstUpdate": Object {
                      "callback": null,
                      "expirationTime": 1073741823,
                      "next": null,
                      "nextEffect": null,
                      "payload": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "children": <TextInputField
                                errors={
                                  Array [
                                    "Name is required.",
                                  ]
                                }
                                label="Item Name"
                                name="name"
                                onChange={[MockFunction]}
                                placeholder="Bread"
                                size={12}
                                value=""
                              />,
                            }
                          }
                        />,
                      },
                      "tag": 0,
                    },
                    "lastCapturedEffect": null,
                    "lastCapturedUpdate": null,
                    "lastEffect": null,
                    "lastUpdate": Object {
                      "callback": null,
                      "expirationTime": 1073741823,
                      "next": null,
                      "nextEffect": null,
                      "payload": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "children": <TextInputField
                                errors={
                                  Array [
                                    "Name is required.",
                                  ]
                                }
                                label="Item Name"
                                name="name"
                                onChange={[MockFunction]}
                                placeholder="Bread"
                                size={12}
                                value=""
                              />,
                            }
                          }
                        />,
                      },
                      "tag": 0,
                    },
                  },
                },
                "child": [Circular],
                "childExpirationTime": 0,
                "effectTag": 32,
                "elementType": null,
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": null,
                "memoizedState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                      Object {
                        "children": <TextInputField
                          errors={
                            Array [
                              "Name is required.",
                            ]
                          }
                          label="Item Name"
                          name="name"
                          onChange={[MockFunction]}
                          placeholder="Bread"
                          size={12}
                          value=""
                        />,
                      }
                    }
                  />,
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div>
                      <div
                        class="form-group col-md-12"
                      >
                        <label
                          for="name"
                        >
                          Item Name
                        </label>
                        <input
                          class="form-control"
                          id="name"
                          name="name"
                          placeholder="Bread"
                          type="text"
                          value=""
                        />
                        <div
                          class="error"
                        >
                          <span>
                            Name is required.
                          </span>
                        </div>
                      </div>
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "didError": false,
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "expirationTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "interactionThreadID": 12,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextExpirationTimeToWorkOn": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "timeoutHandle": -1,
                },
                "tag": 3,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "children": <TextInputField
                            errors={
                              Array [
                                "Name is required.",
                              ]
                            }
                            label="Item Name"
                            name="name"
                            onChange={[MockFunction]}
                            placeholder="Bread"
                            size={12}
                            value=""
                          />,
                        }
                      }
                    />,
                  },
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": null,
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": null,
                },
              },
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": WrapperComponent {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "children": <TextInputField
                      errors={
                        Array [
                          "Name is required.",
                        ]
                      }
                      label="Item Name"
                      name="name"
                      onChange={[MockFunction]}
                      placeholder="Bread"
                      size={12}
                      value=""
                    />,
                  },
                },
                "refs": Object {},
                "state": Object {
                  "context": null,
                  "mount": true,
                  "props": Object {
                    "children": <TextInputField
                      errors={
                        Array [
                          "Name is required.",
                        ]
                      }
                      label="Item Name"
                      name="name"
                      onChange={[MockFunction]}
                      placeholder="Bread"
                      size={12}
                      value=""
                    />,
                  },
                },
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": null,
            },
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "effectTag": 1,
            "elementType": [Function],
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": <TextInputField
                errors={
                  Array [
                    "Name is required.",
                  ]
                }
                label="Item Name"
                name="name"
                onChange={[MockFunction]}
                placeholder="Bread"
                size={12}
                value=""
              />,
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": <TextInputField
                errors={
                  Array [
                    "Name is required.",
                  ]
                }
                label="Item Name"
                name="name"
                onChange={[MockFunction]}
                placeholder="Bread"
                size={12}
                value=""
              />,
            },
            "ref": null,
            "return": FiberNode {
              "_debugID": 49,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "children": <TextInputField
                    errors={
                      Array [
                        "Name is required.",
                      ]
                    }
                    label="Item Name"
                    name="name"
                    onChange={[MockFunction]}
                    placeholder="Bread"
                    size={12}
                    value=""
                  />,
                },
              },
              "memoizedState": Object {
                "context": null,
                "mount": true,
                "props": Object {
                  "children": <TextInputField
                    errors={
                      Array [
                        "Name is required.",
                      ]
                    }
                    label="Item Name"
                    name="name"
                    onChange={[MockFunction]}
                    placeholder="Bread"
                    size={12}
                    value=""
                  />,
                },
              },
              "mode": 0,
              "nextEffect": FiberNode {
                "_debugID": 47,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": FiberNode {
                  "_debugID": 47,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": [Circular],
                  "child": null,
                  "childExpirationTime": 0,
                  "effectTag": 0,
                  "elementType": null,
                  "expirationTime": 1073741823,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": null,
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": Object {
                    "containerInfo": <div>
                      <div>
                        <div
                          class="form-group col-md-12"
                        >
                          <label
                            for="name"
                          >
                            Item Name
                          </label>
                          <input
                            class="form-control"
                            id="name"
                            name="name"
                            placeholder="Bread"
                            type="text"
                            value=""
                          />
                          <div
                            class="error"
                          >
                            <span>
                              Name is required.
                            </span>
                          </div>
                        </div>
                      </div>
                    </div>,
                    "context": Object {},
                    "current": [Circular],
                    "didError": false,
                    "earliestPendingTime": 0,
                    "earliestSuspendedTime": 0,
                    "expirationTime": 0,
                    "finishedWork": null,
                    "firstBatch": null,
                    "hydrate": false,
                    "interactionThreadID": 12,
                    "latestPendingTime": 0,
                    "latestPingedTime": 0,
                    "latestSuspendedTime": 0,
                    "memoizedInteractions": Set {},
                    "nextExpirationTimeToWorkOn": 0,
                    "nextScheduledRoot": null,
                    "pendingChildren": null,
                    "pendingCommitExpirationTime": 0,
                    "pendingContext": null,
                    "pendingInteractionMap": Map {},
                    "timeoutHandle": -1,
                  },
                  "tag": 3,
                  "treeBaseDuration": 0,
                  "type": null,
                  "updateQueue": Object {
                    "baseState": null,
                    "firstCapturedEffect": null,
                    "firstCapturedUpdate": null,
                    "firstEffect": null,
                    "firstUpdate": Object {
                      "callback": null,
                      "expirationTime": 1073741823,
                      "next": null,
                      "nextEffect": null,
                      "payload": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "children": <TextInputField
                                errors={
                                  Array [
                                    "Name is required.",
                                  ]
                                }
                                label="Item Name"
                                name="name"
                                onChange={[MockFunction]}
                                placeholder="Bread"
                                size={12}
                                value=""
                              />,
                            }
                          }
                        />,
                      },
                      "tag": 0,
                    },
                    "lastCapturedEffect": null,
                    "lastCapturedUpdate": null,
                    "lastEffect": null,
                    "lastUpdate": Object {
                      "callback": null,
                      "expirationTime": 1073741823,
                      "next": null,
                      "nextEffect": null,
                      "payload": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "children": <TextInputField
                                errors={
                                  Array [
                                    "Name is required.",
                                  ]
                                }
                                label="Item Name"
                                name="name"
                                onChange={[MockFunction]}
                                placeholder="Bread"
                                size={12}
                                value=""
                              />,
                            }
                          }
                        />,
                      },
                      "tag": 0,
                    },
                  },
                },
                "child": [Circular],
                "childExpirationTime": 0,
                "effectTag": 32,
                "elementType": null,
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": null,
                "memoizedState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                      Object {
                        "children": <TextInputField
                          errors={
                            Array [
                              "Name is required.",
                            ]
                          }
                          label="Item Name"
                          name="name"
                          onChange={[MockFunction]}
                          placeholder="Bread"
                          size={12}
                          value=""
                        />,
                      }
                    }
                  />,
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div>
                      <div
                        class="form-group col-md-12"
                      >
                        <label
                          for="name"
                        >
                          Item Name
                        </label>
                        <input
                          class="form-control"
                          id="name"
                          name="name"
                          placeholder="Bread"
                          type="text"
                          value=""
                        />
                        <div
                          class="error"
                        >
                          <span>
                            Name is required.
                          </span>
                        </div>
                      </div>
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "didError": false,
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "expirationTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "interactionThreadID": 12,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextExpirationTimeToWorkOn": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "timeoutHandle": -1,
                },
                "tag": 3,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "children": <TextInputField
                            errors={
                              Array [
                                "Name is required.",
                              ]
                            }
                            label="Item Name"
                            name="name"
                            onChange={[MockFunction]}
                            placeholder="Bread"
                            size={12}
                            value=""
                          />,
                        }
                      }
                    />,
                  },
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": null,
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": null,
                },
              },
              "pendingProps": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "children": <TextInputField
                    errors={
                      Array [
                        "Name is required.",
                      ]
                    }
                    label="Item Name"
                    name="name"
                    onChange={[MockFunction]}
                    placeholder="Bread"
                    size={12}
                    value=""
                  />,
                },
              },
              "ref": null,
              "return": FiberNode {
                "_debugID": 47,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": FiberNode {
                  "_debugID": 47,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": [Circular],
                  "child": null,
                  "childExpirationTime": 0,
                  "effectTag": 0,
                  "elementType": null,
                  "expirationTime": 1073741823,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": null,
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": Object {
                    "containerInfo": <div>
                      <div>
                        <div
                          class="form-group col-md-12"
                        >
                          <label
                            for="name"
                          >
                            Item Name
                          </label>
                          <input
                            class="form-control"
                            id="name"
                            name="name"
                            placeholder="Bread"
                            type="text"
                            value=""
                          />
                          <div
                            class="error"
                          >
                            <span>
                              Name is required.
                            </span>
                          </div>
                        </div>
                      </div>
                    </div>,
                    "context": Object {},
                    "current": [Circular],
                    "didError": false,
                    "earliestPendingTime": 0,
                    "earliestSuspendedTime": 0,
                    "expirationTime": 0,
                    "finishedWork": null,
                    "firstBatch": null,
                    "hydrate": false,
                    "interactionThreadID": 12,
                    "latestPendingTime": 0,
                    "latestPingedTime": 0,
                    "latestSuspendedTime": 0,
                    "memoizedInteractions": Set {},
                    "nextExpirationTimeToWorkOn": 0,
                    "nextScheduledRoot": null,
                    "pendingChildren": null,
                    "pendingCommitExpirationTime": 0,
                    "pendingContext": null,
                    "pendingInteractionMap": Map {},
                    "timeoutHandle": -1,
                  },
                  "tag": 3,
                  "treeBaseDuration": 0,
                  "type": null,
                  "updateQueue": Object {
                    "baseState": null,
                    "firstCapturedEffect": null,
                    "firstCapturedUpdate": null,
                    "firstEffect": null,
                    "firstUpdate": Object {
                      "callback": null,
                      "expirationTime": 1073741823,
                      "next": null,
                      "nextEffect": null,
                      "payload": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "children": <TextInputField
                                errors={
                                  Array [
                                    "Name is required.",
                                  ]
                                }
                                label="Item Name"
                                name="name"
                                onChange={[MockFunction]}
                                placeholder="Bread"
                                size={12}
                                value=""
                              />,
                            }
                          }
                        />,
                      },
                      "tag": 0,
                    },
                    "lastCapturedEffect": null,
                    "lastCapturedUpdate": null,
                    "lastEffect": null,
                    "lastUpdate": Object {
                      "callback": null,
                      "expirationTime": 1073741823,
                      "next": null,
                      "nextEffect": null,
                      "payload": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "children": <TextInputField
                                errors={
                                  Array [
                                    "Name is required.",
                                  ]
                                }
                                label="Item Name"
                                name="name"
                                onChange={[MockFunction]}
                                placeholder="Bread"
                                size={12}
                                value=""
                              />,
                            }
                          }
                        />,
                      },
                      "tag": 0,
                    },
                  },
                },
                "child": [Circular],
                "childExpirationTime": 0,
                "effectTag": 32,
                "elementType": null,
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": null,
                "memoizedState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                      Object {
                        "children": <TextInputField
                          errors={
                            Array [
                              "Name is required.",
                            ]
                          }
                          label="Item Name"
                          name="name"
                          onChange={[MockFunction]}
                          placeholder="Bread"
                          size={12}
                          value=""
                        />,
                      }
                    }
                  />,
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div>
                      <div
                        class="form-group col-md-12"
                      >
                        <label
                          for="name"
                        >
                          Item Name
                        </label>
                        <input
                          class="form-control"
                          id="name"
                          name="name"
                          placeholder="Bread"
                          type="text"
                          value=""
                        />
                        <div
                          class="error"
                        >
                          <span>
                            Name is required.
                          </span>
                        </div>
                      </div>
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "didError": false,
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "expirationTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "interactionThreadID": 12,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextExpirationTimeToWorkOn": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "timeoutHandle": -1,
                },
                "tag": 3,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "children": <TextInputField
                            errors={
                              Array [
                                "Name is required.",
                              ]
                            }
                            label="Item Name"
                            name="name"
                            onChange={[MockFunction]}
                            placeholder="Bread"
                            size={12}
                            value=""
                          />,
                        }
                      }
                    />,
                  },
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": null,
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": null,
                },
              },
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": WrapperComponent {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "children": <TextInputField
                      errors={
                        Array [
                          "Name is required.",
                        ]
                      }
                      label="Item Name"
                      name="name"
                      onChange={[MockFunction]}
                      placeholder="Bread"
                      size={12}
                      value=""
                    />,
                  },
                },
                "refs": Object {},
                "state": Object {
                  "context": null,
                  "mount": true,
                  "props": Object {
                    "children": <TextInputField
                      errors={
                        Array [
                          "Name is required.",
                        ]
                      }
                      label="Item Name"
                      name="name"
                      onChange={[MockFunction]}
                      placeholder="Bread"
                      size={12}
                      value=""
                    />,
                  },
                },
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": null,
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": BrowserRouter {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "history": Object {
                "action": "POP",
                "block": [Function],
                "createHref": [Function],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "push": [Function],
                "replace": [Function],
              },
              "props": Object {
                "children": <TextInputField
                  errors={
                    Array [
                      "Name is required.",
                    ]
                  }
                  label="Item Name"
                  name="name"
                  onChange={[MockFunction]}
                  placeholder="Bread"
                  size={12}
                  value=""
                />,
              },
              "refs": Object {},
              "state": null,
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 1,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": [Circular],
          "tag": 1,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "_reactInternalInstance": Object {},
        "context": Object {
          "router": undefined,
        },
        "props": Object {
          "children": <TextInputField
            errors={
              Array [
                "Name is required.",
              ]
            }
            label="Item Name"
            name="name"
            onChange={[MockFunction]}
            placeholder="Bread"
            size={12}
            value=""
          />,
          "history": Object {
            "action": "POP",
            "block": [Function],
            "createHref": [Function],
            "go": [Function],
            "goBack": [Function],
            "goForward": [Function],
            "length": 1,
            "listen": [Function],
            "location": Object {
              "hash": "",
              "pathname": "/",
              "search": "",
              "state": undefined,
            },
            "push": [Function],
            "replace": [Function],
          },
        },
        "refs": Object {},
        "state": Object {
          "match": Object {
            "isExact": true,
            "params": Object {},
            "path": "/",
            "url": "/",
          },
        },
        "unlisten": [Function],
        "updater": Object {
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
        },
      },
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <TextInputField
          errors={
            Array [
              "Name is required.",
            ]
          }
          label="Item Name"
          name="name"
          onChange={[MockFunction]}
          placeholder="Bread"
          size={12}
          value=""
        />,
        "history": Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "errors": Array [
            "Name is required.",
          ],
          "label": "Item Name",
          "name": "name",
          "onChange": [MockFunction],
          "placeholder": "Bread",
          "size": 12,
          "value": "",
        },
        "ref": null,
        "rendered": Object {
          "instance": <div>
            <div
              class="form-group col-md-12"
            >
              <label
                for="name"
              >
                Item Name
              </label>
              <input
                class="form-control"
                id="name"
                name="name"
                placeholder="Bread"
                type="text"
                value=""
              />
              <div
                class="error"
              >
                <span>
                  Name is required.
                </span>
              </div>
            </div>
          </div>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="form-group col-md-12"
            >
              <label
                htmlFor="name"
              >
                Item Name
              </label>
              <input
                className="form-control"
                id="name"
                name="name"
                onChange={[MockFunction]}
                placeholder="Bread"
                type="text"
                value=""
              />
              <div
                className="error"
              >
                <span>
                  Name is required.
                </span>
              </div>
            </div>,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": <div
                class="form-group col-md-12"
              >
                <label
                  for="name"
                >
                  Item Name
                </label>
                <input
                  class="form-control"
                  id="name"
                  name="name"
                  placeholder="Bread"
                  type="text"
                  value=""
                />
                <div
                  class="error"
                >
                  <span>
                    Name is required.
                  </span>
                </div>
              </div>,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <label
                    htmlFor="name"
                  >
                    Item Name
                  </label>,
                  <input
                    className="form-control"
                    id="name"
                    name="name"
                    onChange={[MockFunction]}
                    placeholder="Bread"
                    type="text"
                    value=""
                  />,
                  <div
                    className="error"
                  >
                    <span>
                      Name is required.
                    </span>
                  </div>,
                ],
                "className": "form-group col-md-12",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": <label
                    for="name"
                  >
                    Item Name
                  </label>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Item Name",
                    "htmlFor": "name",
                  },
                  "ref": null,
                  "rendered": Array [
                    "Item Name",
                  ],
                  "type": "label",
                },
                Object {
                  "instance": <input
                    class="form-control"
                    id="name"
                    name="name"
                    placeholder="Bread"
                    type="text"
                    value=""
                  />,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "form-control",
                    "id": "name",
                    "name": "name",
                    "onChange": [MockFunction],
                    "placeholder": "Bread",
                    "type": "text",
                    "value": "",
                  },
                  "ref": null,
                  "rendered": Array [
                    undefined,
                  ],
                  "type": "input",
                },
                Object {
                  "instance": <div
                    class="error"
                  >
                    <span>
                      Name is required.
                    </span>
                  </div>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <span>
                        Name is required.
                      </span>,
                    ],
                    "className": "error",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": <span>
                        Name is required.
                      </span>,
                      "key": "0",
                      "nodeType": "host",
                      "props": Object {
                        "children": "Name is required.",
                      },
                      "ref": null,
                      "rendered": Array [
                        "Name is required.",
                      ],
                      "type": "span",
                    },
                  ],
                  "type": "div",
                },
              ],
              "type": "div",
            },
          ],
          "type": "div",
        },
        "type": [Function],
      },
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": BrowserRouter {
        "_reactInternalFiber": FiberNode {
          "_debugID": 50,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": FiberNode {
            "_debugID": 49,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "effectTag": 1,
            "elementType": [Function],
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "children": <TextInputField
                  errors={
                    Array [
                      "Name is required.",
                    ]
                  }
                  label="Item Name"
                  name="name"
                  onChange={[MockFunction]}
                  placeholder="Bread"
                  size={12}
                  value=""
                />,
              },
            },
            "memoizedState": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "children": <TextInputField
                  errors={
                    Array [
                      "Name is required.",
                    ]
                  }
                  label="Item Name"
                  name="name"
                  onChange={[MockFunction]}
                  placeholder="Bread"
                  size={12}
                  value=""
                />,
              },
            },
            "mode": 0,
            "nextEffect": FiberNode {
              "_debugID": 47,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": FiberNode {
                "_debugID": 47,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": [Circular],
                "child": null,
                "childExpirationTime": 0,
                "effectTag": 0,
                "elementType": null,
                "expirationTime": 1073741823,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div>
                      <div
                        class="form-group col-md-12"
                      >
                        <label
                          for="name"
                        >
                          Item Name
                        </label>
                        <input
                          class="form-control"
                          id="name"
                          name="name"
                          placeholder="Bread"
                          type="text"
                          value=""
                        />
                        <div
                          class="error"
                        >
                          <span>
                            Name is required.
                          </span>
                        </div>
                      </div>
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "didError": false,
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "expirationTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "interactionThreadID": 12,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextExpirationTimeToWorkOn": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "timeoutHandle": -1,
                },
                "tag": 3,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "children": <TextInputField
                              errors={
                                Array [
                                  "Name is required.",
                                ]
                              }
                              label="Item Name"
                              name="name"
                              onChange={[MockFunction]}
                              placeholder="Bread"
                              size={12}
                              value=""
                            />,
                          }
                        }
                      />,
                    },
                    "tag": 0,
                  },
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "children": <TextInputField
                              errors={
                                Array [
                                  "Name is required.",
                                ]
                              }
                              label="Item Name"
                              name="name"
                              onChange={[MockFunction]}
                              placeholder="Bread"
                              size={12}
                              value=""
                            />,
                          }
                        }
                      />,
                    },
                    "tag": 0,
                  },
                },
              },
              "child": [Circular],
              "childExpirationTime": 0,
              "effectTag": 32,
              "elementType": null,
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "children": <TextInputField
                        errors={
                          Array [
                            "Name is required.",
                          ]
                        }
                        label="Item Name"
                        name="name"
                        onChange={[MockFunction]}
                        placeholder="Bread"
                        size={12}
                        value=""
                      />,
                    }
                  }
                />,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div>
                    <div
                      class="form-group col-md-12"
                    >
                      <label
                        for="name"
                      >
                        Item Name
                      </label>
                      <input
                        class="form-control"
                        id="name"
                        name="name"
                        placeholder="Bread"
                        type="text"
                        value=""
                      />
                      <div
                        class="error"
                      >
                        <span>
                          Name is required.
                        </span>
                      </div>
                    </div>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 12,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                      Object {
                        "children": <TextInputField
                          errors={
                            Array [
                              "Name is required.",
                            ]
                          }
                          label="Item Name"
                          name="name"
                          onChange={[MockFunction]}
                          placeholder="Bread"
                          size={12}
                          value=""
                        />,
                      }
                    }
                  />,
                },
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": null,
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": null,
              },
            },
            "pendingProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "children": <TextInputField
                  errors={
                    Array [
                      "Name is required.",
                    ]
                  }
                  label="Item Name"
                  name="name"
                  onChange={[MockFunction]}
                  placeholder="Bread"
                  size={12}
                  value=""
                />,
              },
            },
            "ref": null,
            "return": FiberNode {
              "_debugID": 47,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": FiberNode {
                "_debugID": 47,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": [Circular],
                "child": null,
                "childExpirationTime": 0,
                "effectTag": 0,
                "elementType": null,
                "expirationTime": 1073741823,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div>
                      <div
                        class="form-group col-md-12"
                      >
                        <label
                          for="name"
                        >
                          Item Name
                        </label>
                        <input
                          class="form-control"
                          id="name"
                          name="name"
                          placeholder="Bread"
                          type="text"
                          value=""
                        />
                        <div
                          class="error"
                        >
                          <span>
                            Name is required.
                          </span>
                        </div>
                      </div>
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "didError": false,
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "expirationTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "interactionThreadID": 12,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextExpirationTimeToWorkOn": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "timeoutHandle": -1,
                },
                "tag": 3,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "children": <TextInputField
                              errors={
                                Array [
                                  "Name is required.",
                                ]
                              }
                              label="Item Name"
                              name="name"
                              onChange={[MockFunction]}
                              placeholder="Bread"
                              size={12}
                              value=""
                            />,
                          }
                        }
                      />,
                    },
                    "tag": 0,
                  },
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "children": <TextInputField
                              errors={
                                Array [
                                  "Name is required.",
                                ]
                              }
                              label="Item Name"
                              name="name"
                              onChange={[MockFunction]}
                              placeholder="Bread"
                              size={12}
                              value=""
                            />,
                          }
                        }
                      />,
                    },
                    "tag": 0,
                  },
                },
              },
              "child": [Circular],
              "childExpirationTime": 0,
              "effectTag": 32,
              "elementType": null,
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "children": <TextInputField
                        errors={
                          Array [
                            "Name is required.",
                          ]
                        }
                        label="Item Name"
                        name="name"
                        onChange={[MockFunction]}
                        placeholder="Bread"
                        size={12}
                        value=""
                      />,
                    }
                  }
                />,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div>
                    <div
                      class="form-group col-md-12"
                    >
                      <label
                        for="name"
                      >
                        Item Name
                      </label>
                      <input
                        class="form-control"
                        id="name"
                        name="name"
                        placeholder="Bread"
                        type="text"
                        value=""
                      />
                      <div
                        class="error"
                      >
                        <span>
                          Name is required.
                        </span>
                      </div>
                    </div>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 12,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                      Object {
                        "children": <TextInputField
                          errors={
                            Array [
                              "Name is required.",
                            ]
                          }
                          label="Item Name"
                          name="name"
                          onChange={[MockFunction]}
                          placeholder="Bread"
                          size={12}
                          value=""
                        />,
                      }
                    }
                  />,
                },
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": null,
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": null,
              },
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": WrapperComponent {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "children": <TextInputField
                    errors={
                      Array [
                        "Name is required.",
                      ]
                    }
                    label="Item Name"
                    name="name"
                    onChange={[MockFunction]}
                    placeholder="Bread"
                    size={12}
                    value=""
                  />,
                },
              },
              "refs": Object {},
              "state": Object {
                "context": null,
                "mount": true,
                "props": Object {
                  "children": <TextInputField
                    errors={
                      Array [
                        "Name is required.",
                      ]
                    }
                    label="Item Name"
                    name="name"
                    onChange={[MockFunction]}
                    placeholder="Bread"
                    size={12}
                    value=""
                  />,
                },
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 1,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": FiberNode {
            "_debugID": 51,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": FiberNode {
              "_debugID": 52,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 53,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 54,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 55,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": null,
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "elementType": "label",
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "Item Name",
                      "htmlFor": "name",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": "Item Name",
                      "htmlFor": "name",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": FiberNode {
                      "_debugID": 56,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": null,
                      "childExpirationTime": 0,
                      "effectTag": 0,
                      "elementType": "input",
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 1,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "className": "form-control",
                        "id": "name",
                        "name": "name",
                        "onChange": [MockFunction],
                        "placeholder": "Bread",
                        "type": "text",
                        "value": "",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "className": "form-control",
                        "id": "name",
                        "name": "name",
                        "onChange": [MockFunction],
                        "placeholder": "Bread",
                        "type": "text",
                        "value": "",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": FiberNode {
                        "_debugID": 57,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 58,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childExpirationTime": 0,
                          "effectTag": 0,
                          "elementType": "span",
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 0,
                          "key": "0",
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": "Name is required.",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": "Name is required.",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": <span>
                            Name is required.
                          </span>,
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": "span",
                          "updateQueue": null,
                        },
                        "childExpirationTime": 0,
                        "effectTag": 0,
                        "elementType": "div",
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 2,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": Array [
                            <span>
                              Name is required.
                            </span>,
                          ],
                          "className": "error",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": Array [
                            <span>
                              Name is required.
                            </span>,
                          ],
                          "className": "error",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": <div
                          class="error"
                        >
                          <span>
                            Name is required.
                          </span>
                        </div>,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "stateNode": <input
                        class="form-control"
                        id="name"
                        name="name"
                        placeholder="Bread"
                        type="text"
                        value=""
                      />,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "input",
                      "updateQueue": null,
                    },
                    "stateNode": <label
                      for="name"
                    >
                      Item Name
                    </label>,
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": "label",
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "effectTag": 0,
                  "elementType": "div",
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <label
                        htmlFor="name"
                      >
                        Item Name
                      </label>,
                      <input
                        className="form-control"
                        id="name"
                        name="name"
                        onChange={[MockFunction]}
                        placeholder="Bread"
                        type="text"
                        value=""
                      />,
                      <div
                        className="error"
                      >
                        <span>
                          Name is required.
                        </span>
                      </div>,
                    ],
                    "className": "form-group col-md-12",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": Array [
                      <label
                        htmlFor="name"
                      >
                        Item Name
                      </label>,
                      <input
                        className="form-control"
                        id="name"
                        name="name"
                        onChange={[MockFunction]}
                        placeholder="Bread"
                        type="text"
                        value=""
                      />,
                      <div
                        className="error"
                      >
                        <span>
                          Name is required.
                        </span>
                      </div>,
                    ],
                    "className": "form-group col-md-12",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": <div
                    class="form-group col-md-12"
                  >
                    <label
                      for="name"
                    >
                      Item Name
                    </label>
                    <input
                      class="form-control"
                      id="name"
                      name="name"
                      placeholder="Bread"
                      type="text"
                      value=""
                    />
                    <div
                      class="error"
                    >
                      <span>
                        Name is required.
                      </span>
                    </div>
                  </div>,
                  "tag": 5,
                  "treeBaseDuration": 0,
                  "type": "div",
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "effectTag": 0,
                "elementType": "div",
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": <div
                    className="form-group col-md-12"
                  >
                    <label
                      htmlFor="name"
                    >
                      Item Name
                    </label>
                    <input
                      className="form-control"
                      id="name"
                      name="name"
                      onChange={[MockFunction]}
                      placeholder="Bread"
                      type="text"
                      value=""
                    />
                    <div
                      className="error"
                    >
                      <span>
                        Name is required.
                      </span>
                    </div>
                  </div>,
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": <div
                    className="form-group col-md-12"
                  >
                    <label
                      htmlFor="name"
                    >
                      Item Name
                    </label>
                    <input
                      className="form-control"
                      id="name"
                      name="name"
                      onChange={[MockFunction]}
                      placeholder="Bread"
                      type="text"
                      value=""
                    />
                    <div
                      className="error"
                    >
                      <span>
                        Name is required.
                      </span>
                    </div>
                  </div>,
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": <div>
                  <div
                    class="form-group col-md-12"
                  >
                    <label
                      for="name"
                    >
                      Item Name
                    </label>
                    <input
                      class="form-control"
                      id="name"
                      name="name"
                      placeholder="Bread"
                      type="text"
                      value=""
                    />
                    <div
                      class="error"
                    >
                      <span>
                        Name is required.
                      </span>
                    </div>
                  </div>
                </div>,
                "tag": 5,
                "treeBaseDuration": 0,
                "type": "div",
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "errors": Array [
                  "Name is required.",
                ],
                "label": "Item Name",
                "name": "name",
                "onChange": [MockFunction],
                "placeholder": "Bread",
                "size": 12,
                "value": "",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "errors": Array [
                  "Name is required.",
                ],
                "label": "Item Name",
                "name": "name",
                "onChange": [MockFunction],
                "placeholder": "Bread",
                "size": 12,
                "value": "",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 0,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": null,
            },
            "childExpirationTime": 0,
            "effectTag": 1,
            "elementType": [Function],
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": <TextInputField
                errors={
                  Array [
                    "Name is required.",
                  ]
                }
                label="Item Name"
                name="name"
                onChange={[MockFunction]}
                placeholder="Bread"
                size={12}
                value=""
              />,
              "history": Object {
                "action": "POP",
                "block": [Function],
                "createHref": [Function],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "push": [Function],
                "replace": [Function],
              },
            },
            "memoizedState": Object {
              "match": Object {
                "isExact": true,
                "params": Object {},
                "path": "/",
                "url": "/",
              },
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": <TextInputField
                errors={
                  Array [
                    "Name is required.",
                  ]
                }
                label="Item Name"
                name="name"
                onChange={[MockFunction]}
                placeholder="Bread"
                size={12}
                value=""
              />,
              "history": Object {
                "action": "POP",
                "block": [Function],
                "createHref": [Function],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "push": [Function],
                "replace": [Function],
              },
            },
            "ref": null,
            "return": [Circular],
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Router {
              "__reactInternalMemoizedMaskedChildContext": Object {
                "router": undefined,
              },
              "__reactInternalMemoizedMergedChildContext": Object {
                "router": Object {
                  "history": Object {
                    "action": "POP",
                    "block": [Function],
                    "createHref": [Function],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  },
                  "route": Object {
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "match": Object {
                      "isExact": true,
                      "params": Object {},
                      "path": "/",
                      "url": "/",
                    },
                  },
                },
              },
              "__reactInternalMemoizedUnmaskedChildContext": Object {},
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {
                "router": undefined,
              },
              "props": Object {
                "children": <TextInputField
                  errors={
                    Array [
                      "Name is required.",
                    ]
                  }
                  label="Item Name"
                  name="name"
                  onChange={[MockFunction]}
                  placeholder="Bread"
                  size={12}
                  value=""
                />,
                "history": Object {
                  "action": "POP",
                  "block": [Function],
                  "createHref": [Function],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "push": [Function],
                  "replace": [Function],
                },
              },
              "refs": Object {},
              "state": Object {
                "match": Object {
                  "isExact": true,
                  "params": Object {},
                  "path": "/",
                  "url": "/",
                },
              },
              "unlisten": [Function],
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 1,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "childExpirationTime": 0,
          "effectTag": 1,
          "elementType": [Function],
          "expirationTime": 0,
          "firstContextDependency": null,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "children": <TextInputField
              errors={
                Array [
                  "Name is required.",
                ]
              }
              label="Item Name"
              name="name"
              onChange={[MockFunction]}
              placeholder="Bread"
              size={12}
              value=""
            />,
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "children": <TextInputField
              errors={
                Array [
                  "Name is required.",
                ]
              }
              label="Item Name"
              name="name"
              onChange={[MockFunction]}
              placeholder="Bread"
              size={12}
              value=""
            />,
          },
          "ref": null,
          "return": FiberNode {
            "_debugID": 49,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "effectTag": 1,
            "elementType": [Function],
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "children": <TextInputField
                  errors={
                    Array [
                      "Name is required.",
                    ]
                  }
                  label="Item Name"
                  name="name"
                  onChange={[MockFunction]}
                  placeholder="Bread"
                  size={12}
                  value=""
                />,
              },
            },
            "memoizedState": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "children": <TextInputField
                  errors={
                    Array [
                      "Name is required.",
                    ]
                  }
                  label="Item Name"
                  name="name"
                  onChange={[MockFunction]}
                  placeholder="Bread"
                  size={12}
                  value=""
                />,
              },
            },
            "mode": 0,
            "nextEffect": FiberNode {
              "_debugID": 47,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": FiberNode {
                "_debugID": 47,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": [Circular],
                "child": null,
                "childExpirationTime": 0,
                "effectTag": 0,
                "elementType": null,
                "expirationTime": 1073741823,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div>
                      <div
                        class="form-group col-md-12"
                      >
                        <label
                          for="name"
                        >
                          Item Name
                        </label>
                        <input
                          class="form-control"
                          id="name"
                          name="name"
                          placeholder="Bread"
                          type="text"
                          value=""
                        />
                        <div
                          class="error"
                        >
                          <span>
                            Name is required.
                          </span>
                        </div>
                      </div>
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "didError": false,
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "expirationTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "interactionThreadID": 12,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextExpirationTimeToWorkOn": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "timeoutHandle": -1,
                },
                "tag": 3,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "children": <TextInputField
                              errors={
                                Array [
                                  "Name is required.",
                                ]
                              }
                              label="Item Name"
                              name="name"
                              onChange={[MockFunction]}
                              placeholder="Bread"
                              size={12}
                              value=""
                            />,
                          }
                        }
                      />,
                    },
                    "tag": 0,
                  },
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "children": <TextInputField
                              errors={
                                Array [
                                  "Name is required.",
                                ]
                              }
                              label="Item Name"
                              name="name"
                              onChange={[MockFunction]}
                              placeholder="Bread"
                              size={12}
                              value=""
                            />,
                          }
                        }
                      />,
                    },
                    "tag": 0,
                  },
                },
              },
              "child": [Circular],
              "childExpirationTime": 0,
              "effectTag": 32,
              "elementType": null,
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "children": <TextInputField
                        errors={
                          Array [
                            "Name is required.",
                          ]
                        }
                        label="Item Name"
                        name="name"
                        onChange={[MockFunction]}
                        placeholder="Bread"
                        size={12}
                        value=""
                      />,
                    }
                  }
                />,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div>
                    <div
                      class="form-group col-md-12"
                    >
                      <label
                        for="name"
                      >
                        Item Name
                      </label>
                      <input
                        class="form-control"
                        id="name"
                        name="name"
                        placeholder="Bread"
                        type="text"
                        value=""
                      />
                      <div
                        class="error"
                      >
                        <span>
                          Name is required.
                        </span>
                      </div>
                    </div>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 12,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                      Object {
                        "children": <TextInputField
                          errors={
                            Array [
                              "Name is required.",
                            ]
                          }
                          label="Item Name"
                          name="name"
                          onChange={[MockFunction]}
                          placeholder="Bread"
                          size={12}
                          value=""
                        />,
                      }
                    }
                  />,
                },
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": null,
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": null,
              },
            },
            "pendingProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "children": <TextInputField
                  errors={
                    Array [
                      "Name is required.",
                    ]
                  }
                  label="Item Name"
                  name="name"
                  onChange={[MockFunction]}
                  placeholder="Bread"
                  size={12}
                  value=""
                />,
              },
            },
            "ref": null,
            "return": FiberNode {
              "_debugID": 47,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": FiberNode {
                "_debugID": 47,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": [Circular],
                "child": null,
                "childExpirationTime": 0,
                "effectTag": 0,
                "elementType": null,
                "expirationTime": 1073741823,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div>
                      <div
                        class="form-group col-md-12"
                      >
                        <label
                          for="name"
                        >
                          Item Name
                        </label>
                        <input
                          class="form-control"
                          id="name"
                          name="name"
                          placeholder="Bread"
                          type="text"
                          value=""
                        />
                        <div
                          class="error"
                        >
                          <span>
                            Name is required.
                          </span>
                        </div>
                      </div>
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "didError": false,
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "expirationTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "interactionThreadID": 12,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextExpirationTimeToWorkOn": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "timeoutHandle": -1,
                },
                "tag": 3,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "children": <TextInputField
                              errors={
                                Array [
                                  "Name is required.",
                                ]
                              }
                              label="Item Name"
                              name="name"
                              onChange={[MockFunction]}
                              placeholder="Bread"
                              size={12}
                              value=""
                            />,
                          }
                        }
                      />,
                    },
                    "tag": 0,
                  },
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "children": <TextInputField
                              errors={
                                Array [
                                  "Name is required.",
                                ]
                              }
                              label="Item Name"
                              name="name"
                              onChange={[MockFunction]}
                              placeholder="Bread"
                              size={12}
                              value=""
                            />,
                          }
                        }
                      />,
                    },
                    "tag": 0,
                  },
                },
              },
              "child": [Circular],
              "childExpirationTime": 0,
              "effectTag": 32,
              "elementType": null,
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "children": <TextInputField
                        errors={
                          Array [
                            "Name is required.",
                          ]
                        }
                        label="Item Name"
                        name="name"
                        onChange={[MockFunction]}
                        placeholder="Bread"
                        size={12}
                        value=""
                      />,
                    }
                  }
                />,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div>
                    <div
                      class="form-group col-md-12"
                    >
                      <label
                        for="name"
                      >
                        Item Name
                      </label>
                      <input
                        class="form-control"
                        id="name"
                        name="name"
                        placeholder="Bread"
                        type="text"
                        value=""
                      />
                      <div
                        class="error"
                      >
                        <span>
                          Name is required.
                        </span>
                      </div>
                    </div>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 12,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                      Object {
                        "children": <TextInputField
                          errors={
                            Array [
                              "Name is required.",
                            ]
                          }
                          label="Item Name"
                          name="name"
                          onChange={[MockFunction]}
                          placeholder="Bread"
                          size={12}
                          value=""
                        />,
                      }
                    }
                  />,
                },
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": null,
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": null,
              },
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": WrapperComponent {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "children": <TextInputField
                    errors={
                      Array [
                        "Name is required.",
                      ]
                    }
                    label="Item Name"
                    name="name"
                    onChange={[MockFunction]}
                    placeholder="Bread"
                    size={12}
                    value=""
                  />,
                },
              },
              "refs": Object {},
              "state": Object {
                "context": null,
                "mount": true,
                "props": Object {
                  "children": <TextInputField
                    errors={
                      Array [
                        "Name is required.",
                      ]
                    }
                    label="Item Name"
                    name="name"
                    onChange={[MockFunction]}
                    placeholder="Bread"
                    size={12}
                    value=""
                  />,
                },
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 1,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": [Circular],
          "tag": 1,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "_reactInternalInstance": Object {},
        "context": Object {},
        "history": Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        },
        "props": Object {
          "children": <TextInputField
            errors={
              Array [
                "Name is required.",
              ]
            }
            label="Item Name"
            name="name"
            onChange={[MockFunction]}
            placeholder="Bread"
            size={12}
            value=""
          />,
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
        },
      },
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <TextInputField
          errors={
            Array [
              "Name is required.",
            ]
          }
          label="Item Name"
          name="name"
          onChange={[MockFunction]}
          placeholder="Bread"
          size={12}
          value=""
        />,
      },
      "ref": null,
      "rendered": Object {
        "instance": Router {
          "__reactInternalMemoizedMaskedChildContext": Object {
            "router": undefined,
          },
          "__reactInternalMemoizedMergedChildContext": Object {
            "router": Object {
              "history": Object {
                "action": "POP",
                "block": [Function],
                "createHref": [Function],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "push": [Function],
                "replace": [Function],
              },
              "route": Object {
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "match": Object {
                  "isExact": true,
                  "params": Object {},
                  "path": "/",
                  "url": "/",
                },
              },
            },
          },
          "__reactInternalMemoizedUnmaskedChildContext": Object {},
          "_reactInternalFiber": FiberNode {
            "_debugID": 51,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": FiberNode {
              "_debugID": 50,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": FiberNode {
                "_debugID": 49,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childExpirationTime": 0,
                "effectTag": 1,
                "elementType": [Function],
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "children": <TextInputField
                      errors={
                        Array [
                          "Name is required.",
                        ]
                      }
                      label="Item Name"
                      name="name"
                      onChange={[MockFunction]}
                      placeholder="Bread"
                      size={12}
                      value=""
                    />,
                  },
                },
                "memoizedState": Object {
                  "context": null,
                  "mount": true,
                  "props": Object {
                    "children": <TextInputField
                      errors={
                        Array [
                          "Name is required.",
                        ]
                      }
                      label="Item Name"
                      name="name"
                      onChange={[MockFunction]}
                      placeholder="Bread"
                      size={12}
                      value=""
                    />,
                  },
                },
                "mode": 0,
                "nextEffect": FiberNode {
                  "_debugID": 47,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": FiberNode {
                    "_debugID": 47,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": [Circular],
                    "child": null,
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "elementType": null,
                    "expirationTime": 1073741823,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": null,
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div>
                        <div>
                          <div
                            class="form-group col-md-12"
                          >
                            <label
                              for="name"
                            >
                              Item Name
                            </label>
                            <input
                              class="form-control"
                              id="name"
                              name="name"
                              placeholder="Bread"
                              type="text"
                              value=""
                            />
                            <div
                              class="error"
                            >
                              <span>
                                Name is required.
                              </span>
                            </div>
                          </div>
                        </div>
                      </div>,
                      "context": Object {},
                      "current": [Circular],
                      "didError": false,
                      "earliestPendingTime": 0,
                      "earliestSuspendedTime": 0,
                      "expirationTime": 0,
                      "finishedWork": null,
                      "firstBatch": null,
                      "hydrate": false,
                      "interactionThreadID": 12,
                      "latestPendingTime": 0,
                      "latestPingedTime": 0,
                      "latestSuspendedTime": 0,
                      "memoizedInteractions": Set {},
                      "nextExpirationTimeToWorkOn": 0,
                      "nextScheduledRoot": null,
                      "pendingChildren": null,
                      "pendingCommitExpirationTime": 0,
                      "pendingContext": null,
                      "pendingInteractionMap": Map {},
                      "timeoutHandle": -1,
                    },
                    "tag": 3,
                    "treeBaseDuration": 0,
                    "type": null,
                    "updateQueue": Object {
                      "baseState": null,
                      "firstCapturedEffect": null,
                      "firstCapturedUpdate": null,
                      "firstEffect": null,
                      "firstUpdate": Object {
                        "callback": null,
                        "expirationTime": 1073741823,
                        "next": null,
                        "nextEffect": null,
                        "payload": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "children": <TextInputField
                                  errors={
                                    Array [
                                      "Name is required.",
                                    ]
                                  }
                                  label="Item Name"
                                  name="name"
                                  onChange={[MockFunction]}
                                  placeholder="Bread"
                                  size={12}
                                  value=""
                                />,
                              }
                            }
                          />,
                        },
                        "tag": 0,
                      },
                      "lastCapturedEffect": null,
                      "lastCapturedUpdate": null,
                      "lastEffect": null,
                      "lastUpdate": Object {
                        "callback": null,
                        "expirationTime": 1073741823,
                        "next": null,
                        "nextEffect": null,
                        "payload": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "children": <TextInputField
                                  errors={
                                    Array [
                                      "Name is required.",
                                    ]
                                  }
                                  label="Item Name"
                                  name="name"
                                  onChange={[MockFunction]}
                                  placeholder="Bread"
                                  size={12}
                                  value=""
                                />,
                              }
                            }
                          />,
                        },
                        "tag": 0,
                      },
                    },
                  },
                  "child": [Circular],
                  "childExpirationTime": 0,
                  "effectTag": 32,
                  "elementType": null,
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": null,
                  "memoizedState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "children": <TextInputField
                            errors={
                              Array [
                                "Name is required.",
                              ]
                            }
                            label="Item Name"
                            name="name"
                            onChange={[MockFunction]}
                            placeholder="Bread"
                            size={12}
                            value=""
                          />,
                        }
                      }
                    />,
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": Object {
                    "containerInfo": <div>
                      <div>
                        <div
                          class="form-group col-md-12"
                        >
                          <label
                            for="name"
                          >
                            Item Name
                          </label>
                          <input
                            class="form-control"
                            id="name"
                            name="name"
                            placeholder="Bread"
                            type="text"
                            value=""
                          />
                          <div
                            class="error"
                          >
                            <span>
                              Name is required.
                            </span>
                          </div>
                        </div>
                      </div>
                    </div>,
                    "context": Object {},
                    "current": [Circular],
                    "didError": false,
                    "earliestPendingTime": 0,
                    "earliestSuspendedTime": 0,
                    "expirationTime": 0,
                    "finishedWork": null,
                    "firstBatch": null,
                    "hydrate": false,
                    "interactionThreadID": 12,
                    "latestPendingTime": 0,
                    "latestPingedTime": 0,
                    "latestSuspendedTime": 0,
                    "memoizedInteractions": Set {},
                    "nextExpirationTimeToWorkOn": 0,
                    "nextScheduledRoot": null,
                    "pendingChildren": null,
                    "pendingCommitExpirationTime": 0,
                    "pendingContext": null,
                    "pendingInteractionMap": Map {},
                    "timeoutHandle": -1,
                  },
                  "tag": 3,
                  "treeBaseDuration": 0,
                  "type": null,
                  "updateQueue": Object {
                    "baseState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "children": <TextInputField
                              errors={
                                Array [
                                  "Name is required.",
                                ]
                              }
                              label="Item Name"
                              name="name"
                              onChange={[MockFunction]}
                              placeholder="Bread"
                              size={12}
                              value=""
                            />,
                          }
                        }
                      />,
                    },
                    "firstCapturedEffect": null,
                    "firstCapturedUpdate": null,
                    "firstEffect": null,
                    "firstUpdate": null,
                    "lastCapturedEffect": null,
                    "lastCapturedUpdate": null,
                    "lastEffect": null,
                    "lastUpdate": null,
                  },
                },
                "pendingProps": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "children": <TextInputField
                      errors={
                        Array [
                          "Name is required.",
                        ]
                      }
                      label="Item Name"
                      name="name"
                      onChange={[MockFunction]}
                      placeholder="Bread"
                      size={12}
                      value=""
                    />,
                  },
                },
                "ref": null,
                "return": FiberNode {
                  "_debugID": 47,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": FiberNode {
                    "_debugID": 47,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": [Circular],
                    "child": null,
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "elementType": null,
                    "expirationTime": 1073741823,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": null,
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div>
                        <div>
                          <div
                            class="form-group col-md-12"
                          >
                            <label
                              for="name"
                            >
                              Item Name
                            </label>
                            <input
                              class="form-control"
                              id="name"
                              name="name"
                              placeholder="Bread"
                              type="text"
                              value=""
                            />
                            <div
                              class="error"
                            >
                              <span>
                                Name is required.
                              </span>
                            </div>
                          </div>
                        </div>
                      </div>,
                      "context": Object {},
                      "current": [Circular],
                      "didError": false,
                      "earliestPendingTime": 0,
                      "earliestSuspendedTime": 0,
                      "expirationTime": 0,
                      "finishedWork": null,
                      "firstBatch": null,
                      "hydrate": false,
                      "interactionThreadID": 12,
                      "latestPendingTime": 0,
                      "latestPingedTime": 0,
                      "latestSuspendedTime": 0,
                      "memoizedInteractions": Set {},
                      "nextExpirationTimeToWorkOn": 0,
                      "nextScheduledRoot": null,
                      "pendingChildren": null,
                      "pendingCommitExpirationTime": 0,
                      "pendingContext": null,
                      "pendingInteractionMap": Map {},
                      "timeoutHandle": -1,
                    },
                    "tag": 3,
                    "treeBaseDuration": 0,
                    "type": null,
                    "updateQueue": Object {
                      "baseState": null,
                      "firstCapturedEffect": null,
                      "firstCapturedUpdate": null,
                      "firstEffect": null,
                      "firstUpdate": Object {
                        "callback": null,
                        "expirationTime": 1073741823,
                        "next": null,
                        "nextEffect": null,
                        "payload": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "children": <TextInputField
                                  errors={
                                    Array [
                                      "Name is required.",
                                    ]
                                  }
                                  label="Item Name"
                                  name="name"
                                  onChange={[MockFunction]}
                                  placeholder="Bread"
                                  size={12}
                                  value=""
                                />,
                              }
                            }
                          />,
                        },
                        "tag": 0,
                      },
                      "lastCapturedEffect": null,
                      "lastCapturedUpdate": null,
                      "lastEffect": null,
                      "lastUpdate": Object {
                        "callback": null,
                        "expirationTime": 1073741823,
                        "next": null,
                        "nextEffect": null,
                        "payload": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "children": <TextInputField
                                  errors={
                                    Array [
                                      "Name is required.",
                                    ]
                                  }
                                  label="Item Name"
                                  name="name"
                                  onChange={[MockFunction]}
                                  placeholder="Bread"
                                  size={12}
                                  value=""
                                />,
                              }
                            }
                          />,
                        },
                        "tag": 0,
                      },
                    },
                  },
                  "child": [Circular],
                  "childExpirationTime": 0,
                  "effectTag": 32,
                  "elementType": null,
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": null,
                  "memoizedState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "children": <TextInputField
                            errors={
                              Array [
                                "Name is required.",
                              ]
                            }
                            label="Item Name"
                            name="name"
                            onChange={[MockFunction]}
                            placeholder="Bread"
                            size={12}
                            value=""
                          />,
                        }
                      }
                    />,
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": Object {
                    "containerInfo": <div>
                      <div>
                        <div
                          class="form-group col-md-12"
                        >
                          <label
                            for="name"
                          >
                            Item Name
                          </label>
                          <input
                            class="form-control"
                            id="name"
                            name="name"
                            placeholder="Bread"
                            type="text"
                            value=""
                          />
                          <div
                            class="error"
                          >
                            <span>
                              Name is required.
                            </span>
                          </div>
                        </div>
                      </div>
                    </div>,
                    "context": Object {},
                    "current": [Circular],
                    "didError": false,
                    "earliestPendingTime": 0,
                    "earliestSuspendedTime": 0,
                    "expirationTime": 0,
                    "finishedWork": null,
                    "firstBatch": null,
                    "hydrate": false,
                    "interactionThreadID": 12,
                    "latestPendingTime": 0,
                    "latestPingedTime": 0,
                    "latestSuspendedTime": 0,
                    "memoizedInteractions": Set {},
                    "nextExpirationTimeToWorkOn": 0,
                    "nextScheduledRoot": null,
                    "pendingChildren": null,
                    "pendingCommitExpirationTime": 0,
                    "pendingContext": null,
                    "pendingInteractionMap": Map {},
                    "timeoutHandle": -1,
                  },
                  "tag": 3,
                  "treeBaseDuration": 0,
                  "type": null,
                  "updateQueue": Object {
                    "baseState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "children": <TextInputField
                              errors={
                                Array [
                                  "Name is required.",
                                ]
                              }
                              label="Item Name"
                              name="name"
                              onChange={[MockFunction]}
                              placeholder="Bread"
                              size={12}
                              value=""
                            />,
                          }
                        }
                      />,
                    },
                    "firstCapturedEffect": null,
                    "firstCapturedUpdate": null,
                    "firstEffect": null,
                    "firstUpdate": null,
                    "lastCapturedEffect": null,
                    "lastCapturedUpdate": null,
                    "lastEffect": null,
                    "lastUpdate": null,
                  },
                },
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": WrapperComponent {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "Component": [Function],
                    "context": null,
                    "props": Object {
                      "children": <TextInputField
                        errors={
                          Array [
                            "Name is required.",
                          ]
                        }
                        label="Item Name"
                        name="name"
                        onChange={[MockFunction]}
                        placeholder="Bread"
                        size={12}
                        value=""
                      />,
                    },
                  },
                  "refs": Object {},
                  "state": Object {
                    "context": null,
                    "mount": true,
                    "props": Object {
                      "children": <TextInputField
                        errors={
                          Array [
                            "Name is required.",
                          ]
                        }
                        label="Item Name"
                        name="name"
                        onChange={[MockFunction]}
                        placeholder="Bread"
                        size={12}
                        value=""
                      />,
                    },
                  },
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 1,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": null,
              },
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": <TextInputField
                  errors={
                    Array [
                      "Name is required.",
                    ]
                  }
                  label="Item Name"
                  name="name"
                  onChange={[MockFunction]}
                  placeholder="Bread"
                  size={12}
                  value=""
                />,
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": <TextInputField
                  errors={
                    Array [
                      "Name is required.",
                    ]
                  }
                  label="Item Name"
                  name="name"
                  onChange={[MockFunction]}
                  placeholder="Bread"
                  size={12}
                  value=""
                />,
              },
              "ref": null,
              "return": FiberNode {
                "_debugID": 49,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childExpirationTime": 0,
                "effectTag": 1,
                "elementType": [Function],
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "children": <TextInputField
                      errors={
                        Array [
                          "Name is required.",
                        ]
                      }
                      label="Item Name"
                      name="name"
                      onChange={[MockFunction]}
                      placeholder="Bread"
                      size={12}
                      value=""
                    />,
                  },
                },
                "memoizedState": Object {
                  "context": null,
                  "mount": true,
                  "props": Object {
                    "children": <TextInputField
                      errors={
                        Array [
                          "Name is required.",
                        ]
                      }
                      label="Item Name"
                      name="name"
                      onChange={[MockFunction]}
                      placeholder="Bread"
                      size={12}
                      value=""
                    />,
                  },
                },
                "mode": 0,
                "nextEffect": FiberNode {
                  "_debugID": 47,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": FiberNode {
                    "_debugID": 47,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": [Circular],
                    "child": null,
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "elementType": null,
                    "expirationTime": 1073741823,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": null,
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div>
                        <div>
                          <div
                            class="form-group col-md-12"
                          >
                            <label
                              for="name"
                            >
                              Item Name
                            </label>
                            <input
                              class="form-control"
                              id="name"
                              name="name"
                              placeholder="Bread"
                              type="text"
                              value=""
                            />
                            <div
                              class="error"
                            >
                              <span>
                                Name is required.
                              </span>
                            </div>
                          </div>
                        </div>
                      </div>,
                      "context": Object {},
                      "current": [Circular],
                      "didError": false,
                      "earliestPendingTime": 0,
                      "earliestSuspendedTime": 0,
                      "expirationTime": 0,
                      "finishedWork": null,
                      "firstBatch": null,
                      "hydrate": false,
                      "interactionThreadID": 12,
                      "latestPendingTime": 0,
                      "latestPingedTime": 0,
                      "latestSuspendedTime": 0,
                      "memoizedInteractions": Set {},
                      "nextExpirationTimeToWorkOn": 0,
                      "nextScheduledRoot": null,
                      "pendingChildren": null,
                      "pendingCommitExpirationTime": 0,
                      "pendingContext": null,
                      "pendingInteractionMap": Map {},
                      "timeoutHandle": -1,
                    },
                    "tag": 3,
                    "treeBaseDuration": 0,
                    "type": null,
                    "updateQueue": Object {
                      "baseState": null,
                      "firstCapturedEffect": null,
                      "firstCapturedUpdate": null,
                      "firstEffect": null,
                      "firstUpdate": Object {
                        "callback": null,
                        "expirationTime": 1073741823,
                        "next": null,
                        "nextEffect": null,
                        "payload": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "children": <TextInputField
                                  errors={
                                    Array [
                                      "Name is required.",
                                    ]
                                  }
                                  label="Item Name"
                                  name="name"
                                  onChange={[MockFunction]}
                                  placeholder="Bread"
                                  size={12}
                                  value=""
                                />,
                              }
                            }
                          />,
                        },
                        "tag": 0,
                      },
                      "lastCapturedEffect": null,
                      "lastCapturedUpdate": null,
                      "lastEffect": null,
                      "lastUpdate": Object {
                        "callback": null,
                        "expirationTime": 1073741823,
                        "next": null,
                        "nextEffect": null,
                        "payload": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "children": <TextInputField
                                  errors={
                                    Array [
                                      "Name is required.",
                                    ]
                                  }
                                  label="Item Name"
                                  name="name"
                                  onChange={[MockFunction]}
                                  placeholder="Bread"
                                  size={12}
                                  value=""
                                />,
                              }
                            }
                          />,
                        },
                        "tag": 0,
                      },
                    },
                  },
                  "child": [Circular],
                  "childExpirationTime": 0,
                  "effectTag": 32,
                  "elementType": null,
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": null,
                  "memoizedState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "children": <TextInputField
                            errors={
                              Array [
                                "Name is required.",
                              ]
                            }
                            label="Item Name"
                            name="name"
                            onChange={[MockFunction]}
                            placeholder="Bread"
                            size={12}
                            value=""
                          />,
                        }
                      }
                    />,
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": Object {
                    "containerInfo": <div>
                      <div>
                        <div
                          class="form-group col-md-12"
                        >
                          <label
                            for="name"
                          >
                            Item Name
                          </label>
                          <input
                            class="form-control"
                            id="name"
                            name="name"
                            placeholder="Bread"
                            type="text"
                            value=""
                          />
                          <div
                            class="error"
                          >
                            <span>
                              Name is required.
                            </span>
                          </div>
                        </div>
                      </div>
                    </div>,
                    "context": Object {},
                    "current": [Circular],
                    "didError": false,
                    "earliestPendingTime": 0,
                    "earliestSuspendedTime": 0,
                    "expirationTime": 0,
                    "finishedWork": null,
                    "firstBatch": null,
                    "hydrate": false,
                    "interactionThreadID": 12,
                    "latestPendingTime": 0,
                    "latestPingedTime": 0,
                    "latestSuspendedTime": 0,
                    "memoizedInteractions": Set {},
                    "nextExpirationTimeToWorkOn": 0,
                    "nextScheduledRoot": null,
                    "pendingChildren": null,
                    "pendingCommitExpirationTime": 0,
                    "pendingContext": null,
                    "pendingInteractionMap": Map {},
                    "timeoutHandle": -1,
                  },
                  "tag": 3,
                  "treeBaseDuration": 0,
                  "type": null,
                  "updateQueue": Object {
                    "baseState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "children": <TextInputField
                              errors={
                                Array [
                                  "Name is required.",
                                ]
                              }
                              label="Item Name"
                              name="name"
                              onChange={[MockFunction]}
                              placeholder="Bread"
                              size={12}
                              value=""
                            />,
                          }
                        }
                      />,
                    },
                    "firstCapturedEffect": null,
                    "firstCapturedUpdate": null,
                    "firstEffect": null,
                    "firstUpdate": null,
                    "lastCapturedEffect": null,
                    "lastCapturedUpdate": null,
                    "lastEffect": null,
                    "lastUpdate": null,
                  },
                },
                "pendingProps": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "children": <TextInputField
                      errors={
                        Array [
                          "Name is required.",
                        ]
                      }
                      label="Item Name"
                      name="name"
                      onChange={[MockFunction]}
                      placeholder="Bread"
                      size={12}
                      value=""
                    />,
                  },
                },
                "ref": null,
                "return": FiberNode {
                  "_debugID": 47,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": FiberNode {
                    "_debugID": 47,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": [Circular],
                    "child": null,
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "elementType": null,
                    "expirationTime": 1073741823,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": null,
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div>
                        <div>
                          <div
                            class="form-group col-md-12"
                          >
                            <label
                              for="name"
                            >
                              Item Name
                            </label>
                            <input
                              class="form-control"
                              id="name"
                              name="name"
                              placeholder="Bread"
                              type="text"
                              value=""
                            />
                            <div
                              class="error"
                            >
                              <span>
                                Name is required.
                              </span>
                            </div>
                          </div>
                        </div>
                      </div>,
                      "context": Object {},
                      "current": [Circular],
                      "didError": false,
                      "earliestPendingTime": 0,
                      "earliestSuspendedTime": 0,
                      "expirationTime": 0,
                      "finishedWork": null,
                      "firstBatch": null,
                      "hydrate": false,
                      "interactionThreadID": 12,
                      "latestPendingTime": 0,
                      "latestPingedTime": 0,
                      "latestSuspendedTime": 0,
                      "memoizedInteractions": Set {},
                      "nextExpirationTimeToWorkOn": 0,
                      "nextScheduledRoot": null,
                      "pendingChildren": null,
                      "pendingCommitExpirationTime": 0,
                      "pendingContext": null,
                      "pendingInteractionMap": Map {},
                      "timeoutHandle": -1,
                    },
                    "tag": 3,
                    "treeBaseDuration": 0,
                    "type": null,
                    "updateQueue": Object {
                      "baseState": null,
                      "firstCapturedEffect": null,
                      "firstCapturedUpdate": null,
                      "firstEffect": null,
                      "firstUpdate": Object {
                        "callback": null,
                        "expirationTime": 1073741823,
                        "next": null,
                        "nextEffect": null,
                        "payload": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "children": <TextInputField
                                  errors={
                                    Array [
                                      "Name is required.",
                                    ]
                                  }
                                  label="Item Name"
                                  name="name"
                                  onChange={[MockFunction]}
                                  placeholder="Bread"
                                  size={12}
                                  value=""
                                />,
                              }
                            }
                          />,
                        },
                        "tag": 0,
                      },
                      "lastCapturedEffect": null,
                      "lastCapturedUpdate": null,
                      "lastEffect": null,
                      "lastUpdate": Object {
                        "callback": null,
                        "expirationTime": 1073741823,
                        "next": null,
                        "nextEffect": null,
                        "payload": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "children": <TextInputField
                                  errors={
                                    Array [
                                      "Name is required.",
                                    ]
                                  }
                                  label="Item Name"
                                  name="name"
                                  onChange={[MockFunction]}
                                  placeholder="Bread"
                                  size={12}
                                  value=""
                                />,
                              }
                            }
                          />,
                        },
                        "tag": 0,
                      },
                    },
                  },
                  "child": [Circular],
                  "childExpirationTime": 0,
                  "effectTag": 32,
                  "elementType": null,
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": null,
                  "memoizedState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "children": <TextInputField
                            errors={
                              Array [
                                "Name is required.",
                              ]
                            }
                            label="Item Name"
                            name="name"
                            onChange={[MockFunction]}
                            placeholder="Bread"
                            size={12}
                            value=""
                          />,
                        }
                      }
                    />,
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": Object {
                    "containerInfo": <div>
                      <div>
                        <div
                          class="form-group col-md-12"
                        >
                          <label
                            for="name"
                          >
                            Item Name
                          </label>
                          <input
                            class="form-control"
                            id="name"
                            name="name"
                            placeholder="Bread"
                            type="text"
                            value=""
                          />
                          <div
                            class="error"
                          >
                            <span>
                              Name is required.
                            </span>
                          </div>
                        </div>
                      </div>
                    </div>,
                    "context": Object {},
                    "current": [Circular],
                    "didError": false,
                    "earliestPendingTime": 0,
                    "earliestSuspendedTime": 0,
                    "expirationTime": 0,
                    "finishedWork": null,
                    "firstBatch": null,
                    "hydrate": false,
                    "interactionThreadID": 12,
                    "latestPendingTime": 0,
                    "latestPingedTime": 0,
                    "latestSuspendedTime": 0,
                    "memoizedInteractions": Set {},
                    "nextExpirationTimeToWorkOn": 0,
                    "nextScheduledRoot": null,
                    "pendingChildren": null,
                    "pendingCommitExpirationTime": 0,
                    "pendingContext": null,
                    "pendingInteractionMap": Map {},
                    "timeoutHandle": -1,
                  },
                  "tag": 3,
                  "treeBaseDuration": 0,
                  "type": null,
                  "updateQueue": Object {
                    "baseState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "children": <TextInputField
                              errors={
                                Array [
                                  "Name is required.",
                                ]
                              }
                              label="Item Name"
                              name="name"
                              onChange={[MockFunction]}
                              placeholder="Bread"
                              size={12}
                              value=""
                            />,
                          }
                        }
                      />,
                    },
                    "firstCapturedEffect": null,
                    "firstCapturedUpdate": null,
                    "firstEffect": null,
                    "firstUpdate": null,
                    "lastCapturedEffect": null,
                    "lastCapturedUpdate": null,
                    "lastEffect": null,
                    "lastUpdate": null,
                  },
                },
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": WrapperComponent {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "Component": [Function],
                    "context": null,
                    "props": Object {
                      "children": <TextInputField
                        errors={
                          Array [
                            "Name is required.",
                          ]
                        }
                        label="Item Name"
                        name="name"
                        onChange={[MockFunction]}
                        placeholder="Bread"
                        size={12}
                        value=""
                      />,
                    },
                  },
                  "refs": Object {},
                  "state": Object {
                    "context": null,
                    "mount": true,
                    "props": Object {
                      "children": <TextInputField
                        errors={
                          Array [
                            "Name is required.",
                          ]
                        }
                        label="Item Name"
                        name="name"
                        onChange={[MockFunction]}
                        placeholder="Bread"
                        size={12}
                        value=""
                      />,
                    },
                  },
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 1,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": null,
              },
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": BrowserRouter {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "history": Object {
                  "action": "POP",
                  "block": [Function],
                  "createHref": [Function],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "push": [Function],
                  "replace": [Function],
                },
                "props": Object {
                  "children": <TextInputField
                    errors={
                      Array [
                        "Name is required.",
                      ]
                    }
                    label="Item Name"
                    name="name"
                    onChange={[MockFunction]}
                    placeholder="Bread"
                    size={12}
                    value=""
                  />,
                },
                "refs": Object {},
                "state": null,
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": null,
            },
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": FiberNode {
              "_debugID": 52,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 53,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 54,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 55,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": null,
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "elementType": "label",
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "Item Name",
                      "htmlFor": "name",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": "Item Name",
                      "htmlFor": "name",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": FiberNode {
                      "_debugID": 56,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": null,
                      "childExpirationTime": 0,
                      "effectTag": 0,
                      "elementType": "input",
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 1,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "className": "form-control",
                        "id": "name",
                        "name": "name",
                        "onChange": [MockFunction],
                        "placeholder": "Bread",
                        "type": "text",
                        "value": "",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "className": "form-control",
                        "id": "name",
                        "name": "name",
                        "onChange": [MockFunction],
                        "placeholder": "Bread",
                        "type": "text",
                        "value": "",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": FiberNode {
                        "_debugID": 57,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 58,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childExpirationTime": 0,
                          "effectTag": 0,
                          "elementType": "span",
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 0,
                          "key": "0",
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": "Name is required.",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": "Name is required.",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": <span>
                            Name is required.
                          </span>,
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": "span",
                          "updateQueue": null,
                        },
                        "childExpirationTime": 0,
                        "effectTag": 0,
                        "elementType": "div",
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 2,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": Array [
                            <span>
                              Name is required.
                            </span>,
                          ],
                          "className": "error",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": Array [
                            <span>
                              Name is required.
                            </span>,
                          ],
                          "className": "error",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": <div
                          class="error"
                        >
                          <span>
                            Name is required.
                          </span>
                        </div>,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "stateNode": <input
                        class="form-control"
                        id="name"
                        name="name"
                        placeholder="Bread"
                        type="text"
                        value=""
                      />,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "input",
                      "updateQueue": null,
                    },
                    "stateNode": <label
                      for="name"
                    >
                      Item Name
                    </label>,
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": "label",
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "effectTag": 0,
                  "elementType": "div",
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <label
                        htmlFor="name"
                      >
                        Item Name
                      </label>,
                      <input
                        className="form-control"
                        id="name"
                        name="name"
                        onChange={[MockFunction]}
                        placeholder="Bread"
                        type="text"
                        value=""
                      />,
                      <div
                        className="error"
                      >
                        <span>
                          Name is required.
                        </span>
                      </div>,
                    ],
                    "className": "form-group col-md-12",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": Array [
                      <label
                        htmlFor="name"
                      >
                        Item Name
                      </label>,
                      <input
                        className="form-control"
                        id="name"
                        name="name"
                        onChange={[MockFunction]}
                        placeholder="Bread"
                        type="text"
                        value=""
                      />,
                      <div
                        className="error"
                      >
                        <span>
                          Name is required.
                        </span>
                      </div>,
                    ],
                    "className": "form-group col-md-12",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": <div
                    class="form-group col-md-12"
                  >
                    <label
                      for="name"
                    >
                      Item Name
                    </label>
                    <input
                      class="form-control"
                      id="name"
                      name="name"
                      placeholder="Bread"
                      type="text"
                      value=""
                    />
                    <div
                      class="error"
                    >
                      <span>
                        Name is required.
                      </span>
                    </div>
                  </div>,
                  "tag": 5,
                  "treeBaseDuration": 0,
                  "type": "div",
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "effectTag": 0,
                "elementType": "div",
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": <div
                    className="form-group col-md-12"
                  >
                    <label
                      htmlFor="name"
                    >
                      Item Name
                    </label>
                    <input
                      className="form-control"
                      id="name"
                      name="name"
                      onChange={[MockFunction]}
                      placeholder="Bread"
                      type="text"
                      value=""
                    />
                    <div
                      className="error"
                    >
                      <span>
                        Name is required.
                      </span>
                    </div>
                  </div>,
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": <div
                    className="form-group col-md-12"
                  >
                    <label
                      htmlFor="name"
                    >
                      Item Name
                    </label>
                    <input
                      className="form-control"
                      id="name"
                      name="name"
                      onChange={[MockFunction]}
                      placeholder="Bread"
                      type="text"
                      value=""
                    />
                    <div
                      className="error"
                    >
                      <span>
                        Name is required.
                      </span>
                    </div>
                  </div>,
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": <div>
                  <div
                    class="form-group col-md-12"
                  >
                    <label
                      for="name"
                    >
                      Item Name
                    </label>
                    <input
                      class="form-control"
                      id="name"
                      name="name"
                      placeholder="Bread"
                      type="text"
                      value=""
                    />
                    <div
                      class="error"
                    >
                      <span>
                        Name is required.
                      </span>
                    </div>
                  </div>
                </div>,
                "tag": 5,
                "treeBaseDuration": 0,
                "type": "div",
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "errors": Array [
                  "Name is required.",
                ],
                "label": "Item Name",
                "name": "name",
                "onChange": [MockFunction],
                "placeholder": "Bread",
                "size": 12,
                "value": "",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "errors": Array [
                  "Name is required.",
                ],
                "label": "Item Name",
                "name": "name",
                "onChange": [MockFunction],
                "placeholder": "Bread",
                "size": 12,
                "value": "",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 0,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": null,
            },
            "childExpirationTime": 0,
            "effectTag": 1,
            "elementType": [Function],
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": <TextInputField
                errors={
                  Array [
                    "Name is required.",
                  ]
                }
                label="Item Name"
                name="name"
                onChange={[MockFunction]}
                placeholder="Bread"
                size={12}
                value=""
              />,
              "history": Object {
                "action": "POP",
                "block": [Function],
                "createHref": [Function],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "push": [Function],
                "replace": [Function],
              },
            },
            "memoizedState": Object {
              "match": Object {
                "isExact": true,
                "params": Object {},
                "path": "/",
                "url": "/",
              },
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": <TextInputField
                errors={
                  Array [
                    "Name is required.",
                  ]
                }
                label="Item Name"
                name="name"
                onChange={[MockFunction]}
                placeholder="Bread"
                size={12}
                value=""
              />,
              "history": Object {
                "action": "POP",
                "block": [Function],
                "createHref": [Function],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "push": [Function],
                "replace": [Function],
              },
            },
            "ref": null,
            "return": FiberNode {
              "_debugID": 50,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": FiberNode {
                "_debugID": 49,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childExpirationTime": 0,
                "effectTag": 1,
                "elementType": [Function],
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "children": <TextInputField
                      errors={
                        Array [
                          "Name is required.",
                        ]
                      }
                      label="Item Name"
                      name="name"
                      onChange={[MockFunction]}
                      placeholder="Bread"
                      size={12}
                      value=""
                    />,
                  },
                },
                "memoizedState": Object {
                  "context": null,
                  "mount": true,
                  "props": Object {
                    "children": <TextInputField
                      errors={
                        Array [
                          "Name is required.",
                        ]
                      }
                      label="Item Name"
                      name="name"
                      onChange={[MockFunction]}
                      placeholder="Bread"
                      size={12}
                      value=""
                    />,
                  },
                },
                "mode": 0,
                "nextEffect": FiberNode {
                  "_debugID": 47,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": FiberNode {
                    "_debugID": 47,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": [Circular],
                    "child": null,
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "elementType": null,
                    "expirationTime": 1073741823,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": null,
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div>
                        <div>
                          <div
                            class="form-group col-md-12"
                          >
                            <label
                              for="name"
                            >
                              Item Name
                            </label>
                            <input
                              class="form-control"
                              id="name"
                              name="name"
                              placeholder="Bread"
                              type="text"
                              value=""
                            />
                            <div
                              class="error"
                            >
                              <span>
                                Name is required.
                              </span>
                            </div>
                          </div>
                        </div>
                      </div>,
                      "context": Object {},
                      "current": [Circular],
                      "didError": false,
                      "earliestPendingTime": 0,
                      "earliestSuspendedTime": 0,
                      "expirationTime": 0,
                      "finishedWork": null,
                      "firstBatch": null,
                      "hydrate": false,
                      "interactionThreadID": 12,
                      "latestPendingTime": 0,
                      "latestPingedTime": 0,
                      "latestSuspendedTime": 0,
                      "memoizedInteractions": Set {},
                      "nextExpirationTimeToWorkOn": 0,
                      "nextScheduledRoot": null,
                      "pendingChildren": null,
                      "pendingCommitExpirationTime": 0,
                      "pendingContext": null,
                      "pendingInteractionMap": Map {},
                      "timeoutHandle": -1,
                    },
                    "tag": 3,
                    "treeBaseDuration": 0,
                    "type": null,
                    "updateQueue": Object {
                      "baseState": null,
                      "firstCapturedEffect": null,
                      "firstCapturedUpdate": null,
                      "firstEffect": null,
                      "firstUpdate": Object {
                        "callback": null,
                        "expirationTime": 1073741823,
                        "next": null,
                        "nextEffect": null,
                        "payload": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "children": <TextInputField
                                  errors={
                                    Array [
                                      "Name is required.",
                                    ]
                                  }
                                  label="Item Name"
                                  name="name"
                                  onChange={[MockFunction]}
                                  placeholder="Bread"
                                  size={12}
                                  value=""
                                />,
                              }
                            }
                          />,
                        },
                        "tag": 0,
                      },
                      "lastCapturedEffect": null,
                      "lastCapturedUpdate": null,
                      "lastEffect": null,
                      "lastUpdate": Object {
                        "callback": null,
                        "expirationTime": 1073741823,
                        "next": null,
                        "nextEffect": null,
                        "payload": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "children": <TextInputField
                                  errors={
                                    Array [
                                      "Name is required.",
                                    ]
                                  }
                                  label="Item Name"
                                  name="name"
                                  onChange={[MockFunction]}
                                  placeholder="Bread"
                                  size={12}
                                  value=""
                                />,
                              }
                            }
                          />,
                        },
                        "tag": 0,
                      },
                    },
                  },
                  "child": [Circular],
                  "childExpirationTime": 0,
                  "effectTag": 32,
                  "elementType": null,
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": null,
                  "memoizedState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "children": <TextInputField
                            errors={
                              Array [
                                "Name is required.",
                              ]
                            }
                            label="Item Name"
                            name="name"
                            onChange={[MockFunction]}
                            placeholder="Bread"
                            size={12}
                            value=""
                          />,
                        }
                      }
                    />,
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": Object {
                    "containerInfo": <div>
                      <div>
                        <div
                          class="form-group col-md-12"
                        >
                          <label
                            for="name"
                          >
                            Item Name
                          </label>
                          <input
                            class="form-control"
                            id="name"
                            name="name"
                            placeholder="Bread"
                            type="text"
                            value=""
                          />
                          <div
                            class="error"
                          >
                            <span>
                              Name is required.
                            </span>
                          </div>
                        </div>
                      </div>
                    </div>,
                    "context": Object {},
                    "current": [Circular],
                    "didError": false,
                    "earliestPendingTime": 0,
                    "earliestSuspendedTime": 0,
                    "expirationTime": 0,
                    "finishedWork": null,
                    "firstBatch": null,
                    "hydrate": false,
                    "interactionThreadID": 12,
                    "latestPendingTime": 0,
                    "latestPingedTime": 0,
                    "latestSuspendedTime": 0,
                    "memoizedInteractions": Set {},
                    "nextExpirationTimeToWorkOn": 0,
                    "nextScheduledRoot": null,
                    "pendingChildren": null,
                    "pendingCommitExpirationTime": 0,
                    "pendingContext": null,
                    "pendingInteractionMap": Map {},
                    "timeoutHandle": -1,
                  },
                  "tag": 3,
                  "treeBaseDuration": 0,
                  "type": null,
                  "updateQueue": Object {
                    "baseState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "children": <TextInputField
                              errors={
                                Array [
                                  "Name is required.",
                                ]
                              }
                              label="Item Name"
                              name="name"
                              onChange={[MockFunction]}
                              placeholder="Bread"
                              size={12}
                              value=""
                            />,
                          }
                        }
                      />,
                    },
                    "firstCapturedEffect": null,
                    "firstCapturedUpdate": null,
                    "firstEffect": null,
                    "firstUpdate": null,
                    "lastCapturedEffect": null,
                    "lastCapturedUpdate": null,
                    "lastEffect": null,
                    "lastUpdate": null,
                  },
                },
                "pendingProps": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "children": <TextInputField
                      errors={
                        Array [
                          "Name is required.",
                        ]
                      }
                      label="Item Name"
                      name="name"
                      onChange={[MockFunction]}
                      placeholder="Bread"
                      size={12}
                      value=""
                    />,
                  },
                },
                "ref": null,
                "return": FiberNode {
                  "_debugID": 47,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": FiberNode {
                    "_debugID": 47,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": [Circular],
                    "child": null,
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "elementType": null,
                    "expirationTime": 1073741823,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": null,
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div>
                        <div>
                          <div
                            class="form-group col-md-12"
                          >
                            <label
                              for="name"
                            >
                              Item Name
                            </label>
                            <input
                              class="form-control"
                              id="name"
                              name="name"
                              placeholder="Bread"
                              type="text"
                              value=""
                            />
                            <div
                              class="error"
                            >
                              <span>
                                Name is required.
                              </span>
                            </div>
                          </div>
                        </div>
                      </div>,
                      "context": Object {},
                      "current": [Circular],
                      "didError": false,
                      "earliestPendingTime": 0,
                      "earliestSuspendedTime": 0,
                      "expirationTime": 0,
                      "finishedWork": null,
                      "firstBatch": null,
                      "hydrate": false,
                      "interactionThreadID": 12,
                      "latestPendingTime": 0,
                      "latestPingedTime": 0,
                      "latestSuspendedTime": 0,
                      "memoizedInteractions": Set {},
                      "nextExpirationTimeToWorkOn": 0,
                      "nextScheduledRoot": null,
                      "pendingChildren": null,
                      "pendingCommitExpirationTime": 0,
                      "pendingContext": null,
                      "pendingInteractionMap": Map {},
                      "timeoutHandle": -1,
                    },
                    "tag": 3,
                    "treeBaseDuration": 0,
                    "type": null,
                    "updateQueue": Object {
                      "baseState": null,
                      "firstCapturedEffect": null,
                      "firstCapturedUpdate": null,
                      "firstEffect": null,
                      "firstUpdate": Object {
                        "callback": null,
                        "expirationTime": 1073741823,
                        "next": null,
                        "nextEffect": null,
                        "payload": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "children": <TextInputField
                                  errors={
                                    Array [
                                      "Name is required.",
                                    ]
                                  }
                                  label="Item Name"
                                  name="name"
                                  onChange={[MockFunction]}
                                  placeholder="Bread"
                                  size={12}
                                  value=""
                                />,
                              }
                            }
                          />,
                        },
                        "tag": 0,
                      },
                      "lastCapturedEffect": null,
                      "lastCapturedUpdate": null,
                      "lastEffect": null,
                      "lastUpdate": Object {
                        "callback": null,
                        "expirationTime": 1073741823,
                        "next": null,
                        "nextEffect": null,
                        "payload": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "children": <TextInputField
                                  errors={
                                    Array [
                                      "Name is required.",
                                    ]
                                  }
                                  label="Item Name"
                                  name="name"
                                  onChange={[MockFunction]}
                                  placeholder="Bread"
                                  size={12}
                                  value=""
                                />,
                              }
                            }
                          />,
                        },
                        "tag": 0,
                      },
                    },
                  },
                  "child": [Circular],
                  "childExpirationTime": 0,
                  "effectTag": 32,
                  "elementType": null,
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": null,
                  "memoizedState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "children": <TextInputField
                            errors={
                              Array [
                                "Name is required.",
                              ]
                            }
                            label="Item Name"
                            name="name"
                            onChange={[MockFunction]}
                            placeholder="Bread"
                            size={12}
                            value=""
                          />,
                        }
                      }
                    />,
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": Object {
                    "containerInfo": <div>
                      <div>
                        <div
                          class="form-group col-md-12"
                        >
                          <label
                            for="name"
                          >
                            Item Name
                          </label>
                          <input
                            class="form-control"
                            id="name"
                            name="name"
                            placeholder="Bread"
                            type="text"
                            value=""
                          />
                          <div
                            class="error"
                          >
                            <span>
                              Name is required.
                            </span>
                          </div>
                        </div>
                      </div>
                    </div>,
                    "context": Object {},
                    "current": [Circular],
                    "didError": false,
                    "earliestPendingTime": 0,
                    "earliestSuspendedTime": 0,
                    "expirationTime": 0,
                    "finishedWork": null,
                    "firstBatch": null,
                    "hydrate": false,
                    "interactionThreadID": 12,
                    "latestPendingTime": 0,
                    "latestPingedTime": 0,
                    "latestSuspendedTime": 0,
                    "memoizedInteractions": Set {},
                    "nextExpirationTimeToWorkOn": 0,
                    "nextScheduledRoot": null,
                    "pendingChildren": null,
                    "pendingCommitExpirationTime": 0,
                    "pendingContext": null,
                    "pendingInteractionMap": Map {},
                    "timeoutHandle": -1,
                  },
                  "tag": 3,
                  "treeBaseDuration": 0,
                  "type": null,
                  "updateQueue": Object {
                    "baseState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "children": <TextInputField
                              errors={
                                Array [
                                  "Name is required.",
                                ]
                              }
                              label="Item Name"
                              name="name"
                              onChange={[MockFunction]}
                              placeholder="Bread"
                              size={12}
                              value=""
                            />,
                          }
                        }
                      />,
                    },
                    "firstCapturedEffect": null,
                    "firstCapturedUpdate": null,
                    "firstEffect": null,
                    "firstUpdate": null,
                    "lastCapturedEffect": null,
                    "lastCapturedUpdate": null,
                    "lastEffect": null,
                    "lastUpdate": null,
                  },
                },
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": WrapperComponent {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "Component": [Function],
                    "context": null,
                    "props": Object {
                      "children": <TextInputField
                        errors={
                          Array [
                            "Name is required.",
                          ]
                        }
                        label="Item Name"
                        name="name"
                        onChange={[MockFunction]}
                        placeholder="Bread"
                        size={12}
                        value=""
                      />,
                    },
                  },
                  "refs": Object {},
                  "state": Object {
                    "context": null,
                    "mount": true,
                    "props": Object {
                      "children": <TextInputField
                        errors={
                          Array [
                            "Name is required.",
                          ]
                        }
                        label="Item Name"
                        name="name"
                        onChange={[MockFunction]}
                        placeholder="Bread"
                        size={12}
                        value=""
                      />,
                    },
                  },
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 1,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": null,
              },
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": <TextInputField
                  errors={
                    Array [
                      "Name is required.",
                    ]
                  }
                  label="Item Name"
                  name="name"
                  onChange={[MockFunction]}
                  placeholder="Bread"
                  size={12}
                  value=""
                />,
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": <TextInputField
                  errors={
                    Array [
                      "Name is required.",
                    ]
                  }
                  label="Item Name"
                  name="name"
                  onChange={[MockFunction]}
                  placeholder="Bread"
                  size={12}
                  value=""
                />,
              },
              "ref": null,
              "return": FiberNode {
                "_debugID": 49,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childExpirationTime": 0,
                "effectTag": 1,
                "elementType": [Function],
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "children": <TextInputField
                      errors={
                        Array [
                          "Name is required.",
                        ]
                      }
                      label="Item Name"
                      name="name"
                      onChange={[MockFunction]}
                      placeholder="Bread"
                      size={12}
                      value=""
                    />,
                  },
                },
                "memoizedState": Object {
                  "context": null,
                  "mount": true,
                  "props": Object {
                    "children": <TextInputField
                      errors={
                        Array [
                          "Name is required.",
                        ]
                      }
                      label="Item Name"
                      name="name"
                      onChange={[MockFunction]}
                      placeholder="Bread"
                      size={12}
                      value=""
                    />,
                  },
                },
                "mode": 0,
                "nextEffect": FiberNode {
                  "_debugID": 47,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": FiberNode {
                    "_debugID": 47,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": [Circular],
                    "child": null,
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "elementType": null,
                    "expirationTime": 1073741823,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": null,
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div>
                        <div>
                          <div
                            class="form-group col-md-12"
                          >
                            <label
                              for="name"
                            >
                              Item Name
                            </label>
                            <input
                              class="form-control"
                              id="name"
                              name="name"
                              placeholder="Bread"
                              type="text"
                              value=""
                            />
                            <div
                              class="error"
                            >
                              <span>
                                Name is required.
                              </span>
                            </div>
                          </div>
                        </div>
                      </div>,
                      "context": Object {},
                      "current": [Circular],
                      "didError": false,
                      "earliestPendingTime": 0,
                      "earliestSuspendedTime": 0,
                      "expirationTime": 0,
                      "finishedWork": null,
                      "firstBatch": null,
                      "hydrate": false,
                      "interactionThreadID": 12,
                      "latestPendingTime": 0,
                      "latestPingedTime": 0,
                      "latestSuspendedTime": 0,
                      "memoizedInteractions": Set {},
                      "nextExpirationTimeToWorkOn": 0,
                      "nextScheduledRoot": null,
                      "pendingChildren": null,
                      "pendingCommitExpirationTime": 0,
                      "pendingContext": null,
                      "pendingInteractionMap": Map {},
                      "timeoutHandle": -1,
                    },
                    "tag": 3,
                    "treeBaseDuration": 0,
                    "type": null,
                    "updateQueue": Object {
                      "baseState": null,
                      "firstCapturedEffect": null,
                      "firstCapturedUpdate": null,
                      "firstEffect": null,
                      "firstUpdate": Object {
                        "callback": null,
                        "expirationTime": 1073741823,
                        "next": null,
                        "nextEffect": null,
                        "payload": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "children": <TextInputField
                                  errors={
                                    Array [
                                      "Name is required.",
                                    ]
                                  }
                                  label="Item Name"
                                  name="name"
                                  onChange={[MockFunction]}
                                  placeholder="Bread"
                                  size={12}
                                  value=""
                                />,
                              }
                            }
                          />,
                        },
                        "tag": 0,
                      },
                      "lastCapturedEffect": null,
                      "lastCapturedUpdate": null,
                      "lastEffect": null,
                      "lastUpdate": Object {
                        "callback": null,
                        "expirationTime": 1073741823,
                        "next": null,
                        "nextEffect": null,
                        "payload": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "children": <TextInputField
                                  errors={
                                    Array [
                                      "Name is required.",
                                    ]
                                  }
                                  label="Item Name"
                                  name="name"
                                  onChange={[MockFunction]}
                                  placeholder="Bread"
                                  size={12}
                                  value=""
                                />,
                              }
                            }
                          />,
                        },
                        "tag": 0,
                      },
                    },
                  },
                  "child": [Circular],
                  "childExpirationTime": 0,
                  "effectTag": 32,
                  "elementType": null,
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": null,
                  "memoizedState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "children": <TextInputField
                            errors={
                              Array [
                                "Name is required.",
                              ]
                            }
                            label="Item Name"
                            name="name"
                            onChange={[MockFunction]}
                            placeholder="Bread"
                            size={12}
                            value=""
                          />,
                        }
                      }
                    />,
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": Object {
                    "containerInfo": <div>
                      <div>
                        <div
                          class="form-group col-md-12"
                        >
                          <label
                            for="name"
                          >
                            Item Name
                          </label>
                          <input
                            class="form-control"
                            id="name"
                            name="name"
                            placeholder="Bread"
                            type="text"
                            value=""
                          />
                          <div
                            class="error"
                          >
                            <span>
                              Name is required.
                            </span>
                          </div>
                        </div>
                      </div>
                    </div>,
                    "context": Object {},
                    "current": [Circular],
                    "didError": false,
                    "earliestPendingTime": 0,
                    "earliestSuspendedTime": 0,
                    "expirationTime": 0,
                    "finishedWork": null,
                    "firstBatch": null,
                    "hydrate": false,
                    "interactionThreadID": 12,
                    "latestPendingTime": 0,
                    "latestPingedTime": 0,
                    "latestSuspendedTime": 0,
                    "memoizedInteractions": Set {},
                    "nextExpirationTimeToWorkOn": 0,
                    "nextScheduledRoot": null,
                    "pendingChildren": null,
                    "pendingCommitExpirationTime": 0,
                    "pendingContext": null,
                    "pendingInteractionMap": Map {},
                    "timeoutHandle": -1,
                  },
                  "tag": 3,
                  "treeBaseDuration": 0,
                  "type": null,
                  "updateQueue": Object {
                    "baseState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "children": <TextInputField
                              errors={
                                Array [
                                  "Name is required.",
                                ]
                              }
                              label="Item Name"
                              name="name"
                              onChange={[MockFunction]}
                              placeholder="Bread"
                              size={12}
                              value=""
                            />,
                          }
                        }
                      />,
                    },
                    "firstCapturedEffect": null,
                    "firstCapturedUpdate": null,
                    "firstEffect": null,
                    "firstUpdate": null,
                    "lastCapturedEffect": null,
                    "lastCapturedUpdate": null,
                    "lastEffect": null,
                    "lastUpdate": null,
                  },
                },
                "pendingProps": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "children": <TextInputField
                      errors={
                        Array [
                          "Name is required.",
                        ]
                      }
                      label="Item Name"
                      name="name"
                      onChange={[MockFunction]}
                      placeholder="Bread"
                      size={12}
                      value=""
                    />,
                  },
                },
                "ref": null,
                "return": FiberNode {
                  "_debugID": 47,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": FiberNode {
                    "_debugID": 47,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": [Circular],
                    "child": null,
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "elementType": null,
                    "expirationTime": 1073741823,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": null,
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div>
                        <div>
                          <div
                            class="form-group col-md-12"
                          >
                            <label
                              for="name"
                            >
                              Item Name
                            </label>
                            <input
                              class="form-control"
                              id="name"
                              name="name"
                              placeholder="Bread"
                              type="text"
                              value=""
                            />
                            <div
                              class="error"
                            >
                              <span>
                                Name is required.
                              </span>
                            </div>
                          </div>
                        </div>
                      </div>,
                      "context": Object {},
                      "current": [Circular],
                      "didError": false,
                      "earliestPendingTime": 0,
                      "earliestSuspendedTime": 0,
                      "expirationTime": 0,
                      "finishedWork": null,
                      "firstBatch": null,
                      "hydrate": false,
                      "interactionThreadID": 12,
                      "latestPendingTime": 0,
                      "latestPingedTime": 0,
                      "latestSuspendedTime": 0,
                      "memoizedInteractions": Set {},
                      "nextExpirationTimeToWorkOn": 0,
                      "nextScheduledRoot": null,
                      "pendingChildren": null,
                      "pendingCommitExpirationTime": 0,
                      "pendingContext": null,
                      "pendingInteractionMap": Map {},
                      "timeoutHandle": -1,
                    },
                    "tag": 3,
                    "treeBaseDuration": 0,
                    "type": null,
                    "updateQueue": Object {
                      "baseState": null,
                      "firstCapturedEffect": null,
                      "firstCapturedUpdate": null,
                      "firstEffect": null,
                      "firstUpdate": Object {
                        "callback": null,
                        "expirationTime": 1073741823,
                        "next": null,
                        "nextEffect": null,
                        "payload": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "children": <TextInputField
                                  errors={
                                    Array [
                                      "Name is required.",
                                    ]
                                  }
                                  label="Item Name"
                                  name="name"
                                  onChange={[MockFunction]}
                                  placeholder="Bread"
                                  size={12}
                                  value=""
                                />,
                              }
                            }
                          />,
                        },
                        "tag": 0,
                      },
                      "lastCapturedEffect": null,
                      "lastCapturedUpdate": null,
                      "lastEffect": null,
                      "lastUpdate": Object {
                        "callback": null,
                        "expirationTime": 1073741823,
                        "next": null,
                        "nextEffect": null,
                        "payload": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "children": <TextInputField
                                  errors={
                                    Array [
                                      "Name is required.",
                                    ]
                                  }
                                  label="Item Name"
                                  name="name"
                                  onChange={[MockFunction]}
                                  placeholder="Bread"
                                  size={12}
                                  value=""
                                />,
                              }
                            }
                          />,
                        },
                        "tag": 0,
                      },
                    },
                  },
                  "child": [Circular],
                  "childExpirationTime": 0,
                  "effectTag": 32,
                  "elementType": null,
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": null,
                  "memoizedState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "children": <TextInputField
                            errors={
                              Array [
                                "Name is required.",
                              ]
                            }
                            label="Item Name"
                            name="name"
                            onChange={[MockFunction]}
                            placeholder="Bread"
                            size={12}
                            value=""
                          />,
                        }
                      }
                    />,
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": Object {
                    "containerInfo": <div>
                      <div>
                        <div
                          class="form-group col-md-12"
                        >
                          <label
                            for="name"
                          >
                            Item Name
                          </label>
                          <input
                            class="form-control"
                            id="name"
                            name="name"
                            placeholder="Bread"
                            type="text"
                            value=""
                          />
                          <div
                            class="error"
                          >
                            <span>
                              Name is required.
                            </span>
                          </div>
                        </div>
                      </div>
                    </div>,
                    "context": Object {},
                    "current": [Circular],
                    "didError": false,
                    "earliestPendingTime": 0,
                    "earliestSuspendedTime": 0,
                    "expirationTime": 0,
                    "finishedWork": null,
                    "firstBatch": null,
                    "hydrate": false,
                    "interactionThreadID": 12,
                    "latestPendingTime": 0,
                    "latestPingedTime": 0,
                    "latestSuspendedTime": 0,
                    "memoizedInteractions": Set {},
                    "nextExpirationTimeToWorkOn": 0,
                    "nextScheduledRoot": null,
                    "pendingChildren": null,
                    "pendingCommitExpirationTime": 0,
                    "pendingContext": null,
                    "pendingInteractionMap": Map {},
                    "timeoutHandle": -1,
                  },
                  "tag": 3,
                  "treeBaseDuration": 0,
                  "type": null,
                  "updateQueue": Object {
                    "baseState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "children": <TextInputField
                              errors={
                                Array [
                                  "Name is required.",
                                ]
                              }
                              label="Item Name"
                              name="name"
                              onChange={[MockFunction]}
                              placeholder="Bread"
                              size={12}
                              value=""
                            />,
                          }
                        }
                      />,
                    },
                    "firstCapturedEffect": null,
                    "firstCapturedUpdate": null,
                    "firstEffect": null,
                    "firstUpdate": null,
                    "lastCapturedEffect": null,
                    "lastCapturedUpdate": null,
                    "lastEffect": null,
                    "lastUpdate": null,
                  },
                },
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": WrapperComponent {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "Component": [Function],
                    "context": null,
                    "props": Object {
                      "children": <TextInputField
                        errors={
                          Array [
                            "Name is required.",
                          ]
                        }
                        label="Item Name"
                        name="name"
                        onChange={[MockFunction]}
                        placeholder="Bread"
                        size={12}
                        value=""
                      />,
                    },
                  },
                  "refs": Object {},
                  "state": Object {
                    "context": null,
                    "mount": true,
                    "props": Object {
                      "children": <TextInputField
                        errors={
                          Array [
                            "Name is required.",
                          ]
                        }
                        label="Item Name"
                        name="name"
                        onChange={[MockFunction]}
                        placeholder="Bread"
                        size={12}
                        value=""
                      />,
                    },
                  },
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 1,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": null,
              },
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": BrowserRouter {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "history": Object {
                  "action": "POP",
                  "block": [Function],
                  "createHref": [Function],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "push": [Function],
                  "replace": [Function],
                },
                "props": Object {
                  "children": <TextInputField
                    errors={
                      Array [
                        "Name is required.",
                      ]
                    }
                    label="Item Name"
                    name="name"
                    onChange={[MockFunction]}
                    placeholder="Bread"
                    size={12}
                    value=""
                  />,
                },
                "refs": Object {},
                "state": null,
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": null,
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": [Circular],
            "tag": 1,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "_reactInternalInstance": Object {},
          "context": Object {
            "router": undefined,
          },
          "props": Object {
            "children": <TextInputField
              errors={
                Array [
                  "Name is required.",
                ]
              }
              label="Item Name"
              name="name"
              onChange={[MockFunction]}
              placeholder="Bread"
              size={12}
              value=""
            />,
            "history": Object {
              "action": "POP",
              "block": [Function],
              "createHref": [Function],
              "go": [Function],
              "goBack": [Function],
              "goForward": [Function],
              "length": 1,
              "listen": [Function],
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
              "push": [Function],
              "replace": [Function],
            },
          },
          "refs": Object {},
          "state": Object {
            "match": Object {
              "isExact": true,
              "params": Object {},
              "path": "/",
              "url": "/",
            },
          },
          "unlisten": [Function],
          "updater": Object {
            "enqueueForceUpdate": [Function],
            "enqueueReplaceState": [Function],
            "enqueueSetState": [Function],
            "isMounted": [Function],
          },
        },
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <TextInputField
            errors={
              Array [
                "Name is required.",
              ]
            }
            label="Item Name"
            name="name"
            onChange={[MockFunction]}
            placeholder="Bread"
            size={12}
            value=""
          />,
          "history": Object {
            "action": "POP",
            "block": [Function],
            "createHref": [Function],
            "go": [Function],
            "goBack": [Function],
            "goForward": [Function],
            "length": 1,
            "listen": [Function],
            "location": Object {
              "hash": "",
              "pathname": "/",
              "search": "",
              "state": undefined,
            },
            "push": [Function],
            "replace": [Function],
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "errors": Array [
              "Name is required.",
            ],
            "label": "Item Name",
            "name": "name",
            "onChange": [MockFunction],
            "placeholder": "Bread",
            "size": 12,
            "value": "",
          },
          "ref": null,
          "rendered": Object {
            "instance": <div>
              <div
                class="form-group col-md-12"
              >
                <label
                  for="name"
                >
                  Item Name
                </label>
                <input
                  class="form-control"
                  id="name"
                  name="name"
                  placeholder="Bread"
                  type="text"
                  value=""
                />
                <div
                  class="error"
                >
                  <span>
                    Name is required.
                  </span>
                </div>
              </div>
            </div>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <div
                className="form-group col-md-12"
              >
                <label
                  htmlFor="name"
                >
                  Item Name
                </label>
                <input
                  className="form-control"
                  id="name"
                  name="name"
                  onChange={[MockFunction]}
                  placeholder="Bread"
                  type="text"
                  value=""
                />
                <div
                  className="error"
                >
                  <span>
                    Name is required.
                  </span>
                </div>
              </div>,
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": <div
                  class="form-group col-md-12"
                >
                  <label
                    for="name"
                  >
                    Item Name
                  </label>
                  <input
                    class="form-control"
                    id="name"
                    name="name"
                    placeholder="Bread"
                    type="text"
                    value=""
                  />
                  <div
                    class="error"
                  >
                    <span>
                      Name is required.
                    </span>
                  </div>
                </div>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <label
                      htmlFor="name"
                    >
                      Item Name
                    </label>,
                    <input
                      className="form-control"
                      id="name"
                      name="name"
                      onChange={[MockFunction]}
                      placeholder="Bread"
                      type="text"
                      value=""
                    />,
                    <div
                      className="error"
                    >
                      <span>
                        Name is required.
                      </span>
                    </div>,
                  ],
                  "className": "form-group col-md-12",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": <label
                      for="name"
                    >
                      Item Name
                    </label>,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Item Name",
                      "htmlFor": "name",
                    },
                    "ref": null,
                    "rendered": Array [
                      "Item Name",
                    ],
                    "type": "label",
                  },
                  Object {
                    "instance": <input
                      class="form-control"
                      id="name"
                      name="name"
                      placeholder="Bread"
                      type="text"
                      value=""
                    />,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "className": "form-control",
                      "id": "name",
                      "name": "name",
                      "onChange": [MockFunction],
                      "placeholder": "Bread",
                      "type": "text",
                      "value": "",
                    },
                    "ref": null,
                    "rendered": Array [
                      undefined,
                    ],
                    "type": "input",
                  },
                  Object {
                    "instance": <div
                      class="error"
                    >
                      <span>
                        Name is required.
                      </span>
                    </div>,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <span>
                          Name is required.
                        </span>,
                      ],
                      "className": "error",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": <span>
                          Name is required.
                        </span>,
                        "key": "0",
                        "nodeType": "host",
                        "props": Object {
                          "children": "Name is required.",
                        },
                        "ref": null,
                        "rendered": Array [
                          "Name is required.",
                        ],
                        "type": "span",
                      },
                    ],
                    "type": "div",
                  },
                ],
                "type": "div",
              },
            ],
            "type": "div",
          },
          "type": [Function],
        },
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
