// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Groceries Component should render component 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Groceries
    addItem={[MockFunction]}
    deleteItem={[MockFunction]}
    getAllItems={
      [MockFunction] {
        "calls": Array [
          Array [],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": undefined,
          },
        ],
      }
    }
    items={
      Array [
        Object {
          "_id": "msken",
          "amount": "700",
          "name": "Milk",
          "purchased": true,
        },
        Object {
          "_id": "bken",
          "amount": "300",
          "name": "Bread",
          "purchased": false,
        },
      ]
    }
    resetGroceryState={[MockFunction]}
    toggleBuy={[MockFunction]}
    updateItem={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h1>
          Grocery Listify
        </h1>,
        <div
          className="row"
        >
          <div
            className="items col-md-9"
          >
            <TransactionSummary
              items={
                Array [
                  Object {
                    "_id": "msken",
                    "amount": "700",
                    "name": "Milk",
                    "purchased": true,
                  },
                  Object {
                    "_id": "bken",
                    "amount": "300",
                    "name": "Bread",
                    "purchased": false,
                  },
                ]
              }
            />
            <GroceryItems
              deleteItem={[Function]}
              groceries={
                Array [
                  Object {
                    "_id": "msken",
                    "amount": "700",
                    "name": "Milk",
                    "purchased": true,
                  },
                  Object {
                    "_id": "bken",
                    "amount": "300",
                    "name": "Bread",
                    "purchased": false,
                  },
                ]
              }
              startEditing={[Function]}
              toggleBuy={[Function]}
            />
          </div>
          <div
            className="item-form col-md-3"
          >
            <AddGroceryItem
              errors={
                Object {
                  "amount": Array [],
                  "name": Array [],
                }
              }
              grocery={
                Object {
                  "amount": "",
                  "name": "",
                  "purchased": false,
                }
              }
              isEditing={false}
              onChange={[Function]}
              saveItem={[Function]}
              stopEditing={[Function]}
            />
          </div>
        </div>,
      ],
      "className": "main container",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Grocery Listify",
        },
        "ref": null,
        "rendered": "Grocery Listify",
        "type": "h1",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="items col-md-9"
            >
              <TransactionSummary
                items={
                  Array [
                    Object {
                      "_id": "msken",
                      "amount": "700",
                      "name": "Milk",
                      "purchased": true,
                    },
                    Object {
                      "_id": "bken",
                      "amount": "300",
                      "name": "Bread",
                      "purchased": false,
                    },
                  ]
                }
              />
              <GroceryItems
                deleteItem={[Function]}
                groceries={
                  Array [
                    Object {
                      "_id": "msken",
                      "amount": "700",
                      "name": "Milk",
                      "purchased": true,
                    },
                    Object {
                      "_id": "bken",
                      "amount": "300",
                      "name": "Bread",
                      "purchased": false,
                    },
                  ]
                }
                startEditing={[Function]}
                toggleBuy={[Function]}
              />
            </div>,
            <div
              className="item-form col-md-3"
            >
              <AddGroceryItem
                errors={
                  Object {
                    "amount": Array [],
                    "name": Array [],
                  }
                }
                grocery={
                  Object {
                    "amount": "",
                    "name": "",
                    "purchased": false,
                  }
                }
                isEditing={false}
                onChange={[Function]}
                saveItem={[Function]}
                stopEditing={[Function]}
              />
            </div>,
          ],
          "className": "row",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <TransactionSummary
                  items={
                    Array [
                      Object {
                        "_id": "msken",
                        "amount": "700",
                        "name": "Milk",
                        "purchased": true,
                      },
                      Object {
                        "_id": "bken",
                        "amount": "300",
                        "name": "Bread",
                        "purchased": false,
                      },
                    ]
                  }
                />,
                <GroceryItems
                  deleteItem={[Function]}
                  groceries={
                    Array [
                      Object {
                        "_id": "msken",
                        "amount": "700",
                        "name": "Milk",
                        "purchased": true,
                      },
                      Object {
                        "_id": "bken",
                        "amount": "300",
                        "name": "Bread",
                        "purchased": false,
                      },
                    ]
                  }
                  startEditing={[Function]}
                  toggleBuy={[Function]}
                />,
              ],
              "className": "items col-md-9",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "items": Array [
                    Object {
                      "_id": "msken",
                      "amount": "700",
                      "name": "Milk",
                      "purchased": true,
                    },
                    Object {
                      "_id": "bken",
                      "amount": "300",
                      "name": "Bread",
                      "purchased": false,
                    },
                  ],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "deleteItem": [Function],
                  "groceries": Array [
                    Object {
                      "_id": "msken",
                      "amount": "700",
                      "name": "Milk",
                      "purchased": true,
                    },
                    Object {
                      "_id": "bken",
                      "amount": "300",
                      "name": "Bread",
                      "purchased": false,
                    },
                  ],
                  "startEditing": [Function],
                  "toggleBuy": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <AddGroceryItem
                errors={
                  Object {
                    "amount": Array [],
                    "name": Array [],
                  }
                }
                grocery={
                  Object {
                    "amount": "",
                    "name": "",
                    "purchased": false,
                  }
                }
                isEditing={false}
                onChange={[Function]}
                saveItem={[Function]}
                stopEditing={[Function]}
              />,
              "className": "item-form col-md-3",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "errors": Object {
                  "amount": Array [],
                  "name": Array [],
                },
                "grocery": Object {
                  "amount": "",
                  "name": "",
                  "purchased": false,
                },
                "isEditing": false,
                "onChange": [Function],
                "saveItem": [Function],
                "stopEditing": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h1>
            Grocery Listify
          </h1>,
          <div
            className="row"
          >
            <div
              className="items col-md-9"
            >
              <TransactionSummary
                items={
                  Array [
                    Object {
                      "_id": "msken",
                      "amount": "700",
                      "name": "Milk",
                      "purchased": true,
                    },
                    Object {
                      "_id": "bken",
                      "amount": "300",
                      "name": "Bread",
                      "purchased": false,
                    },
                  ]
                }
              />
              <GroceryItems
                deleteItem={[Function]}
                groceries={
                  Array [
                    Object {
                      "_id": "msken",
                      "amount": "700",
                      "name": "Milk",
                      "purchased": true,
                    },
                    Object {
                      "_id": "bken",
                      "amount": "300",
                      "name": "Bread",
                      "purchased": false,
                    },
                  ]
                }
                startEditing={[Function]}
                toggleBuy={[Function]}
              />
            </div>
            <div
              className="item-form col-md-3"
            >
              <AddGroceryItem
                errors={
                  Object {
                    "amount": Array [],
                    "name": Array [],
                  }
                }
                grocery={
                  Object {
                    "amount": "",
                    "name": "",
                    "purchased": false,
                  }
                }
                isEditing={false}
                onChange={[Function]}
                saveItem={[Function]}
                stopEditing={[Function]}
              />
            </div>
          </div>,
        ],
        "className": "main container",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Grocery Listify",
          },
          "ref": null,
          "rendered": "Grocery Listify",
          "type": "h1",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="items col-md-9"
              >
                <TransactionSummary
                  items={
                    Array [
                      Object {
                        "_id": "msken",
                        "amount": "700",
                        "name": "Milk",
                        "purchased": true,
                      },
                      Object {
                        "_id": "bken",
                        "amount": "300",
                        "name": "Bread",
                        "purchased": false,
                      },
                    ]
                  }
                />
                <GroceryItems
                  deleteItem={[Function]}
                  groceries={
                    Array [
                      Object {
                        "_id": "msken",
                        "amount": "700",
                        "name": "Milk",
                        "purchased": true,
                      },
                      Object {
                        "_id": "bken",
                        "amount": "300",
                        "name": "Bread",
                        "purchased": false,
                      },
                    ]
                  }
                  startEditing={[Function]}
                  toggleBuy={[Function]}
                />
              </div>,
              <div
                className="item-form col-md-3"
              >
                <AddGroceryItem
                  errors={
                    Object {
                      "amount": Array [],
                      "name": Array [],
                    }
                  }
                  grocery={
                    Object {
                      "amount": "",
                      "name": "",
                      "purchased": false,
                    }
                  }
                  isEditing={false}
                  onChange={[Function]}
                  saveItem={[Function]}
                  stopEditing={[Function]}
                />
              </div>,
            ],
            "className": "row",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <TransactionSummary
                    items={
                      Array [
                        Object {
                          "_id": "msken",
                          "amount": "700",
                          "name": "Milk",
                          "purchased": true,
                        },
                        Object {
                          "_id": "bken",
                          "amount": "300",
                          "name": "Bread",
                          "purchased": false,
                        },
                      ]
                    }
                  />,
                  <GroceryItems
                    deleteItem={[Function]}
                    groceries={
                      Array [
                        Object {
                          "_id": "msken",
                          "amount": "700",
                          "name": "Milk",
                          "purchased": true,
                        },
                        Object {
                          "_id": "bken",
                          "amount": "300",
                          "name": "Bread",
                          "purchased": false,
                        },
                      ]
                    }
                    startEditing={[Function]}
                    toggleBuy={[Function]}
                  />,
                ],
                "className": "items col-md-9",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "items": Array [
                      Object {
                        "_id": "msken",
                        "amount": "700",
                        "name": "Milk",
                        "purchased": true,
                      },
                      Object {
                        "_id": "bken",
                        "amount": "300",
                        "name": "Bread",
                        "purchased": false,
                      },
                    ],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "deleteItem": [Function],
                    "groceries": Array [
                      Object {
                        "_id": "msken",
                        "amount": "700",
                        "name": "Milk",
                        "purchased": true,
                      },
                      Object {
                        "_id": "bken",
                        "amount": "300",
                        "name": "Bread",
                        "purchased": false,
                      },
                    ],
                    "startEditing": [Function],
                    "toggleBuy": [Function],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <AddGroceryItem
                  errors={
                    Object {
                      "amount": Array [],
                      "name": Array [],
                    }
                  }
                  grocery={
                    Object {
                      "amount": "",
                      "name": "",
                      "purchased": false,
                    }
                  }
                  isEditing={false}
                  onChange={[Function]}
                  saveItem={[Function]}
                  stopEditing={[Function]}
                />,
                "className": "item-form col-md-3",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "errors": Object {
                    "amount": Array [],
                    "name": Array [],
                  },
                  "grocery": Object {
                    "amount": "",
                    "name": "",
                    "purchased": false,
                  },
                  "isEditing": false,
                  "onChange": [Function],
                  "saveItem": [Function],
                  "stopEditing": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
