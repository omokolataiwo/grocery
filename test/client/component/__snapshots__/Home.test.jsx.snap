// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Home Component should render component 1`] = `
ReactWrapper {
  Symbol(enzyme.__unrendered__): <BrowserRouter>
    <_default />
  </BrowserRouter>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": BrowserRouter {
      "_reactInternalFiber": FiberNode {
        "_debugID": 50,
        "_debugIsCurrentlyTiming": false,
        "_debugOwner": FiberNode {
          "_debugID": 49,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": null,
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": [Circular],
          "childExpirationTime": 0,
          "effectTag": 1,
          "elementType": [Function],
          "expirationTime": 0,
          "firstContextDependency": null,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "children": <_default />,
            },
          },
          "memoizedState": Object {
            "context": null,
            "mount": true,
            "props": Object {
              "children": <_default />,
            },
          },
          "mode": 0,
          "nextEffect": FiberNode {
            "_debugID": 47,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": FiberNode {
              "_debugID": 47,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": [Circular],
              "child": null,
              "childExpirationTime": 0,
              "effectTag": 0,
              "elementType": null,
              "expirationTime": 1073741823,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div>
                    <div
                      class="jumbotron text-center"
                    >
                      <h1>
                        Grocery Listify
                      </h1>
                      <p>
                        Grocery Store Management Made easy with
                         
                      </p>
                    </div>
                    <div
                      class="container home"
                    >
                      <div
                        class="row text-center"
                      >
                        <div
                          class="col-md-4"
                        >
                          <h5>
                            Shop
                          </h5>
                          <p>
                            You can use the web app to add/remove item from a shopping experience.
                          </p>
                        </div>
                        <div
                          class="col-md-4"
                        >
                          <h5>
                            Manage Item
                          </h5>
                          <p>
                            You can manage item you add. YOu can also delete an item with a very simple user experience.
                          </p>
                        </div>
                        <div
                          class="col-md-4"
                        >
                          <h5>
                            Transaction Summary
                          </h5>
                          <p>
                            Transaction summary of item purchase can not be easier.
                          </p>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 12,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "children": <_default />,
                        }
                      }
                    />,
                  },
                  "tag": 0,
                },
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "children": <_default />,
                        }
                      }
                    />,
                  },
                  "tag": 0,
                },
              },
            },
            "child": [Circular],
            "childExpirationTime": 0,
            "effectTag": 32,
            "elementType": null,
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={
                  Object {
                    "children": <_default />,
                  }
                }
              />,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <div>
                  <div
                    class="jumbotron text-center"
                  >
                    <h1>
                      Grocery Listify
                    </h1>
                    <p>
                      Grocery Store Management Made easy with
                       
                    </p>
                  </div>
                  <div
                    class="container home"
                  >
                    <div
                      class="row text-center"
                    >
                      <div
                        class="col-md-4"
                      >
                        <h5>
                          Shop
                        </h5>
                        <p>
                          You can use the web app to add/remove item from a shopping experience.
                        </p>
                      </div>
                      <div
                        class="col-md-4"
                      >
                        <h5>
                          Manage Item
                        </h5>
                        <p>
                          You can manage item you add. YOu can also delete an item with a very simple user experience.
                        </p>
                      </div>
                      <div
                        class="col-md-4"
                      >
                        <h5>
                          Transaction Summary
                        </h5>
                        <p>
                          Transaction summary of item purchase can not be easier.
                        </p>
                      </div>
                    </div>
                  </div>
                </div>
              </div>,
              "context": Object {},
              "current": [Circular],
              "didError": false,
              "earliestPendingTime": 0,
              "earliestSuspendedTime": 0,
              "expirationTime": 0,
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "interactionThreadID": 12,
              "latestPendingTime": 0,
              "latestPingedTime": 0,
              "latestSuspendedTime": 0,
              "memoizedInteractions": Set {},
              "nextExpirationTimeToWorkOn": 0,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "pendingInteractionMap": Map {},
              "timeoutHandle": -1,
            },
            "tag": 3,
            "treeBaseDuration": 0,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "children": <_default />,
                    }
                  }
                />,
              },
              "firstCapturedEffect": null,
              "firstCapturedUpdate": null,
              "firstEffect": null,
              "firstUpdate": null,
              "lastCapturedEffect": null,
              "lastCapturedUpdate": null,
              "lastEffect": null,
              "lastUpdate": null,
            },
          },
          "pendingProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "children": <_default />,
            },
          },
          "ref": null,
          "return": FiberNode {
            "_debugID": 47,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": FiberNode {
              "_debugID": 47,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": [Circular],
              "child": null,
              "childExpirationTime": 0,
              "effectTag": 0,
              "elementType": null,
              "expirationTime": 1073741823,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div>
                    <div
                      class="jumbotron text-center"
                    >
                      <h1>
                        Grocery Listify
                      </h1>
                      <p>
                        Grocery Store Management Made easy with
                         
                      </p>
                    </div>
                    <div
                      class="container home"
                    >
                      <div
                        class="row text-center"
                      >
                        <div
                          class="col-md-4"
                        >
                          <h5>
                            Shop
                          </h5>
                          <p>
                            You can use the web app to add/remove item from a shopping experience.
                          </p>
                        </div>
                        <div
                          class="col-md-4"
                        >
                          <h5>
                            Manage Item
                          </h5>
                          <p>
                            You can manage item you add. YOu can also delete an item with a very simple user experience.
                          </p>
                        </div>
                        <div
                          class="col-md-4"
                        >
                          <h5>
                            Transaction Summary
                          </h5>
                          <p>
                            Transaction summary of item purchase can not be easier.
                          </p>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 12,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "children": <_default />,
                        }
                      }
                    />,
                  },
                  "tag": 0,
                },
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "children": <_default />,
                        }
                      }
                    />,
                  },
                  "tag": 0,
                },
              },
            },
            "child": [Circular],
            "childExpirationTime": 0,
            "effectTag": 32,
            "elementType": null,
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={
                  Object {
                    "children": <_default />,
                  }
                }
              />,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <div>
                  <div
                    class="jumbotron text-center"
                  >
                    <h1>
                      Grocery Listify
                    </h1>
                    <p>
                      Grocery Store Management Made easy with
                       
                    </p>
                  </div>
                  <div
                    class="container home"
                  >
                    <div
                      class="row text-center"
                    >
                      <div
                        class="col-md-4"
                      >
                        <h5>
                          Shop
                        </h5>
                        <p>
                          You can use the web app to add/remove item from a shopping experience.
                        </p>
                      </div>
                      <div
                        class="col-md-4"
                      >
                        <h5>
                          Manage Item
                        </h5>
                        <p>
                          You can manage item you add. YOu can also delete an item with a very simple user experience.
                        </p>
                      </div>
                      <div
                        class="col-md-4"
                      >
                        <h5>
                          Transaction Summary
                        </h5>
                        <p>
                          Transaction summary of item purchase can not be easier.
                        </p>
                      </div>
                    </div>
                  </div>
                </div>
              </div>,
              "context": Object {},
              "current": [Circular],
              "didError": false,
              "earliestPendingTime": 0,
              "earliestSuspendedTime": 0,
              "expirationTime": 0,
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "interactionThreadID": 12,
              "latestPendingTime": 0,
              "latestPingedTime": 0,
              "latestSuspendedTime": 0,
              "memoizedInteractions": Set {},
              "nextExpirationTimeToWorkOn": 0,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "pendingInteractionMap": Map {},
              "timeoutHandle": -1,
            },
            "tag": 3,
            "treeBaseDuration": 0,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "children": <_default />,
                    }
                  }
                />,
              },
              "firstCapturedEffect": null,
              "firstCapturedUpdate": null,
              "firstEffect": null,
              "firstUpdate": null,
              "lastCapturedEffect": null,
              "lastCapturedUpdate": null,
              "lastEffect": null,
              "lastUpdate": null,
            },
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": WrapperComponent {
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "children": <_default />,
              },
            },
            "refs": Object {},
            "state": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "children": <_default />,
              },
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 1,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "_debugSource": null,
        "actualDuration": 0,
        "actualStartTime": -1,
        "alternate": null,
        "child": FiberNode {
          "_debugID": 51,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": [Circular],
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": FiberNode {
            "_debugID": 52,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": FiberNode {
              "_debugID": 53,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 54,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 56,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": null,
                  "childExpirationTime": 0,
                  "effectTag": 0,
                  "elementType": "h1",
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": "Grocery Listify",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": "Grocery Listify",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": FiberNode {
                    "_debugID": 57,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 58,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": null,
                      "childExpirationTime": 0,
                      "effectTag": 0,
                      "elementType": null,
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": "Grocery Store Management Made easy with",
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": "Grocery Store Management Made easy with",
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": FiberNode {
                        "_debugID": 59,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": null,
                        "childExpirationTime": 0,
                        "effectTag": 0,
                        "elementType": null,
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 1,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": " ",
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": " ",
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": FiberNode {
                          "_debugID": 60,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childExpirationTime": 0,
                          "effectTag": 1,
                          "elementType": [Function],
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 2,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "border": false,
                            "className": "",
                            "fixedWidth": false,
                            "flip": null,
                            "icon": "heart",
                            "inverse": false,
                            "listItem": false,
                            "mask": null,
                            "pull": null,
                            "pulse": false,
                            "rotation": null,
                            "size": null,
                            "spin": false,
                            "symbol": false,
                            "title": "",
                            "transform": null,
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "border": false,
                            "className": "",
                            "fixedWidth": false,
                            "flip": null,
                            "icon": "heart",
                            "inverse": false,
                            "listItem": false,
                            "mask": null,
                            "pull": null,
                            "pulse": false,
                            "rotation": null,
                            "size": null,
                            "spin": false,
                            "symbol": false,
                            "title": "",
                            "transform": null,
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": null,
                          "tag": 0,
                          "treeBaseDuration": 0,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "stateNode":  ,
                        "tag": 6,
                        "treeBaseDuration": 0,
                        "type": null,
                        "updateQueue": null,
                      },
                      "stateNode": Grocery Store Management Made easy with,
                      "tag": 6,
                      "treeBaseDuration": 0,
                      "type": null,
                      "updateQueue": null,
                    },
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "elementType": "p",
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 1,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [
                        "Grocery Store Management Made easy with",
                        " ",
                        <FontAwesomeIcon
                          border={false}
                          className=""
                          fixedWidth={false}
                          flip={null}
                          icon="heart"
                          inverse={false}
                          listItem={false}
                          mask={null}
                          pull={null}
                          pulse={false}
                          rotation={null}
                          size={null}
                          spin={false}
                          symbol={false}
                          title=""
                          transform={null}
                        />,
                      ],
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": Array [
                        "Grocery Store Management Made easy with",
                        " ",
                        <FontAwesomeIcon
                          border={false}
                          className=""
                          fixedWidth={false}
                          flip={null}
                          icon="heart"
                          inverse={false}
                          listItem={false}
                          mask={null}
                          pull={null}
                          pulse={false}
                          rotation={null}
                          size={null}
                          spin={false}
                          symbol={false}
                          title=""
                          transform={null}
                        />,
                      ],
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": <p>
                      Grocery Store Management Made easy with
                       
                    </p>,
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": "p",
                    "updateQueue": null,
                  },
                  "stateNode": <h1>
                    Grocery Listify
                  </h1>,
                  "tag": 5,
                  "treeBaseDuration": 0,
                  "type": "h1",
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "effectTag": 0,
                "elementType": "div",
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <h1>
                      Grocery Listify
                    </h1>,
                    <p>
                      Grocery Store Management Made easy with
                       
                      <FontAwesomeIcon
                        border={false}
                        className=""
                        fixedWidth={false}
                        flip={null}
                        icon="heart"
                        inverse={false}
                        listItem={false}
                        mask={null}
                        pull={null}
                        pulse={false}
                        rotation={null}
                        size={null}
                        spin={false}
                        symbol={false}
                        title=""
                        transform={null}
                      />
                    </p>,
                  ],
                  "className": "jumbotron text-center",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": Array [
                    <h1>
                      Grocery Listify
                    </h1>,
                    <p>
                      Grocery Store Management Made easy with
                       
                      <FontAwesomeIcon
                        border={false}
                        className=""
                        fixedWidth={false}
                        flip={null}
                        icon="heart"
                        inverse={false}
                        listItem={false}
                        mask={null}
                        pull={null}
                        pulse={false}
                        rotation={null}
                        size={null}
                        spin={false}
                        symbol={false}
                        title=""
                        transform={null}
                      />
                    </p>,
                  ],
                  "className": "jumbotron text-center",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": FiberNode {
                  "_debugID": 55,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 61,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 62,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 65,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": null,
                        "childExpirationTime": 0,
                        "effectTag": 1,
                        "elementType": [Function],
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "border": false,
                          "className": "",
                          "fixedWidth": false,
                          "flip": null,
                          "icon": "shopping-bag",
                          "inverse": false,
                          "listItem": false,
                          "mask": null,
                          "pull": null,
                          "pulse": false,
                          "rotation": null,
                          "size": null,
                          "spin": false,
                          "symbol": false,
                          "title": "",
                          "transform": null,
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "border": false,
                          "className": "",
                          "fixedWidth": false,
                          "flip": null,
                          "icon": "shopping-bag",
                          "inverse": false,
                          "listItem": false,
                          "mask": null,
                          "pull": null,
                          "pulse": false,
                          "rotation": null,
                          "size": null,
                          "spin": false,
                          "symbol": false,
                          "title": "",
                          "transform": null,
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": FiberNode {
                          "_debugID": 66,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childExpirationTime": 0,
                          "effectTag": 0,
                          "elementType": "h5",
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 1,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": "Shop",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": "Shop",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": FiberNode {
                            "_debugID": 67,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childExpirationTime": 0,
                            "effectTag": 0,
                            "elementType": "p",
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 2,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": "You can use the web app to add/remove item from a shopping experience.",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": "You can use the web app to add/remove item from a shopping experience.",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": <p>
                              You can use the web app to add/remove item from a shopping experience.
                            </p>,
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": "p",
                            "updateQueue": null,
                          },
                          "stateNode": <h5>
                            Shop
                          </h5>,
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": "h5",
                          "updateQueue": null,
                        },
                        "stateNode": null,
                        "tag": 0,
                        "treeBaseDuration": 0,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "childExpirationTime": 0,
                      "effectTag": 0,
                      "elementType": "div",
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": Array [
                          <FontAwesomeIcon
                            border={false}
                            className=""
                            fixedWidth={false}
                            flip={null}
                            icon="shopping-bag"
                            inverse={false}
                            listItem={false}
                            mask={null}
                            pull={null}
                            pulse={false}
                            rotation={null}
                            size={null}
                            spin={false}
                            symbol={false}
                            title=""
                            transform={null}
                          />,
                          <h5>
                            Shop
                          </h5>,
                          <p>
                            You can use the web app to add/remove item from a shopping experience.
                          </p>,
                        ],
                        "className": "col-md-4",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": Array [
                          <FontAwesomeIcon
                            border={false}
                            className=""
                            fixedWidth={false}
                            flip={null}
                            icon="shopping-bag"
                            inverse={false}
                            listItem={false}
                            mask={null}
                            pull={null}
                            pulse={false}
                            rotation={null}
                            size={null}
                            spin={false}
                            symbol={false}
                            title=""
                            transform={null}
                          />,
                          <h5>
                            Shop
                          </h5>,
                          <p>
                            You can use the web app to add/remove item from a shopping experience.
                          </p>,
                        ],
                        "className": "col-md-4",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": FiberNode {
                        "_debugID": 63,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 68,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childExpirationTime": 0,
                          "effectTag": 1,
                          "elementType": [Function],
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "border": false,
                            "className": "",
                            "fixedWidth": false,
                            "flip": null,
                            "icon": "briefcase",
                            "inverse": false,
                            "listItem": false,
                            "mask": null,
                            "pull": null,
                            "pulse": false,
                            "rotation": null,
                            "size": null,
                            "spin": false,
                            "symbol": false,
                            "title": "",
                            "transform": null,
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "border": false,
                            "className": "",
                            "fixedWidth": false,
                            "flip": null,
                            "icon": "briefcase",
                            "inverse": false,
                            "listItem": false,
                            "mask": null,
                            "pull": null,
                            "pulse": false,
                            "rotation": null,
                            "size": null,
                            "spin": false,
                            "symbol": false,
                            "title": "",
                            "transform": null,
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": FiberNode {
                            "_debugID": 69,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childExpirationTime": 0,
                            "effectTag": 0,
                            "elementType": "h5",
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 1,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": "Manage Item",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": "Manage Item",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": FiberNode {
                              "_debugID": 70,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": null,
                              "childExpirationTime": 0,
                              "effectTag": 0,
                              "elementType": "p",
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": null,
                              "index": 2,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": "You can manage item you add. YOu can also delete an item with a very simple user experience.",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": "You can manage item you add. YOu can also delete an item with a very simple user experience.",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": <p>
                                You can manage item you add. YOu can also delete an item with a very simple user experience.
                              </p>,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "p",
                              "updateQueue": null,
                            },
                            "stateNode": <h5>
                              Manage Item
                            </h5>,
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": "h5",
                            "updateQueue": null,
                          },
                          "stateNode": null,
                          "tag": 0,
                          "treeBaseDuration": 0,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "childExpirationTime": 0,
                        "effectTag": 0,
                        "elementType": "div",
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 1,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": Array [
                            <FontAwesomeIcon
                              border={false}
                              className=""
                              fixedWidth={false}
                              flip={null}
                              icon="briefcase"
                              inverse={false}
                              listItem={false}
                              mask={null}
                              pull={null}
                              pulse={false}
                              rotation={null}
                              size={null}
                              spin={false}
                              symbol={false}
                              title=""
                              transform={null}
                            />,
                            <h5>
                              Manage Item
                            </h5>,
                            <p>
                              You can manage item you add. YOu can also delete an item with a very simple user experience.
                            </p>,
                          ],
                          "className": "col-md-4",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": Array [
                            <FontAwesomeIcon
                              border={false}
                              className=""
                              fixedWidth={false}
                              flip={null}
                              icon="briefcase"
                              inverse={false}
                              listItem={false}
                              mask={null}
                              pull={null}
                              pulse={false}
                              rotation={null}
                              size={null}
                              spin={false}
                              symbol={false}
                              title=""
                              transform={null}
                            />,
                            <h5>
                              Manage Item
                            </h5>,
                            <p>
                              You can manage item you add. YOu can also delete an item with a very simple user experience.
                            </p>,
                          ],
                          "className": "col-md-4",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": FiberNode {
                          "_debugID": 64,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 71,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childExpirationTime": 0,
                            "effectTag": 1,
                            "elementType": [Function],
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "border": false,
                              "className": "",
                              "fixedWidth": false,
                              "flip": null,
                              "icon": "chart-line",
                              "inverse": false,
                              "listItem": false,
                              "mask": null,
                              "pull": null,
                              "pulse": false,
                              "rotation": null,
                              "size": null,
                              "spin": false,
                              "symbol": false,
                              "title": "",
                              "transform": null,
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "border": false,
                              "className": "",
                              "fixedWidth": false,
                              "flip": null,
                              "icon": "chart-line",
                              "inverse": false,
                              "listItem": false,
                              "mask": null,
                              "pull": null,
                              "pulse": false,
                              "rotation": null,
                              "size": null,
                              "spin": false,
                              "symbol": false,
                              "title": "",
                              "transform": null,
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": FiberNode {
                              "_debugID": 72,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": null,
                              "childExpirationTime": 0,
                              "effectTag": 0,
                              "elementType": "h5",
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": null,
                              "index": 1,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": "Transaction Summary",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": "Transaction Summary",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": FiberNode {
                                "_debugID": 73,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": null,
                                "childExpirationTime": 0,
                                "effectTag": 0,
                                "elementType": "p",
                                "expirationTime": 0,
                                "firstContextDependency": null,
                                "firstEffect": null,
                                "index": 2,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": "Transaction summary of item purchase can not be easier.",
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "children": "Transaction summary of item purchase can not be easier.",
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": <p>
                                  Transaction summary of item purchase can not be easier.
                                </p>,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "p",
                                "updateQueue": null,
                              },
                              "stateNode": <h5>
                                Transaction Summary
                              </h5>,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "h5",
                              "updateQueue": null,
                            },
                            "stateNode": null,
                            "tag": 0,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "childExpirationTime": 0,
                          "effectTag": 0,
                          "elementType": "div",
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 2,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": Array [
                              <FontAwesomeIcon
                                border={false}
                                className=""
                                fixedWidth={false}
                                flip={null}
                                icon="chart-line"
                                inverse={false}
                                listItem={false}
                                mask={null}
                                pull={null}
                                pulse={false}
                                rotation={null}
                                size={null}
                                spin={false}
                                symbol={false}
                                title=""
                                transform={null}
                              />,
                              <h5>
                                Transaction Summary
                              </h5>,
                              <p>
                                Transaction summary of item purchase can not be easier.
                              </p>,
                            ],
                            "className": "col-md-4",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": Array [
                              <FontAwesomeIcon
                                border={false}
                                className=""
                                fixedWidth={false}
                                flip={null}
                                icon="chart-line"
                                inverse={false}
                                listItem={false}
                                mask={null}
                                pull={null}
                                pulse={false}
                                rotation={null}
                                size={null}
                                spin={false}
                                symbol={false}
                                title=""
                                transform={null}
                              />,
                              <h5>
                                Transaction Summary
                              </h5>,
                              <p>
                                Transaction summary of item purchase can not be easier.
                              </p>,
                            ],
                            "className": "col-md-4",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": <div
                            class="col-md-4"
                          >
                            <h5>
                              Transaction Summary
                            </h5>
                            <p>
                              Transaction summary of item purchase can not be easier.
                            </p>
                          </div>,
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": "div",
                          "updateQueue": null,
                        },
                        "stateNode": <div
                          class="col-md-4"
                        >
                          <h5>
                            Manage Item
                          </h5>
                          <p>
                            You can manage item you add. YOu can also delete an item with a very simple user experience.
                          </p>
                        </div>,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "stateNode": <div
                        class="col-md-4"
                      >
                        <h5>
                          Shop
                        </h5>
                        <p>
                          You can use the web app to add/remove item from a shopping experience.
                        </p>
                      </div>,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "elementType": "div",
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [
                        <div
                          className="col-md-4"
                        >
                          <FontAwesomeIcon
                            border={false}
                            className=""
                            fixedWidth={false}
                            flip={null}
                            icon="shopping-bag"
                            inverse={false}
                            listItem={false}
                            mask={null}
                            pull={null}
                            pulse={false}
                            rotation={null}
                            size={null}
                            spin={false}
                            symbol={false}
                            title=""
                            transform={null}
                          />
                          <h5>
                            Shop
                          </h5>
                          <p>
                            You can use the web app to add/remove item from a shopping experience.
                          </p>
                        </div>,
                        <div
                          className="col-md-4"
                        >
                          <FontAwesomeIcon
                            border={false}
                            className=""
                            fixedWidth={false}
                            flip={null}
                            icon="briefcase"
                            inverse={false}
                            listItem={false}
                            mask={null}
                            pull={null}
                            pulse={false}
                            rotation={null}
                            size={null}
                            spin={false}
                            symbol={false}
                            title=""
                            transform={null}
                          />
                          <h5>
                            Manage Item
                          </h5>
                          <p>
                            You can manage item you add. YOu can also delete an item with a very simple user experience.
                          </p>
                        </div>,
                        <div
                          className="col-md-4"
                        >
                          <FontAwesomeIcon
                            border={false}
                            className=""
                            fixedWidth={false}
                            flip={null}
                            icon="chart-line"
                            inverse={false}
                            listItem={false}
                            mask={null}
                            pull={null}
                            pulse={false}
                            rotation={null}
                            size={null}
                            spin={false}
                            symbol={false}
                            title=""
                            transform={null}
                          />
                          <h5>
                            Transaction Summary
                          </h5>
                          <p>
                            Transaction summary of item purchase can not be easier.
                          </p>
                        </div>,
                      ],
                      "className": "row text-center",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": Array [
                        <div
                          className="col-md-4"
                        >
                          <FontAwesomeIcon
                            border={false}
                            className=""
                            fixedWidth={false}
                            flip={null}
                            icon="shopping-bag"
                            inverse={false}
                            listItem={false}
                            mask={null}
                            pull={null}
                            pulse={false}
                            rotation={null}
                            size={null}
                            spin={false}
                            symbol={false}
                            title=""
                            transform={null}
                          />
                          <h5>
                            Shop
                          </h5>
                          <p>
                            You can use the web app to add/remove item from a shopping experience.
                          </p>
                        </div>,
                        <div
                          className="col-md-4"
                        >
                          <FontAwesomeIcon
                            border={false}
                            className=""
                            fixedWidth={false}
                            flip={null}
                            icon="briefcase"
                            inverse={false}
                            listItem={false}
                            mask={null}
                            pull={null}
                            pulse={false}
                            rotation={null}
                            size={null}
                            spin={false}
                            symbol={false}
                            title=""
                            transform={null}
                          />
                          <h5>
                            Manage Item
                          </h5>
                          <p>
                            You can manage item you add. YOu can also delete an item with a very simple user experience.
                          </p>
                        </div>,
                        <div
                          className="col-md-4"
                        >
                          <FontAwesomeIcon
                            border={false}
                            className=""
                            fixedWidth={false}
                            flip={null}
                            icon="chart-line"
                            inverse={false}
                            listItem={false}
                            mask={null}
                            pull={null}
                            pulse={false}
                            rotation={null}
                            size={null}
                            spin={false}
                            symbol={false}
                            title=""
                            transform={null}
                          />
                          <h5>
                            Transaction Summary
                          </h5>
                          <p>
                            Transaction summary of item purchase can not be easier.
                          </p>
                        </div>,
                      ],
                      "className": "row text-center",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": <div
                      class="row text-center"
                    >
                      <div
                        class="col-md-4"
                      >
                        <h5>
                          Shop
                        </h5>
                        <p>
                          You can use the web app to add/remove item from a shopping experience.
                        </p>
                      </div>
                      <div
                        class="col-md-4"
                      >
                        <h5>
                          Manage Item
                        </h5>
                        <p>
                          You can manage item you add. YOu can also delete an item with a very simple user experience.
                        </p>
                      </div>
                      <div
                        class="col-md-4"
                      >
                        <h5>
                          Transaction Summary
                        </h5>
                        <p>
                          Transaction summary of item purchase can not be easier.
                        </p>
                      </div>
                    </div>,
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "effectTag": 0,
                  "elementType": "div",
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 1,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": <div
                      className="row text-center"
                    >
                      <div
                        className="col-md-4"
                      >
                        <FontAwesomeIcon
                          border={false}
                          className=""
                          fixedWidth={false}
                          flip={null}
                          icon="shopping-bag"
                          inverse={false}
                          listItem={false}
                          mask={null}
                          pull={null}
                          pulse={false}
                          rotation={null}
                          size={null}
                          spin={false}
                          symbol={false}
                          title=""
                          transform={null}
                        />
                        <h5>
                          Shop
                        </h5>
                        <p>
                          You can use the web app to add/remove item from a shopping experience.
                        </p>
                      </div>
                      <div
                        className="col-md-4"
                      >
                        <FontAwesomeIcon
                          border={false}
                          className=""
                          fixedWidth={false}
                          flip={null}
                          icon="briefcase"
                          inverse={false}
                          listItem={false}
                          mask={null}
                          pull={null}
                          pulse={false}
                          rotation={null}
                          size={null}
                          spin={false}
                          symbol={false}
                          title=""
                          transform={null}
                        />
                        <h5>
                          Manage Item
                        </h5>
                        <p>
                          You can manage item you add. YOu can also delete an item with a very simple user experience.
                        </p>
                      </div>
                      <div
                        className="col-md-4"
                      >
                        <FontAwesomeIcon
                          border={false}
                          className=""
                          fixedWidth={false}
                          flip={null}
                          icon="chart-line"
                          inverse={false}
                          listItem={false}
                          mask={null}
                          pull={null}
                          pulse={false}
                          rotation={null}
                          size={null}
                          spin={false}
                          symbol={false}
                          title=""
                          transform={null}
                        />
                        <h5>
                          Transaction Summary
                        </h5>
                        <p>
                          Transaction summary of item purchase can not be easier.
                        </p>
                      </div>
                    </div>,
                    "className": "container home",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": <div
                      className="row text-center"
                    >
                      <div
                        className="col-md-4"
                      >
                        <FontAwesomeIcon
                          border={false}
                          className=""
                          fixedWidth={false}
                          flip={null}
                          icon="shopping-bag"
                          inverse={false}
                          listItem={false}
                          mask={null}
                          pull={null}
                          pulse={false}
                          rotation={null}
                          size={null}
                          spin={false}
                          symbol={false}
                          title=""
                          transform={null}
                        />
                        <h5>
                          Shop
                        </h5>
                        <p>
                          You can use the web app to add/remove item from a shopping experience.
                        </p>
                      </div>
                      <div
                        className="col-md-4"
                      >
                        <FontAwesomeIcon
                          border={false}
                          className=""
                          fixedWidth={false}
                          flip={null}
                          icon="briefcase"
                          inverse={false}
                          listItem={false}
                          mask={null}
                          pull={null}
                          pulse={false}
                          rotation={null}
                          size={null}
                          spin={false}
                          symbol={false}
                          title=""
                          transform={null}
                        />
                        <h5>
                          Manage Item
                        </h5>
                        <p>
                          You can manage item you add. YOu can also delete an item with a very simple user experience.
                        </p>
                      </div>
                      <div
                        className="col-md-4"
                      >
                        <FontAwesomeIcon
                          border={false}
                          className=""
                          fixedWidth={false}
                          flip={null}
                          icon="chart-line"
                          inverse={false}
                          listItem={false}
                          mask={null}
                          pull={null}
                          pulse={false}
                          rotation={null}
                          size={null}
                          spin={false}
                          symbol={false}
                          title=""
                          transform={null}
                        />
                        <h5>
                          Transaction Summary
                        </h5>
                        <p>
                          Transaction summary of item purchase can not be easier.
                        </p>
                      </div>
                    </div>,
                    "className": "container home",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": <div
                    class="container home"
                  >
                    <div
                      class="row text-center"
                    >
                      <div
                        class="col-md-4"
                      >
                        <h5>
                          Shop
                        </h5>
                        <p>
                          You can use the web app to add/remove item from a shopping experience.
                        </p>
                      </div>
                      <div
                        class="col-md-4"
                      >
                        <h5>
                          Manage Item
                        </h5>
                        <p>
                          You can manage item you add. YOu can also delete an item with a very simple user experience.
                        </p>
                      </div>
                      <div
                        class="col-md-4"
                      >
                        <h5>
                          Transaction Summary
                        </h5>
                        <p>
                          Transaction summary of item purchase can not be easier.
                        </p>
                      </div>
                    </div>
                  </div>,
                  "tag": 5,
                  "treeBaseDuration": 0,
                  "type": "div",
                  "updateQueue": null,
                },
                "stateNode": <div
                  class="jumbotron text-center"
                >
                  <h1>
                    Grocery Listify
                  </h1>
                  <p>
                    Grocery Store Management Made easy with
                     
                  </p>
                </div>,
                "tag": 5,
                "treeBaseDuration": 0,
                "type": "div",
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "effectTag": 0,
              "elementType": "div",
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": Array [
                  <div
                    className="jumbotron text-center"
                  >
                    <h1>
                      Grocery Listify
                    </h1>
                    <p>
                      Grocery Store Management Made easy with
                       
                      <FontAwesomeIcon
                        border={false}
                        className=""
                        fixedWidth={false}
                        flip={null}
                        icon="heart"
                        inverse={false}
                        listItem={false}
                        mask={null}
                        pull={null}
                        pulse={false}
                        rotation={null}
                        size={null}
                        spin={false}
                        symbol={false}
                        title=""
                        transform={null}
                      />
                    </p>
                  </div>,
                  <div
                    className="container home"
                  >
                    <div
                      className="row text-center"
                    >
                      <div
                        className="col-md-4"
                      >
                        <FontAwesomeIcon
                          border={false}
                          className=""
                          fixedWidth={false}
                          flip={null}
                          icon="shopping-bag"
                          inverse={false}
                          listItem={false}
                          mask={null}
                          pull={null}
                          pulse={false}
                          rotation={null}
                          size={null}
                          spin={false}
                          symbol={false}
                          title=""
                          transform={null}
                        />
                        <h5>
                          Shop
                        </h5>
                        <p>
                          You can use the web app to add/remove item from a shopping experience.
                        </p>
                      </div>
                      <div
                        className="col-md-4"
                      >
                        <FontAwesomeIcon
                          border={false}
                          className=""
                          fixedWidth={false}
                          flip={null}
                          icon="briefcase"
                          inverse={false}
                          listItem={false}
                          mask={null}
                          pull={null}
                          pulse={false}
                          rotation={null}
                          size={null}
                          spin={false}
                          symbol={false}
                          title=""
                          transform={null}
                        />
                        <h5>
                          Manage Item
                        </h5>
                        <p>
                          You can manage item you add. YOu can also delete an item with a very simple user experience.
                        </p>
                      </div>
                      <div
                        className="col-md-4"
                      >
                        <FontAwesomeIcon
                          border={false}
                          className=""
                          fixedWidth={false}
                          flip={null}
                          icon="chart-line"
                          inverse={false}
                          listItem={false}
                          mask={null}
                          pull={null}
                          pulse={false}
                          rotation={null}
                          size={null}
                          spin={false}
                          symbol={false}
                          title=""
                          transform={null}
                        />
                        <h5>
                          Transaction Summary
                        </h5>
                        <p>
                          Transaction summary of item purchase can not be easier.
                        </p>
                      </div>
                    </div>
                  </div>,
                ],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": Array [
                  <div
                    className="jumbotron text-center"
                  >
                    <h1>
                      Grocery Listify
                    </h1>
                    <p>
                      Grocery Store Management Made easy with
                       
                      <FontAwesomeIcon
                        border={false}
                        className=""
                        fixedWidth={false}
                        flip={null}
                        icon="heart"
                        inverse={false}
                        listItem={false}
                        mask={null}
                        pull={null}
                        pulse={false}
                        rotation={null}
                        size={null}
                        spin={false}
                        symbol={false}
                        title=""
                        transform={null}
                      />
                    </p>
                  </div>,
                  <div
                    className="container home"
                  >
                    <div
                      className="row text-center"
                    >
                      <div
                        className="col-md-4"
                      >
                        <FontAwesomeIcon
                          border={false}
                          className=""
                          fixedWidth={false}
                          flip={null}
                          icon="shopping-bag"
                          inverse={false}
                          listItem={false}
                          mask={null}
                          pull={null}
                          pulse={false}
                          rotation={null}
                          size={null}
                          spin={false}
                          symbol={false}
                          title=""
                          transform={null}
                        />
                        <h5>
                          Shop
                        </h5>
                        <p>
                          You can use the web app to add/remove item from a shopping experience.
                        </p>
                      </div>
                      <div
                        className="col-md-4"
                      >
                        <FontAwesomeIcon
                          border={false}
                          className=""
                          fixedWidth={false}
                          flip={null}
                          icon="briefcase"
                          inverse={false}
                          listItem={false}
                          mask={null}
                          pull={null}
                          pulse={false}
                          rotation={null}
                          size={null}
                          spin={false}
                          symbol={false}
                          title=""
                          transform={null}
                        />
                        <h5>
                          Manage Item
                        </h5>
                        <p>
                          You can manage item you add. YOu can also delete an item with a very simple user experience.
                        </p>
                      </div>
                      <div
                        className="col-md-4"
                      >
                        <FontAwesomeIcon
                          border={false}
                          className=""
                          fixedWidth={false}
                          flip={null}
                          icon="chart-line"
                          inverse={false}
                          listItem={false}
                          mask={null}
                          pull={null}
                          pulse={false}
                          rotation={null}
                          size={null}
                          spin={false}
                          symbol={false}
                          title=""
                          transform={null}
                        />
                        <h5>
                          Transaction Summary
                        </h5>
                        <p>
                          Transaction summary of item purchase can not be easier.
                        </p>
                      </div>
                    </div>
                  </div>,
                ],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": <div>
                <div
                  class="jumbotron text-center"
                >
                  <h1>
                    Grocery Listify
                  </h1>
                  <p>
                    Grocery Store Management Made easy with
                     
                  </p>
                </div>
                <div
                  class="container home"
                >
                  <div
                    class="row text-center"
                  >
                    <div
                      class="col-md-4"
                    >
                      <h5>
                        Shop
                      </h5>
                      <p>
                        You can use the web app to add/remove item from a shopping experience.
                      </p>
                    </div>
                    <div
                      class="col-md-4"
                    >
                      <h5>
                        Manage Item
                      </h5>
                      <p>
                        You can manage item you add. YOu can also delete an item with a very simple user experience.
                      </p>
                    </div>
                    <div
                      class="col-md-4"
                    >
                      <h5>
                        Transaction Summary
                      </h5>
                      <p>
                        Transaction summary of item purchase can not be easier.
                      </p>
                    </div>
                  </div>
                </div>
              </div>,
              "tag": 5,
              "treeBaseDuration": 0,
              "type": "div",
              "updateQueue": null,
            },
            "childExpirationTime": 0,
            "effectTag": 1,
            "elementType": [Function],
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {},
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {},
            "ref": null,
            "return": [Circular],
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": null,
            "tag": 0,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "childExpirationTime": 0,
          "effectTag": 1,
          "elementType": [Function],
          "expirationTime": 0,
          "firstContextDependency": null,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "children": <_default />,
            "history": Object {
              "action": "POP",
              "block": [Function],
              "createHref": [Function],
              "go": [Function],
              "goBack": [Function],
              "goForward": [Function],
              "length": 1,
              "listen": [Function],
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
              "push": [Function],
              "replace": [Function],
            },
          },
          "memoizedState": Object {
            "match": Object {
              "isExact": true,
              "params": Object {},
              "path": "/",
              "url": "/",
            },
          },
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "children": <_default />,
            "history": Object {
              "action": "POP",
              "block": [Function],
              "createHref": [Function],
              "go": [Function],
              "goBack": [Function],
              "goForward": [Function],
              "length": 1,
              "listen": [Function],
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
              "push": [Function],
              "replace": [Function],
            },
          },
          "ref": null,
          "return": [Circular],
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": Router {
            "__reactInternalMemoizedMaskedChildContext": Object {
              "router": undefined,
            },
            "__reactInternalMemoizedMergedChildContext": Object {
              "router": Object {
                "history": Object {
                  "action": "POP",
                  "block": [Function],
                  "createHref": [Function],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "push": [Function],
                  "replace": [Function],
                },
                "route": Object {
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "match": Object {
                    "isExact": true,
                    "params": Object {},
                    "path": "/",
                    "url": "/",
                  },
                },
              },
            },
            "__reactInternalMemoizedUnmaskedChildContext": Object {},
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {
              "router": undefined,
            },
            "props": Object {
              "children": <_default />,
              "history": Object {
                "action": "POP",
                "block": [Function],
                "createHref": [Function],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "push": [Function],
                "replace": [Function],
              },
            },
            "refs": Object {},
            "state": Object {
              "match": Object {
                "isExact": true,
                "params": Object {},
                "path": "/",
                "url": "/",
              },
            },
            "unlisten": [Function],
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 1,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "childExpirationTime": 0,
        "effectTag": 1,
        "elementType": [Function],
        "expirationTime": 0,
        "firstContextDependency": null,
        "firstEffect": null,
        "index": 0,
        "key": null,
        "lastEffect": null,
        "memoizedProps": Object {
          "children": <_default />,
        },
        "memoizedState": null,
        "mode": 0,
        "nextEffect": null,
        "pendingProps": Object {
          "children": <_default />,
        },
        "ref": null,
        "return": FiberNode {
          "_debugID": 49,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": null,
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": [Circular],
          "childExpirationTime": 0,
          "effectTag": 1,
          "elementType": [Function],
          "expirationTime": 0,
          "firstContextDependency": null,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "children": <_default />,
            },
          },
          "memoizedState": Object {
            "context": null,
            "mount": true,
            "props": Object {
              "children": <_default />,
            },
          },
          "mode": 0,
          "nextEffect": FiberNode {
            "_debugID": 47,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": FiberNode {
              "_debugID": 47,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": [Circular],
              "child": null,
              "childExpirationTime": 0,
              "effectTag": 0,
              "elementType": null,
              "expirationTime": 1073741823,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div>
                    <div
                      class="jumbotron text-center"
                    >
                      <h1>
                        Grocery Listify
                      </h1>
                      <p>
                        Grocery Store Management Made easy with
                         
                      </p>
                    </div>
                    <div
                      class="container home"
                    >
                      <div
                        class="row text-center"
                      >
                        <div
                          class="col-md-4"
                        >
                          <h5>
                            Shop
                          </h5>
                          <p>
                            You can use the web app to add/remove item from a shopping experience.
                          </p>
                        </div>
                        <div
                          class="col-md-4"
                        >
                          <h5>
                            Manage Item
                          </h5>
                          <p>
                            You can manage item you add. YOu can also delete an item with a very simple user experience.
                          </p>
                        </div>
                        <div
                          class="col-md-4"
                        >
                          <h5>
                            Transaction Summary
                          </h5>
                          <p>
                            Transaction summary of item purchase can not be easier.
                          </p>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 12,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "children": <_default />,
                        }
                      }
                    />,
                  },
                  "tag": 0,
                },
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "children": <_default />,
                        }
                      }
                    />,
                  },
                  "tag": 0,
                },
              },
            },
            "child": [Circular],
            "childExpirationTime": 0,
            "effectTag": 32,
            "elementType": null,
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={
                  Object {
                    "children": <_default />,
                  }
                }
              />,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <div>
                  <div
                    class="jumbotron text-center"
                  >
                    <h1>
                      Grocery Listify
                    </h1>
                    <p>
                      Grocery Store Management Made easy with
                       
                    </p>
                  </div>
                  <div
                    class="container home"
                  >
                    <div
                      class="row text-center"
                    >
                      <div
                        class="col-md-4"
                      >
                        <h5>
                          Shop
                        </h5>
                        <p>
                          You can use the web app to add/remove item from a shopping experience.
                        </p>
                      </div>
                      <div
                        class="col-md-4"
                      >
                        <h5>
                          Manage Item
                        </h5>
                        <p>
                          You can manage item you add. YOu can also delete an item with a very simple user experience.
                        </p>
                      </div>
                      <div
                        class="col-md-4"
                      >
                        <h5>
                          Transaction Summary
                        </h5>
                        <p>
                          Transaction summary of item purchase can not be easier.
                        </p>
                      </div>
                    </div>
                  </div>
                </div>
              </div>,
              "context": Object {},
              "current": [Circular],
              "didError": false,
              "earliestPendingTime": 0,
              "earliestSuspendedTime": 0,
              "expirationTime": 0,
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "interactionThreadID": 12,
              "latestPendingTime": 0,
              "latestPingedTime": 0,
              "latestSuspendedTime": 0,
              "memoizedInteractions": Set {},
              "nextExpirationTimeToWorkOn": 0,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "pendingInteractionMap": Map {},
              "timeoutHandle": -1,
            },
            "tag": 3,
            "treeBaseDuration": 0,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "children": <_default />,
                    }
                  }
                />,
              },
              "firstCapturedEffect": null,
              "firstCapturedUpdate": null,
              "firstEffect": null,
              "firstUpdate": null,
              "lastCapturedEffect": null,
              "lastCapturedUpdate": null,
              "lastEffect": null,
              "lastUpdate": null,
            },
          },
          "pendingProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "children": <_default />,
            },
          },
          "ref": null,
          "return": FiberNode {
            "_debugID": 47,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": FiberNode {
              "_debugID": 47,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": [Circular],
              "child": null,
              "childExpirationTime": 0,
              "effectTag": 0,
              "elementType": null,
              "expirationTime": 1073741823,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div>
                    <div
                      class="jumbotron text-center"
                    >
                      <h1>
                        Grocery Listify
                      </h1>
                      <p>
                        Grocery Store Management Made easy with
                         
                      </p>
                    </div>
                    <div
                      class="container home"
                    >
                      <div
                        class="row text-center"
                      >
                        <div
                          class="col-md-4"
                        >
                          <h5>
                            Shop
                          </h5>
                          <p>
                            You can use the web app to add/remove item from a shopping experience.
                          </p>
                        </div>
                        <div
                          class="col-md-4"
                        >
                          <h5>
                            Manage Item
                          </h5>
                          <p>
                            You can manage item you add. YOu can also delete an item with a very simple user experience.
                          </p>
                        </div>
                        <div
                          class="col-md-4"
                        >
                          <h5>
                            Transaction Summary
                          </h5>
                          <p>
                            Transaction summary of item purchase can not be easier.
                          </p>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 12,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "children": <_default />,
                        }
                      }
                    />,
                  },
                  "tag": 0,
                },
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "children": <_default />,
                        }
                      }
                    />,
                  },
                  "tag": 0,
                },
              },
            },
            "child": [Circular],
            "childExpirationTime": 0,
            "effectTag": 32,
            "elementType": null,
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={
                  Object {
                    "children": <_default />,
                  }
                }
              />,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <div>
                  <div
                    class="jumbotron text-center"
                  >
                    <h1>
                      Grocery Listify
                    </h1>
                    <p>
                      Grocery Store Management Made easy with
                       
                    </p>
                  </div>
                  <div
                    class="container home"
                  >
                    <div
                      class="row text-center"
                    >
                      <div
                        class="col-md-4"
                      >
                        <h5>
                          Shop
                        </h5>
                        <p>
                          You can use the web app to add/remove item from a shopping experience.
                        </p>
                      </div>
                      <div
                        class="col-md-4"
                      >
                        <h5>
                          Manage Item
                        </h5>
                        <p>
                          You can manage item you add. YOu can also delete an item with a very simple user experience.
                        </p>
                      </div>
                      <div
                        class="col-md-4"
                      >
                        <h5>
                          Transaction Summary
                        </h5>
                        <p>
                          Transaction summary of item purchase can not be easier.
                        </p>
                      </div>
                    </div>
                  </div>
                </div>
              </div>,
              "context": Object {},
              "current": [Circular],
              "didError": false,
              "earliestPendingTime": 0,
              "earliestSuspendedTime": 0,
              "expirationTime": 0,
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "interactionThreadID": 12,
              "latestPendingTime": 0,
              "latestPingedTime": 0,
              "latestSuspendedTime": 0,
              "memoizedInteractions": Set {},
              "nextExpirationTimeToWorkOn": 0,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "pendingInteractionMap": Map {},
              "timeoutHandle": -1,
            },
            "tag": 3,
            "treeBaseDuration": 0,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "children": <_default />,
                    }
                  }
                />,
              },
              "firstCapturedEffect": null,
              "firstCapturedUpdate": null,
              "firstEffect": null,
              "firstUpdate": null,
              "lastCapturedEffect": null,
              "lastCapturedUpdate": null,
              "lastEffect": null,
              "lastUpdate": null,
            },
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": WrapperComponent {
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "children": <_default />,
              },
            },
            "refs": Object {},
            "state": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "children": <_default />,
              },
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 1,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "selfBaseDuration": 0,
        "sibling": null,
        "stateNode": [Circular],
        "tag": 1,
        "treeBaseDuration": 0,
        "type": [Function],
        "updateQueue": null,
      },
      "_reactInternalInstance": Object {},
      "context": Object {},
      "history": Object {
        "action": "POP",
        "block": [Function],
        "createHref": [Function],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      },
      "props": Object {
        "children": <_default />,
      },
      "refs": Object {},
      "state": null,
      "updater": Object {
        "enqueueForceUpdate": [Function],
        "enqueueReplaceState": [Function],
        "enqueueSetState": [Function],
        "isMounted": [Function],
      },
    },
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <_default />,
    },
    "ref": null,
    "rendered": Object {
      "instance": Router {
        "__reactInternalMemoizedMaskedChildContext": Object {
          "router": undefined,
        },
        "__reactInternalMemoizedMergedChildContext": Object {
          "router": Object {
            "history": Object {
              "action": "POP",
              "block": [Function],
              "createHref": [Function],
              "go": [Function],
              "goBack": [Function],
              "goForward": [Function],
              "length": 1,
              "listen": [Function],
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
              "push": [Function],
              "replace": [Function],
            },
            "route": Object {
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
              "match": Object {
                "isExact": true,
                "params": Object {},
                "path": "/",
                "url": "/",
              },
            },
          },
        },
        "__reactInternalMemoizedUnmaskedChildContext": Object {},
        "_reactInternalFiber": FiberNode {
          "_debugID": 51,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": FiberNode {
            "_debugID": 50,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": FiberNode {
              "_debugID": 49,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "children": <_default />,
                },
              },
              "memoizedState": Object {
                "context": null,
                "mount": true,
                "props": Object {
                  "children": <_default />,
                },
              },
              "mode": 0,
              "nextEffect": FiberNode {
                "_debugID": 47,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": FiberNode {
                  "_debugID": 47,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": [Circular],
                  "child": null,
                  "childExpirationTime": 0,
                  "effectTag": 0,
                  "elementType": null,
                  "expirationTime": 1073741823,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": null,
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": Object {
                    "containerInfo": <div>
                      <div>
                        <div
                          class="jumbotron text-center"
                        >
                          <h1>
                            Grocery Listify
                          </h1>
                          <p>
                            Grocery Store Management Made easy with
                             
                          </p>
                        </div>
                        <div
                          class="container home"
                        >
                          <div
                            class="row text-center"
                          >
                            <div
                              class="col-md-4"
                            >
                              <h5>
                                Shop
                              </h5>
                              <p>
                                You can use the web app to add/remove item from a shopping experience.
                              </p>
                            </div>
                            <div
                              class="col-md-4"
                            >
                              <h5>
                                Manage Item
                              </h5>
                              <p>
                                You can manage item you add. YOu can also delete an item with a very simple user experience.
                              </p>
                            </div>
                            <div
                              class="col-md-4"
                            >
                              <h5>
                                Transaction Summary
                              </h5>
                              <p>
                                Transaction summary of item purchase can not be easier.
                              </p>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>,
                    "context": Object {},
                    "current": [Circular],
                    "didError": false,
                    "earliestPendingTime": 0,
                    "earliestSuspendedTime": 0,
                    "expirationTime": 0,
                    "finishedWork": null,
                    "firstBatch": null,
                    "hydrate": false,
                    "interactionThreadID": 12,
                    "latestPendingTime": 0,
                    "latestPingedTime": 0,
                    "latestSuspendedTime": 0,
                    "memoizedInteractions": Set {},
                    "nextExpirationTimeToWorkOn": 0,
                    "nextScheduledRoot": null,
                    "pendingChildren": null,
                    "pendingCommitExpirationTime": 0,
                    "pendingContext": null,
                    "pendingInteractionMap": Map {},
                    "timeoutHandle": -1,
                  },
                  "tag": 3,
                  "treeBaseDuration": 0,
                  "type": null,
                  "updateQueue": Object {
                    "baseState": null,
                    "firstCapturedEffect": null,
                    "firstCapturedUpdate": null,
                    "firstEffect": null,
                    "firstUpdate": Object {
                      "callback": null,
                      "expirationTime": 1073741823,
                      "next": null,
                      "nextEffect": null,
                      "payload": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "children": <_default />,
                            }
                          }
                        />,
                      },
                      "tag": 0,
                    },
                    "lastCapturedEffect": null,
                    "lastCapturedUpdate": null,
                    "lastEffect": null,
                    "lastUpdate": Object {
                      "callback": null,
                      "expirationTime": 1073741823,
                      "next": null,
                      "nextEffect": null,
                      "payload": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "children": <_default />,
                            }
                          }
                        />,
                      },
                      "tag": 0,
                    },
                  },
                },
                "child": [Circular],
                "childExpirationTime": 0,
                "effectTag": 32,
                "elementType": null,
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": null,
                "memoizedState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                      Object {
                        "children": <_default />,
                      }
                    }
                  />,
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div>
                      <div
                        class="jumbotron text-center"
                      >
                        <h1>
                          Grocery Listify
                        </h1>
                        <p>
                          Grocery Store Management Made easy with
                           
                        </p>
                      </div>
                      <div
                        class="container home"
                      >
                        <div
                          class="row text-center"
                        >
                          <div
                            class="col-md-4"
                          >
                            <h5>
                              Shop
                            </h5>
                            <p>
                              You can use the web app to add/remove item from a shopping experience.
                            </p>
                          </div>
                          <div
                            class="col-md-4"
                          >
                            <h5>
                              Manage Item
                            </h5>
                            <p>
                              You can manage item you add. YOu can also delete an item with a very simple user experience.
                            </p>
                          </div>
                          <div
                            class="col-md-4"
                          >
                            <h5>
                              Transaction Summary
                            </h5>
                            <p>
                              Transaction summary of item purchase can not be easier.
                            </p>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "didError": false,
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "expirationTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "interactionThreadID": 12,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextExpirationTimeToWorkOn": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "timeoutHandle": -1,
                },
                "tag": 3,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "children": <_default />,
                        }
                      }
                    />,
                  },
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": null,
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": null,
                },
              },
              "pendingProps": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "children": <_default />,
                },
              },
              "ref": null,
              "return": FiberNode {
                "_debugID": 47,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": FiberNode {
                  "_debugID": 47,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": [Circular],
                  "child": null,
                  "childExpirationTime": 0,
                  "effectTag": 0,
                  "elementType": null,
                  "expirationTime": 1073741823,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": null,
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": Object {
                    "containerInfo": <div>
                      <div>
                        <div
                          class="jumbotron text-center"
                        >
                          <h1>
                            Grocery Listify
                          </h1>
                          <p>
                            Grocery Store Management Made easy with
                             
                          </p>
                        </div>
                        <div
                          class="container home"
                        >
                          <div
                            class="row text-center"
                          >
                            <div
                              class="col-md-4"
                            >
                              <h5>
                                Shop
                              </h5>
                              <p>
                                You can use the web app to add/remove item from a shopping experience.
                              </p>
                            </div>
                            <div
                              class="col-md-4"
                            >
                              <h5>
                                Manage Item
                              </h5>
                              <p>
                                You can manage item you add. YOu can also delete an item with a very simple user experience.
                              </p>
                            </div>
                            <div
                              class="col-md-4"
                            >
                              <h5>
                                Transaction Summary
                              </h5>
                              <p>
                                Transaction summary of item purchase can not be easier.
                              </p>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>,
                    "context": Object {},
                    "current": [Circular],
                    "didError": false,
                    "earliestPendingTime": 0,
                    "earliestSuspendedTime": 0,
                    "expirationTime": 0,
                    "finishedWork": null,
                    "firstBatch": null,
                    "hydrate": false,
                    "interactionThreadID": 12,
                    "latestPendingTime": 0,
                    "latestPingedTime": 0,
                    "latestSuspendedTime": 0,
                    "memoizedInteractions": Set {},
                    "nextExpirationTimeToWorkOn": 0,
                    "nextScheduledRoot": null,
                    "pendingChildren": null,
                    "pendingCommitExpirationTime": 0,
                    "pendingContext": null,
                    "pendingInteractionMap": Map {},
                    "timeoutHandle": -1,
                  },
                  "tag": 3,
                  "treeBaseDuration": 0,
                  "type": null,
                  "updateQueue": Object {
                    "baseState": null,
                    "firstCapturedEffect": null,
                    "firstCapturedUpdate": null,
                    "firstEffect": null,
                    "firstUpdate": Object {
                      "callback": null,
                      "expirationTime": 1073741823,
                      "next": null,
                      "nextEffect": null,
                      "payload": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "children": <_default />,
                            }
                          }
                        />,
                      },
                      "tag": 0,
                    },
                    "lastCapturedEffect": null,
                    "lastCapturedUpdate": null,
                    "lastEffect": null,
                    "lastUpdate": Object {
                      "callback": null,
                      "expirationTime": 1073741823,
                      "next": null,
                      "nextEffect": null,
                      "payload": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "children": <_default />,
                            }
                          }
                        />,
                      },
                      "tag": 0,
                    },
                  },
                },
                "child": [Circular],
                "childExpirationTime": 0,
                "effectTag": 32,
                "elementType": null,
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": null,
                "memoizedState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                      Object {
                        "children": <_default />,
                      }
                    }
                  />,
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div>
                      <div
                        class="jumbotron text-center"
                      >
                        <h1>
                          Grocery Listify
                        </h1>
                        <p>
                          Grocery Store Management Made easy with
                           
                        </p>
                      </div>
                      <div
                        class="container home"
                      >
                        <div
                          class="row text-center"
                        >
                          <div
                            class="col-md-4"
                          >
                            <h5>
                              Shop
                            </h5>
                            <p>
                              You can use the web app to add/remove item from a shopping experience.
                            </p>
                          </div>
                          <div
                            class="col-md-4"
                          >
                            <h5>
                              Manage Item
                            </h5>
                            <p>
                              You can manage item you add. YOu can also delete an item with a very simple user experience.
                            </p>
                          </div>
                          <div
                            class="col-md-4"
                          >
                            <h5>
                              Transaction Summary
                            </h5>
                            <p>
                              Transaction summary of item purchase can not be easier.
                            </p>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "didError": false,
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "expirationTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "interactionThreadID": 12,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextExpirationTimeToWorkOn": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "timeoutHandle": -1,
                },
                "tag": 3,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "children": <_default />,
                        }
                      }
                    />,
                  },
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": null,
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": null,
                },
              },
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": WrapperComponent {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "children": <_default />,
                  },
                },
                "refs": Object {},
                "state": Object {
                  "context": null,
                  "mount": true,
                  "props": Object {
                    "children": <_default />,
                  },
                },
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": null,
            },
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "effectTag": 1,
            "elementType": [Function],
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": <_default />,
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": <_default />,
            },
            "ref": null,
            "return": FiberNode {
              "_debugID": 49,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "children": <_default />,
                },
              },
              "memoizedState": Object {
                "context": null,
                "mount": true,
                "props": Object {
                  "children": <_default />,
                },
              },
              "mode": 0,
              "nextEffect": FiberNode {
                "_debugID": 47,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": FiberNode {
                  "_debugID": 47,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": [Circular],
                  "child": null,
                  "childExpirationTime": 0,
                  "effectTag": 0,
                  "elementType": null,
                  "expirationTime": 1073741823,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": null,
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": Object {
                    "containerInfo": <div>
                      <div>
                        <div
                          class="jumbotron text-center"
                        >
                          <h1>
                            Grocery Listify
                          </h1>
                          <p>
                            Grocery Store Management Made easy with
                             
                          </p>
                        </div>
                        <div
                          class="container home"
                        >
                          <div
                            class="row text-center"
                          >
                            <div
                              class="col-md-4"
                            >
                              <h5>
                                Shop
                              </h5>
                              <p>
                                You can use the web app to add/remove item from a shopping experience.
                              </p>
                            </div>
                            <div
                              class="col-md-4"
                            >
                              <h5>
                                Manage Item
                              </h5>
                              <p>
                                You can manage item you add. YOu can also delete an item with a very simple user experience.
                              </p>
                            </div>
                            <div
                              class="col-md-4"
                            >
                              <h5>
                                Transaction Summary
                              </h5>
                              <p>
                                Transaction summary of item purchase can not be easier.
                              </p>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>,
                    "context": Object {},
                    "current": [Circular],
                    "didError": false,
                    "earliestPendingTime": 0,
                    "earliestSuspendedTime": 0,
                    "expirationTime": 0,
                    "finishedWork": null,
                    "firstBatch": null,
                    "hydrate": false,
                    "interactionThreadID": 12,
                    "latestPendingTime": 0,
                    "latestPingedTime": 0,
                    "latestSuspendedTime": 0,
                    "memoizedInteractions": Set {},
                    "nextExpirationTimeToWorkOn": 0,
                    "nextScheduledRoot": null,
                    "pendingChildren": null,
                    "pendingCommitExpirationTime": 0,
                    "pendingContext": null,
                    "pendingInteractionMap": Map {},
                    "timeoutHandle": -1,
                  },
                  "tag": 3,
                  "treeBaseDuration": 0,
                  "type": null,
                  "updateQueue": Object {
                    "baseState": null,
                    "firstCapturedEffect": null,
                    "firstCapturedUpdate": null,
                    "firstEffect": null,
                    "firstUpdate": Object {
                      "callback": null,
                      "expirationTime": 1073741823,
                      "next": null,
                      "nextEffect": null,
                      "payload": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "children": <_default />,
                            }
                          }
                        />,
                      },
                      "tag": 0,
                    },
                    "lastCapturedEffect": null,
                    "lastCapturedUpdate": null,
                    "lastEffect": null,
                    "lastUpdate": Object {
                      "callback": null,
                      "expirationTime": 1073741823,
                      "next": null,
                      "nextEffect": null,
                      "payload": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "children": <_default />,
                            }
                          }
                        />,
                      },
                      "tag": 0,
                    },
                  },
                },
                "child": [Circular],
                "childExpirationTime": 0,
                "effectTag": 32,
                "elementType": null,
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": null,
                "memoizedState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                      Object {
                        "children": <_default />,
                      }
                    }
                  />,
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div>
                      <div
                        class="jumbotron text-center"
                      >
                        <h1>
                          Grocery Listify
                        </h1>
                        <p>
                          Grocery Store Management Made easy with
                           
                        </p>
                      </div>
                      <div
                        class="container home"
                      >
                        <div
                          class="row text-center"
                        >
                          <div
                            class="col-md-4"
                          >
                            <h5>
                              Shop
                            </h5>
                            <p>
                              You can use the web app to add/remove item from a shopping experience.
                            </p>
                          </div>
                          <div
                            class="col-md-4"
                          >
                            <h5>
                              Manage Item
                            </h5>
                            <p>
                              You can manage item you add. YOu can also delete an item with a very simple user experience.
                            </p>
                          </div>
                          <div
                            class="col-md-4"
                          >
                            <h5>
                              Transaction Summary
                            </h5>
                            <p>
                              Transaction summary of item purchase can not be easier.
                            </p>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "didError": false,
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "expirationTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "interactionThreadID": 12,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextExpirationTimeToWorkOn": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "timeoutHandle": -1,
                },
                "tag": 3,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "children": <_default />,
                        }
                      }
                    />,
                  },
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": null,
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": null,
                },
              },
              "pendingProps": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "children": <_default />,
                },
              },
              "ref": null,
              "return": FiberNode {
                "_debugID": 47,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": FiberNode {
                  "_debugID": 47,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": [Circular],
                  "child": null,
                  "childExpirationTime": 0,
                  "effectTag": 0,
                  "elementType": null,
                  "expirationTime": 1073741823,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": null,
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": Object {
                    "containerInfo": <div>
                      <div>
                        <div
                          class="jumbotron text-center"
                        >
                          <h1>
                            Grocery Listify
                          </h1>
                          <p>
                            Grocery Store Management Made easy with
                             
                          </p>
                        </div>
                        <div
                          class="container home"
                        >
                          <div
                            class="row text-center"
                          >
                            <div
                              class="col-md-4"
                            >
                              <h5>
                                Shop
                              </h5>
                              <p>
                                You can use the web app to add/remove item from a shopping experience.
                              </p>
                            </div>
                            <div
                              class="col-md-4"
                            >
                              <h5>
                                Manage Item
                              </h5>
                              <p>
                                You can manage item you add. YOu can also delete an item with a very simple user experience.
                              </p>
                            </div>
                            <div
                              class="col-md-4"
                            >
                              <h5>
                                Transaction Summary
                              </h5>
                              <p>
                                Transaction summary of item purchase can not be easier.
                              </p>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>,
                    "context": Object {},
                    "current": [Circular],
                    "didError": false,
                    "earliestPendingTime": 0,
                    "earliestSuspendedTime": 0,
                    "expirationTime": 0,
                    "finishedWork": null,
                    "firstBatch": null,
                    "hydrate": false,
                    "interactionThreadID": 12,
                    "latestPendingTime": 0,
                    "latestPingedTime": 0,
                    "latestSuspendedTime": 0,
                    "memoizedInteractions": Set {},
                    "nextExpirationTimeToWorkOn": 0,
                    "nextScheduledRoot": null,
                    "pendingChildren": null,
                    "pendingCommitExpirationTime": 0,
                    "pendingContext": null,
                    "pendingInteractionMap": Map {},
                    "timeoutHandle": -1,
                  },
                  "tag": 3,
                  "treeBaseDuration": 0,
                  "type": null,
                  "updateQueue": Object {
                    "baseState": null,
                    "firstCapturedEffect": null,
                    "firstCapturedUpdate": null,
                    "firstEffect": null,
                    "firstUpdate": Object {
                      "callback": null,
                      "expirationTime": 1073741823,
                      "next": null,
                      "nextEffect": null,
                      "payload": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "children": <_default />,
                            }
                          }
                        />,
                      },
                      "tag": 0,
                    },
                    "lastCapturedEffect": null,
                    "lastCapturedUpdate": null,
                    "lastEffect": null,
                    "lastUpdate": Object {
                      "callback": null,
                      "expirationTime": 1073741823,
                      "next": null,
                      "nextEffect": null,
                      "payload": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "children": <_default />,
                            }
                          }
                        />,
                      },
                      "tag": 0,
                    },
                  },
                },
                "child": [Circular],
                "childExpirationTime": 0,
                "effectTag": 32,
                "elementType": null,
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": null,
                "memoizedState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                      Object {
                        "children": <_default />,
                      }
                    }
                  />,
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div>
                      <div
                        class="jumbotron text-center"
                      >
                        <h1>
                          Grocery Listify
                        </h1>
                        <p>
                          Grocery Store Management Made easy with
                           
                        </p>
                      </div>
                      <div
                        class="container home"
                      >
                        <div
                          class="row text-center"
                        >
                          <div
                            class="col-md-4"
                          >
                            <h5>
                              Shop
                            </h5>
                            <p>
                              You can use the web app to add/remove item from a shopping experience.
                            </p>
                          </div>
                          <div
                            class="col-md-4"
                          >
                            <h5>
                              Manage Item
                            </h5>
                            <p>
                              You can manage item you add. YOu can also delete an item with a very simple user experience.
                            </p>
                          </div>
                          <div
                            class="col-md-4"
                          >
                            <h5>
                              Transaction Summary
                            </h5>
                            <p>
                              Transaction summary of item purchase can not be easier.
                            </p>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "didError": false,
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "expirationTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "interactionThreadID": 12,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextExpirationTimeToWorkOn": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "timeoutHandle": -1,
                },
                "tag": 3,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "children": <_default />,
                        }
                      }
                    />,
                  },
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": null,
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": null,
                },
              },
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": WrapperComponent {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "children": <_default />,
                  },
                },
                "refs": Object {},
                "state": Object {
                  "context": null,
                  "mount": true,
                  "props": Object {
                    "children": <_default />,
                  },
                },
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": null,
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": BrowserRouter {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "history": Object {
                "action": "POP",
                "block": [Function],
                "createHref": [Function],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "push": [Function],
                "replace": [Function],
              },
              "props": Object {
                "children": <_default />,
              },
              "refs": Object {},
              "state": null,
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 1,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": FiberNode {
            "_debugID": 52,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": FiberNode {
              "_debugID": 53,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 54,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 56,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": null,
                  "childExpirationTime": 0,
                  "effectTag": 0,
                  "elementType": "h1",
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": "Grocery Listify",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": "Grocery Listify",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": FiberNode {
                    "_debugID": 57,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 58,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": null,
                      "childExpirationTime": 0,
                      "effectTag": 0,
                      "elementType": null,
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": "Grocery Store Management Made easy with",
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": "Grocery Store Management Made easy with",
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": FiberNode {
                        "_debugID": 59,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": null,
                        "childExpirationTime": 0,
                        "effectTag": 0,
                        "elementType": null,
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 1,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": " ",
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": " ",
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": FiberNode {
                          "_debugID": 60,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childExpirationTime": 0,
                          "effectTag": 1,
                          "elementType": [Function],
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 2,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "border": false,
                            "className": "",
                            "fixedWidth": false,
                            "flip": null,
                            "icon": "heart",
                            "inverse": false,
                            "listItem": false,
                            "mask": null,
                            "pull": null,
                            "pulse": false,
                            "rotation": null,
                            "size": null,
                            "spin": false,
                            "symbol": false,
                            "title": "",
                            "transform": null,
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "border": false,
                            "className": "",
                            "fixedWidth": false,
                            "flip": null,
                            "icon": "heart",
                            "inverse": false,
                            "listItem": false,
                            "mask": null,
                            "pull": null,
                            "pulse": false,
                            "rotation": null,
                            "size": null,
                            "spin": false,
                            "symbol": false,
                            "title": "",
                            "transform": null,
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": null,
                          "tag": 0,
                          "treeBaseDuration": 0,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "stateNode":  ,
                        "tag": 6,
                        "treeBaseDuration": 0,
                        "type": null,
                        "updateQueue": null,
                      },
                      "stateNode": Grocery Store Management Made easy with,
                      "tag": 6,
                      "treeBaseDuration": 0,
                      "type": null,
                      "updateQueue": null,
                    },
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "elementType": "p",
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 1,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [
                        "Grocery Store Management Made easy with",
                        " ",
                        <FontAwesomeIcon
                          border={false}
                          className=""
                          fixedWidth={false}
                          flip={null}
                          icon="heart"
                          inverse={false}
                          listItem={false}
                          mask={null}
                          pull={null}
                          pulse={false}
                          rotation={null}
                          size={null}
                          spin={false}
                          symbol={false}
                          title=""
                          transform={null}
                        />,
                      ],
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": Array [
                        "Grocery Store Management Made easy with",
                        " ",
                        <FontAwesomeIcon
                          border={false}
                          className=""
                          fixedWidth={false}
                          flip={null}
                          icon="heart"
                          inverse={false}
                          listItem={false}
                          mask={null}
                          pull={null}
                          pulse={false}
                          rotation={null}
                          size={null}
                          spin={false}
                          symbol={false}
                          title=""
                          transform={null}
                        />,
                      ],
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": <p>
                      Grocery Store Management Made easy with
                       
                    </p>,
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": "p",
                    "updateQueue": null,
                  },
                  "stateNode": <h1>
                    Grocery Listify
                  </h1>,
                  "tag": 5,
                  "treeBaseDuration": 0,
                  "type": "h1",
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "effectTag": 0,
                "elementType": "div",
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <h1>
                      Grocery Listify
                    </h1>,
                    <p>
                      Grocery Store Management Made easy with
                       
                      <FontAwesomeIcon
                        border={false}
                        className=""
                        fixedWidth={false}
                        flip={null}
                        icon="heart"
                        inverse={false}
                        listItem={false}
                        mask={null}
                        pull={null}
                        pulse={false}
                        rotation={null}
                        size={null}
                        spin={false}
                        symbol={false}
                        title=""
                        transform={null}
                      />
                    </p>,
                  ],
                  "className": "jumbotron text-center",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": Array [
                    <h1>
                      Grocery Listify
                    </h1>,
                    <p>
                      Grocery Store Management Made easy with
                       
                      <FontAwesomeIcon
                        border={false}
                        className=""
                        fixedWidth={false}
                        flip={null}
                        icon="heart"
                        inverse={false}
                        listItem={false}
                        mask={null}
                        pull={null}
                        pulse={false}
                        rotation={null}
                        size={null}
                        spin={false}
                        symbol={false}
                        title=""
                        transform={null}
                      />
                    </p>,
                  ],
                  "className": "jumbotron text-center",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": FiberNode {
                  "_debugID": 55,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 61,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 62,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 65,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": null,
                        "childExpirationTime": 0,
                        "effectTag": 1,
                        "elementType": [Function],
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "border": false,
                          "className": "",
                          "fixedWidth": false,
                          "flip": null,
                          "icon": "shopping-bag",
                          "inverse": false,
                          "listItem": false,
                          "mask": null,
                          "pull": null,
                          "pulse": false,
                          "rotation": null,
                          "size": null,
                          "spin": false,
                          "symbol": false,
                          "title": "",
                          "transform": null,
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "border": false,
                          "className": "",
                          "fixedWidth": false,
                          "flip": null,
                          "icon": "shopping-bag",
                          "inverse": false,
                          "listItem": false,
                          "mask": null,
                          "pull": null,
                          "pulse": false,
                          "rotation": null,
                          "size": null,
                          "spin": false,
                          "symbol": false,
                          "title": "",
                          "transform": null,
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": FiberNode {
                          "_debugID": 66,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childExpirationTime": 0,
                          "effectTag": 0,
                          "elementType": "h5",
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 1,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": "Shop",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": "Shop",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": FiberNode {
                            "_debugID": 67,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childExpirationTime": 0,
                            "effectTag": 0,
                            "elementType": "p",
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 2,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": "You can use the web app to add/remove item from a shopping experience.",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": "You can use the web app to add/remove item from a shopping experience.",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": <p>
                              You can use the web app to add/remove item from a shopping experience.
                            </p>,
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": "p",
                            "updateQueue": null,
                          },
                          "stateNode": <h5>
                            Shop
                          </h5>,
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": "h5",
                          "updateQueue": null,
                        },
                        "stateNode": null,
                        "tag": 0,
                        "treeBaseDuration": 0,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "childExpirationTime": 0,
                      "effectTag": 0,
                      "elementType": "div",
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": Array [
                          <FontAwesomeIcon
                            border={false}
                            className=""
                            fixedWidth={false}
                            flip={null}
                            icon="shopping-bag"
                            inverse={false}
                            listItem={false}
                            mask={null}
                            pull={null}
                            pulse={false}
                            rotation={null}
                            size={null}
                            spin={false}
                            symbol={false}
                            title=""
                            transform={null}
                          />,
                          <h5>
                            Shop
                          </h5>,
                          <p>
                            You can use the web app to add/remove item from a shopping experience.
                          </p>,
                        ],
                        "className": "col-md-4",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": Array [
                          <FontAwesomeIcon
                            border={false}
                            className=""
                            fixedWidth={false}
                            flip={null}
                            icon="shopping-bag"
                            inverse={false}
                            listItem={false}
                            mask={null}
                            pull={null}
                            pulse={false}
                            rotation={null}
                            size={null}
                            spin={false}
                            symbol={false}
                            title=""
                            transform={null}
                          />,
                          <h5>
                            Shop
                          </h5>,
                          <p>
                            You can use the web app to add/remove item from a shopping experience.
                          </p>,
                        ],
                        "className": "col-md-4",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": FiberNode {
                        "_debugID": 63,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 68,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childExpirationTime": 0,
                          "effectTag": 1,
                          "elementType": [Function],
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "border": false,
                            "className": "",
                            "fixedWidth": false,
                            "flip": null,
                            "icon": "briefcase",
                            "inverse": false,
                            "listItem": false,
                            "mask": null,
                            "pull": null,
                            "pulse": false,
                            "rotation": null,
                            "size": null,
                            "spin": false,
                            "symbol": false,
                            "title": "",
                            "transform": null,
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "border": false,
                            "className": "",
                            "fixedWidth": false,
                            "flip": null,
                            "icon": "briefcase",
                            "inverse": false,
                            "listItem": false,
                            "mask": null,
                            "pull": null,
                            "pulse": false,
                            "rotation": null,
                            "size": null,
                            "spin": false,
                            "symbol": false,
                            "title": "",
                            "transform": null,
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": FiberNode {
                            "_debugID": 69,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childExpirationTime": 0,
                            "effectTag": 0,
                            "elementType": "h5",
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 1,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": "Manage Item",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": "Manage Item",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": FiberNode {
                              "_debugID": 70,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": null,
                              "childExpirationTime": 0,
                              "effectTag": 0,
                              "elementType": "p",
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": null,
                              "index": 2,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": "You can manage item you add. YOu can also delete an item with a very simple user experience.",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": "You can manage item you add. YOu can also delete an item with a very simple user experience.",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": <p>
                                You can manage item you add. YOu can also delete an item with a very simple user experience.
                              </p>,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "p",
                              "updateQueue": null,
                            },
                            "stateNode": <h5>
                              Manage Item
                            </h5>,
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": "h5",
                            "updateQueue": null,
                          },
                          "stateNode": null,
                          "tag": 0,
                          "treeBaseDuration": 0,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "childExpirationTime": 0,
                        "effectTag": 0,
                        "elementType": "div",
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 1,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": Array [
                            <FontAwesomeIcon
                              border={false}
                              className=""
                              fixedWidth={false}
                              flip={null}
                              icon="briefcase"
                              inverse={false}
                              listItem={false}
                              mask={null}
                              pull={null}
                              pulse={false}
                              rotation={null}
                              size={null}
                              spin={false}
                              symbol={false}
                              title=""
                              transform={null}
                            />,
                            <h5>
                              Manage Item
                            </h5>,
                            <p>
                              You can manage item you add. YOu can also delete an item with a very simple user experience.
                            </p>,
                          ],
                          "className": "col-md-4",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": Array [
                            <FontAwesomeIcon
                              border={false}
                              className=""
                              fixedWidth={false}
                              flip={null}
                              icon="briefcase"
                              inverse={false}
                              listItem={false}
                              mask={null}
                              pull={null}
                              pulse={false}
                              rotation={null}
                              size={null}
                              spin={false}
                              symbol={false}
                              title=""
                              transform={null}
                            />,
                            <h5>
                              Manage Item
                            </h5>,
                            <p>
                              You can manage item you add. YOu can also delete an item with a very simple user experience.
                            </p>,
                          ],
                          "className": "col-md-4",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": FiberNode {
                          "_debugID": 64,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 71,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childExpirationTime": 0,
                            "effectTag": 1,
                            "elementType": [Function],
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "border": false,
                              "className": "",
                              "fixedWidth": false,
                              "flip": null,
                              "icon": "chart-line",
                              "inverse": false,
                              "listItem": false,
                              "mask": null,
                              "pull": null,
                              "pulse": false,
                              "rotation": null,
                              "size": null,
                              "spin": false,
                              "symbol": false,
                              "title": "",
                              "transform": null,
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "border": false,
                              "className": "",
                              "fixedWidth": false,
                              "flip": null,
                              "icon": "chart-line",
                              "inverse": false,
                              "listItem": false,
                              "mask": null,
                              "pull": null,
                              "pulse": false,
                              "rotation": null,
                              "size": null,
                              "spin": false,
                              "symbol": false,
                              "title": "",
                              "transform": null,
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": FiberNode {
                              "_debugID": 72,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": null,
                              "childExpirationTime": 0,
                              "effectTag": 0,
                              "elementType": "h5",
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": null,
                              "index": 1,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": "Transaction Summary",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": "Transaction Summary",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": FiberNode {
                                "_debugID": 73,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": null,
                                "childExpirationTime": 0,
                                "effectTag": 0,
                                "elementType": "p",
                                "expirationTime": 0,
                                "firstContextDependency": null,
                                "firstEffect": null,
                                "index": 2,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": "Transaction summary of item purchase can not be easier.",
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "children": "Transaction summary of item purchase can not be easier.",
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": <p>
                                  Transaction summary of item purchase can not be easier.
                                </p>,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "p",
                                "updateQueue": null,
                              },
                              "stateNode": <h5>
                                Transaction Summary
                              </h5>,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "h5",
                              "updateQueue": null,
                            },
                            "stateNode": null,
                            "tag": 0,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "childExpirationTime": 0,
                          "effectTag": 0,
                          "elementType": "div",
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 2,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": Array [
                              <FontAwesomeIcon
                                border={false}
                                className=""
                                fixedWidth={false}
                                flip={null}
                                icon="chart-line"
                                inverse={false}
                                listItem={false}
                                mask={null}
                                pull={null}
                                pulse={false}
                                rotation={null}
                                size={null}
                                spin={false}
                                symbol={false}
                                title=""
                                transform={null}
                              />,
                              <h5>
                                Transaction Summary
                              </h5>,
                              <p>
                                Transaction summary of item purchase can not be easier.
                              </p>,
                            ],
                            "className": "col-md-4",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": Array [
                              <FontAwesomeIcon
                                border={false}
                                className=""
                                fixedWidth={false}
                                flip={null}
                                icon="chart-line"
                                inverse={false}
                                listItem={false}
                                mask={null}
                                pull={null}
                                pulse={false}
                                rotation={null}
                                size={null}
                                spin={false}
                                symbol={false}
                                title=""
                                transform={null}
                              />,
                              <h5>
                                Transaction Summary
                              </h5>,
                              <p>
                                Transaction summary of item purchase can not be easier.
                              </p>,
                            ],
                            "className": "col-md-4",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": <div
                            class="col-md-4"
                          >
                            <h5>
                              Transaction Summary
                            </h5>
                            <p>
                              Transaction summary of item purchase can not be easier.
                            </p>
                          </div>,
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": "div",
                          "updateQueue": null,
                        },
                        "stateNode": <div
                          class="col-md-4"
                        >
                          <h5>
                            Manage Item
                          </h5>
                          <p>
                            You can manage item you add. YOu can also delete an item with a very simple user experience.
                          </p>
                        </div>,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "stateNode": <div
                        class="col-md-4"
                      >
                        <h5>
                          Shop
                        </h5>
                        <p>
                          You can use the web app to add/remove item from a shopping experience.
                        </p>
                      </div>,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "elementType": "div",
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [
                        <div
                          className="col-md-4"
                        >
                          <FontAwesomeIcon
                            border={false}
                            className=""
                            fixedWidth={false}
                            flip={null}
                            icon="shopping-bag"
                            inverse={false}
                            listItem={false}
                            mask={null}
                            pull={null}
                            pulse={false}
                            rotation={null}
                            size={null}
                            spin={false}
                            symbol={false}
                            title=""
                            transform={null}
                          />
                          <h5>
                            Shop
                          </h5>
                          <p>
                            You can use the web app to add/remove item from a shopping experience.
                          </p>
                        </div>,
                        <div
                          className="col-md-4"
                        >
                          <FontAwesomeIcon
                            border={false}
                            className=""
                            fixedWidth={false}
                            flip={null}
                            icon="briefcase"
                            inverse={false}
                            listItem={false}
                            mask={null}
                            pull={null}
                            pulse={false}
                            rotation={null}
                            size={null}
                            spin={false}
                            symbol={false}
                            title=""
                            transform={null}
                          />
                          <h5>
                            Manage Item
                          </h5>
                          <p>
                            You can manage item you add. YOu can also delete an item with a very simple user experience.
                          </p>
                        </div>,
                        <div
                          className="col-md-4"
                        >
                          <FontAwesomeIcon
                            border={false}
                            className=""
                            fixedWidth={false}
                            flip={null}
                            icon="chart-line"
                            inverse={false}
                            listItem={false}
                            mask={null}
                            pull={null}
                            pulse={false}
                            rotation={null}
                            size={null}
                            spin={false}
                            symbol={false}
                            title=""
                            transform={null}
                          />
                          <h5>
                            Transaction Summary
                          </h5>
                          <p>
                            Transaction summary of item purchase can not be easier.
                          </p>
                        </div>,
                      ],
                      "className": "row text-center",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": Array [
                        <div
                          className="col-md-4"
                        >
                          <FontAwesomeIcon
                            border={false}
                            className=""
                            fixedWidth={false}
                            flip={null}
                            icon="shopping-bag"
                            inverse={false}
                            listItem={false}
                            mask={null}
                            pull={null}
                            pulse={false}
                            rotation={null}
                            size={null}
                            spin={false}
                            symbol={false}
                            title=""
                            transform={null}
                          />
                          <h5>
                            Shop
                          </h5>
                          <p>
                            You can use the web app to add/remove item from a shopping experience.
                          </p>
                        </div>,
                        <div
                          className="col-md-4"
                        >
                          <FontAwesomeIcon
                            border={false}
                            className=""
                            fixedWidth={false}
                            flip={null}
                            icon="briefcase"
                            inverse={false}
                            listItem={false}
                            mask={null}
                            pull={null}
                            pulse={false}
                            rotation={null}
                            size={null}
                            spin={false}
                            symbol={false}
                            title=""
                            transform={null}
                          />
                          <h5>
                            Manage Item
                          </h5>
                          <p>
                            You can manage item you add. YOu can also delete an item with a very simple user experience.
                          </p>
                        </div>,
                        <div
                          className="col-md-4"
                        >
                          <FontAwesomeIcon
                            border={false}
                            className=""
                            fixedWidth={false}
                            flip={null}
                            icon="chart-line"
                            inverse={false}
                            listItem={false}
                            mask={null}
                            pull={null}
                            pulse={false}
                            rotation={null}
                            size={null}
                            spin={false}
                            symbol={false}
                            title=""
                            transform={null}
                          />
                          <h5>
                            Transaction Summary
                          </h5>
                          <p>
                            Transaction summary of item purchase can not be easier.
                          </p>
                        </div>,
                      ],
                      "className": "row text-center",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": <div
                      class="row text-center"
                    >
                      <div
                        class="col-md-4"
                      >
                        <h5>
                          Shop
                        </h5>
                        <p>
                          You can use the web app to add/remove item from a shopping experience.
                        </p>
                      </div>
                      <div
                        class="col-md-4"
                      >
                        <h5>
                          Manage Item
                        </h5>
                        <p>
                          You can manage item you add. YOu can also delete an item with a very simple user experience.
                        </p>
                      </div>
                      <div
                        class="col-md-4"
                      >
                        <h5>
                          Transaction Summary
                        </h5>
                        <p>
                          Transaction summary of item purchase can not be easier.
                        </p>
                      </div>
                    </div>,
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "effectTag": 0,
                  "elementType": "div",
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 1,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": <div
                      className="row text-center"
                    >
                      <div
                        className="col-md-4"
                      >
                        <FontAwesomeIcon
                          border={false}
                          className=""
                          fixedWidth={false}
                          flip={null}
                          icon="shopping-bag"
                          inverse={false}
                          listItem={false}
                          mask={null}
                          pull={null}
                          pulse={false}
                          rotation={null}
                          size={null}
                          spin={false}
                          symbol={false}
                          title=""
                          transform={null}
                        />
                        <h5>
                          Shop
                        </h5>
                        <p>
                          You can use the web app to add/remove item from a shopping experience.
                        </p>
                      </div>
                      <div
                        className="col-md-4"
                      >
                        <FontAwesomeIcon
                          border={false}
                          className=""
                          fixedWidth={false}
                          flip={null}
                          icon="briefcase"
                          inverse={false}
                          listItem={false}
                          mask={null}
                          pull={null}
                          pulse={false}
                          rotation={null}
                          size={null}
                          spin={false}
                          symbol={false}
                          title=""
                          transform={null}
                        />
                        <h5>
                          Manage Item
                        </h5>
                        <p>
                          You can manage item you add. YOu can also delete an item with a very simple user experience.
                        </p>
                      </div>
                      <div
                        className="col-md-4"
                      >
                        <FontAwesomeIcon
                          border={false}
                          className=""
                          fixedWidth={false}
                          flip={null}
                          icon="chart-line"
                          inverse={false}
                          listItem={false}
                          mask={null}
                          pull={null}
                          pulse={false}
                          rotation={null}
                          size={null}
                          spin={false}
                          symbol={false}
                          title=""
                          transform={null}
                        />
                        <h5>
                          Transaction Summary
                        </h5>
                        <p>
                          Transaction summary of item purchase can not be easier.
                        </p>
                      </div>
                    </div>,
                    "className": "container home",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": <div
                      className="row text-center"
                    >
                      <div
                        className="col-md-4"
                      >
                        <FontAwesomeIcon
                          border={false}
                          className=""
                          fixedWidth={false}
                          flip={null}
                          icon="shopping-bag"
                          inverse={false}
                          listItem={false}
                          mask={null}
                          pull={null}
                          pulse={false}
                          rotation={null}
                          size={null}
                          spin={false}
                          symbol={false}
                          title=""
                          transform={null}
                        />
                        <h5>
                          Shop
                        </h5>
                        <p>
                          You can use the web app to add/remove item from a shopping experience.
                        </p>
                      </div>
                      <div
                        className="col-md-4"
                      >
                        <FontAwesomeIcon
                          border={false}
                          className=""
                          fixedWidth={false}
                          flip={null}
                          icon="briefcase"
                          inverse={false}
                          listItem={false}
                          mask={null}
                          pull={null}
                          pulse={false}
                          rotation={null}
                          size={null}
                          spin={false}
                          symbol={false}
                          title=""
                          transform={null}
                        />
                        <h5>
                          Manage Item
                        </h5>
                        <p>
                          You can manage item you add. YOu can also delete an item with a very simple user experience.
                        </p>
                      </div>
                      <div
                        className="col-md-4"
                      >
                        <FontAwesomeIcon
                          border={false}
                          className=""
                          fixedWidth={false}
                          flip={null}
                          icon="chart-line"
                          inverse={false}
                          listItem={false}
                          mask={null}
                          pull={null}
                          pulse={false}
                          rotation={null}
                          size={null}
                          spin={false}
                          symbol={false}
                          title=""
                          transform={null}
                        />
                        <h5>
                          Transaction Summary
                        </h5>
                        <p>
                          Transaction summary of item purchase can not be easier.
                        </p>
                      </div>
                    </div>,
                    "className": "container home",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": <div
                    class="container home"
                  >
                    <div
                      class="row text-center"
                    >
                      <div
                        class="col-md-4"
                      >
                        <h5>
                          Shop
                        </h5>
                        <p>
                          You can use the web app to add/remove item from a shopping experience.
                        </p>
                      </div>
                      <div
                        class="col-md-4"
                      >
                        <h5>
                          Manage Item
                        </h5>
                        <p>
                          You can manage item you add. YOu can also delete an item with a very simple user experience.
                        </p>
                      </div>
                      <div
                        class="col-md-4"
                      >
                        <h5>
                          Transaction Summary
                        </h5>
                        <p>
                          Transaction summary of item purchase can not be easier.
                        </p>
                      </div>
                    </div>
                  </div>,
                  "tag": 5,
                  "treeBaseDuration": 0,
                  "type": "div",
                  "updateQueue": null,
                },
                "stateNode": <div
                  class="jumbotron text-center"
                >
                  <h1>
                    Grocery Listify
                  </h1>
                  <p>
                    Grocery Store Management Made easy with
                     
                  </p>
                </div>,
                "tag": 5,
                "treeBaseDuration": 0,
                "type": "div",
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "effectTag": 0,
              "elementType": "div",
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": Array [
                  <div
                    className="jumbotron text-center"
                  >
                    <h1>
                      Grocery Listify
                    </h1>
                    <p>
                      Grocery Store Management Made easy with
                       
                      <FontAwesomeIcon
                        border={false}
                        className=""
                        fixedWidth={false}
                        flip={null}
                        icon="heart"
                        inverse={false}
                        listItem={false}
                        mask={null}
                        pull={null}
                        pulse={false}
                        rotation={null}
                        size={null}
                        spin={false}
                        symbol={false}
                        title=""
                        transform={null}
                      />
                    </p>
                  </div>,
                  <div
                    className="container home"
                  >
                    <div
                      className="row text-center"
                    >
                      <div
                        className="col-md-4"
                      >
                        <FontAwesomeIcon
                          border={false}
                          className=""
                          fixedWidth={false}
                          flip={null}
                          icon="shopping-bag"
                          inverse={false}
                          listItem={false}
                          mask={null}
                          pull={null}
                          pulse={false}
                          rotation={null}
                          size={null}
                          spin={false}
                          symbol={false}
                          title=""
                          transform={null}
                        />
                        <h5>
                          Shop
                        </h5>
                        <p>
                          You can use the web app to add/remove item from a shopping experience.
                        </p>
                      </div>
                      <div
                        className="col-md-4"
                      >
                        <FontAwesomeIcon
                          border={false}
                          className=""
                          fixedWidth={false}
                          flip={null}
                          icon="briefcase"
                          inverse={false}
                          listItem={false}
                          mask={null}
                          pull={null}
                          pulse={false}
                          rotation={null}
                          size={null}
                          spin={false}
                          symbol={false}
                          title=""
                          transform={null}
                        />
                        <h5>
                          Manage Item
                        </h5>
                        <p>
                          You can manage item you add. YOu can also delete an item with a very simple user experience.
                        </p>
                      </div>
                      <div
                        className="col-md-4"
                      >
                        <FontAwesomeIcon
                          border={false}
                          className=""
                          fixedWidth={false}
                          flip={null}
                          icon="chart-line"
                          inverse={false}
                          listItem={false}
                          mask={null}
                          pull={null}
                          pulse={false}
                          rotation={null}
                          size={null}
                          spin={false}
                          symbol={false}
                          title=""
                          transform={null}
                        />
                        <h5>
                          Transaction Summary
                        </h5>
                        <p>
                          Transaction summary of item purchase can not be easier.
                        </p>
                      </div>
                    </div>
                  </div>,
                ],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": Array [
                  <div
                    className="jumbotron text-center"
                  >
                    <h1>
                      Grocery Listify
                    </h1>
                    <p>
                      Grocery Store Management Made easy with
                       
                      <FontAwesomeIcon
                        border={false}
                        className=""
                        fixedWidth={false}
                        flip={null}
                        icon="heart"
                        inverse={false}
                        listItem={false}
                        mask={null}
                        pull={null}
                        pulse={false}
                        rotation={null}
                        size={null}
                        spin={false}
                        symbol={false}
                        title=""
                        transform={null}
                      />
                    </p>
                  </div>,
                  <div
                    className="container home"
                  >
                    <div
                      className="row text-center"
                    >
                      <div
                        className="col-md-4"
                      >
                        <FontAwesomeIcon
                          border={false}
                          className=""
                          fixedWidth={false}
                          flip={null}
                          icon="shopping-bag"
                          inverse={false}
                          listItem={false}
                          mask={null}
                          pull={null}
                          pulse={false}
                          rotation={null}
                          size={null}
                          spin={false}
                          symbol={false}
                          title=""
                          transform={null}
                        />
                        <h5>
                          Shop
                        </h5>
                        <p>
                          You can use the web app to add/remove item from a shopping experience.
                        </p>
                      </div>
                      <div
                        className="col-md-4"
                      >
                        <FontAwesomeIcon
                          border={false}
                          className=""
                          fixedWidth={false}
                          flip={null}
                          icon="briefcase"
                          inverse={false}
                          listItem={false}
                          mask={null}
                          pull={null}
                          pulse={false}
                          rotation={null}
                          size={null}
                          spin={false}
                          symbol={false}
                          title=""
                          transform={null}
                        />
                        <h5>
                          Manage Item
                        </h5>
                        <p>
                          You can manage item you add. YOu can also delete an item with a very simple user experience.
                        </p>
                      </div>
                      <div
                        className="col-md-4"
                      >
                        <FontAwesomeIcon
                          border={false}
                          className=""
                          fixedWidth={false}
                          flip={null}
                          icon="chart-line"
                          inverse={false}
                          listItem={false}
                          mask={null}
                          pull={null}
                          pulse={false}
                          rotation={null}
                          size={null}
                          spin={false}
                          symbol={false}
                          title=""
                          transform={null}
                        />
                        <h5>
                          Transaction Summary
                        </h5>
                        <p>
                          Transaction summary of item purchase can not be easier.
                        </p>
                      </div>
                    </div>
                  </div>,
                ],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": <div>
                <div
                  class="jumbotron text-center"
                >
                  <h1>
                    Grocery Listify
                  </h1>
                  <p>
                    Grocery Store Management Made easy with
                     
                  </p>
                </div>
                <div
                  class="container home"
                >
                  <div
                    class="row text-center"
                  >
                    <div
                      class="col-md-4"
                    >
                      <h5>
                        Shop
                      </h5>
                      <p>
                        You can use the web app to add/remove item from a shopping experience.
                      </p>
                    </div>
                    <div
                      class="col-md-4"
                    >
                      <h5>
                        Manage Item
                      </h5>
                      <p>
                        You can manage item you add. YOu can also delete an item with a very simple user experience.
                      </p>
                    </div>
                    <div
                      class="col-md-4"
                    >
                      <h5>
                        Transaction Summary
                      </h5>
                      <p>
                        Transaction summary of item purchase can not be easier.
                      </p>
                    </div>
                  </div>
                </div>
              </div>,
              "tag": 5,
              "treeBaseDuration": 0,
              "type": "div",
              "updateQueue": null,
            },
            "childExpirationTime": 0,
            "effectTag": 1,
            "elementType": [Function],
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {},
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {},
            "ref": null,
            "return": [Circular],
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": null,
            "tag": 0,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "childExpirationTime": 0,
          "effectTag": 1,
          "elementType": [Function],
          "expirationTime": 0,
          "firstContextDependency": null,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "children": <_default />,
            "history": Object {
              "action": "POP",
              "block": [Function],
              "createHref": [Function],
              "go": [Function],
              "goBack": [Function],
              "goForward": [Function],
              "length": 1,
              "listen": [Function],
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
              "push": [Function],
              "replace": [Function],
            },
          },
          "memoizedState": Object {
            "match": Object {
              "isExact": true,
              "params": Object {},
              "path": "/",
              "url": "/",
            },
          },
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "children": <_default />,
            "history": Object {
              "action": "POP",
              "block": [Function],
              "createHref": [Function],
              "go": [Function],
              "goBack": [Function],
              "goForward": [Function],
              "length": 1,
              "listen": [Function],
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
              "push": [Function],
              "replace": [Function],
            },
          },
          "ref": null,
          "return": FiberNode {
            "_debugID": 50,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": FiberNode {
              "_debugID": 49,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "children": <_default />,
                },
              },
              "memoizedState": Object {
                "context": null,
                "mount": true,
                "props": Object {
                  "children": <_default />,
                },
              },
              "mode": 0,
              "nextEffect": FiberNode {
                "_debugID": 47,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": FiberNode {
                  "_debugID": 47,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": [Circular],
                  "child": null,
                  "childExpirationTime": 0,
                  "effectTag": 0,
                  "elementType": null,
                  "expirationTime": 1073741823,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": null,
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": Object {
                    "containerInfo": <div>
                      <div>
                        <div
                          class="jumbotron text-center"
                        >
                          <h1>
                            Grocery Listify
                          </h1>
                          <p>
                            Grocery Store Management Made easy with
                             
                          </p>
                        </div>
                        <div
                          class="container home"
                        >
                          <div
                            class="row text-center"
                          >
                            <div
                              class="col-md-4"
                            >
                              <h5>
                                Shop
                              </h5>
                              <p>
                                You can use the web app to add/remove item from a shopping experience.
                              </p>
                            </div>
                            <div
                              class="col-md-4"
                            >
                              <h5>
                                Manage Item
                              </h5>
                              <p>
                                You can manage item you add. YOu can also delete an item with a very simple user experience.
                              </p>
                            </div>
                            <div
                              class="col-md-4"
                            >
                              <h5>
                                Transaction Summary
                              </h5>
                              <p>
                                Transaction summary of item purchase can not be easier.
                              </p>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>,
                    "context": Object {},
                    "current": [Circular],
                    "didError": false,
                    "earliestPendingTime": 0,
                    "earliestSuspendedTime": 0,
                    "expirationTime": 0,
                    "finishedWork": null,
                    "firstBatch": null,
                    "hydrate": false,
                    "interactionThreadID": 12,
                    "latestPendingTime": 0,
                    "latestPingedTime": 0,
                    "latestSuspendedTime": 0,
                    "memoizedInteractions": Set {},
                    "nextExpirationTimeToWorkOn": 0,
                    "nextScheduledRoot": null,
                    "pendingChildren": null,
                    "pendingCommitExpirationTime": 0,
                    "pendingContext": null,
                    "pendingInteractionMap": Map {},
                    "timeoutHandle": -1,
                  },
                  "tag": 3,
                  "treeBaseDuration": 0,
                  "type": null,
                  "updateQueue": Object {
                    "baseState": null,
                    "firstCapturedEffect": null,
                    "firstCapturedUpdate": null,
                    "firstEffect": null,
                    "firstUpdate": Object {
                      "callback": null,
                      "expirationTime": 1073741823,
                      "next": null,
                      "nextEffect": null,
                      "payload": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "children": <_default />,
                            }
                          }
                        />,
                      },
                      "tag": 0,
                    },
                    "lastCapturedEffect": null,
                    "lastCapturedUpdate": null,
                    "lastEffect": null,
                    "lastUpdate": Object {
                      "callback": null,
                      "expirationTime": 1073741823,
                      "next": null,
                      "nextEffect": null,
                      "payload": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "children": <_default />,
                            }
                          }
                        />,
                      },
                      "tag": 0,
                    },
                  },
                },
                "child": [Circular],
                "childExpirationTime": 0,
                "effectTag": 32,
                "elementType": null,
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": null,
                "memoizedState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                      Object {
                        "children": <_default />,
                      }
                    }
                  />,
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div>
                      <div
                        class="jumbotron text-center"
                      >
                        <h1>
                          Grocery Listify
                        </h1>
                        <p>
                          Grocery Store Management Made easy with
                           
                        </p>
                      </div>
                      <div
                        class="container home"
                      >
                        <div
                          class="row text-center"
                        >
                          <div
                            class="col-md-4"
                          >
                            <h5>
                              Shop
                            </h5>
                            <p>
                              You can use the web app to add/remove item from a shopping experience.
                            </p>
                          </div>
                          <div
                            class="col-md-4"
                          >
                            <h5>
                              Manage Item
                            </h5>
                            <p>
                              You can manage item you add. YOu can also delete an item with a very simple user experience.
                            </p>
                          </div>
                          <div
                            class="col-md-4"
                          >
                            <h5>
                              Transaction Summary
                            </h5>
                            <p>
                              Transaction summary of item purchase can not be easier.
                            </p>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "didError": false,
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "expirationTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "interactionThreadID": 12,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextExpirationTimeToWorkOn": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "timeoutHandle": -1,
                },
                "tag": 3,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "children": <_default />,
                        }
                      }
                    />,
                  },
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": null,
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": null,
                },
              },
              "pendingProps": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "children": <_default />,
                },
              },
              "ref": null,
              "return": FiberNode {
                "_debugID": 47,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": FiberNode {
                  "_debugID": 47,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": [Circular],
                  "child": null,
                  "childExpirationTime": 0,
                  "effectTag": 0,
                  "elementType": null,
                  "expirationTime": 1073741823,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": null,
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": Object {
                    "containerInfo": <div>
                      <div>
                        <div
                          class="jumbotron text-center"
                        >
                          <h1>
                            Grocery Listify
                          </h1>
                          <p>
                            Grocery Store Management Made easy with
                             
                          </p>
                        </div>
                        <div
                          class="container home"
                        >
                          <div
                            class="row text-center"
                          >
                            <div
                              class="col-md-4"
                            >
                              <h5>
                                Shop
                              </h5>
                              <p>
                                You can use the web app to add/remove item from a shopping experience.
                              </p>
                            </div>
                            <div
                              class="col-md-4"
                            >
                              <h5>
                                Manage Item
                              </h5>
                              <p>
                                You can manage item you add. YOu can also delete an item with a very simple user experience.
                              </p>
                            </div>
                            <div
                              class="col-md-4"
                            >
                              <h5>
                                Transaction Summary
                              </h5>
                              <p>
                                Transaction summary of item purchase can not be easier.
                              </p>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>,
                    "context": Object {},
                    "current": [Circular],
                    "didError": false,
                    "earliestPendingTime": 0,
                    "earliestSuspendedTime": 0,
                    "expirationTime": 0,
                    "finishedWork": null,
                    "firstBatch": null,
                    "hydrate": false,
                    "interactionThreadID": 12,
                    "latestPendingTime": 0,
                    "latestPingedTime": 0,
                    "latestSuspendedTime": 0,
                    "memoizedInteractions": Set {},
                    "nextExpirationTimeToWorkOn": 0,
                    "nextScheduledRoot": null,
                    "pendingChildren": null,
                    "pendingCommitExpirationTime": 0,
                    "pendingContext": null,
                    "pendingInteractionMap": Map {},
                    "timeoutHandle": -1,
                  },
                  "tag": 3,
                  "treeBaseDuration": 0,
                  "type": null,
                  "updateQueue": Object {
                    "baseState": null,
                    "firstCapturedEffect": null,
                    "firstCapturedUpdate": null,
                    "firstEffect": null,
                    "firstUpdate": Object {
                      "callback": null,
                      "expirationTime": 1073741823,
                      "next": null,
                      "nextEffect": null,
                      "payload": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "children": <_default />,
                            }
                          }
                        />,
                      },
                      "tag": 0,
                    },
                    "lastCapturedEffect": null,
                    "lastCapturedUpdate": null,
                    "lastEffect": null,
                    "lastUpdate": Object {
                      "callback": null,
                      "expirationTime": 1073741823,
                      "next": null,
                      "nextEffect": null,
                      "payload": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "children": <_default />,
                            }
                          }
                        />,
                      },
                      "tag": 0,
                    },
                  },
                },
                "child": [Circular],
                "childExpirationTime": 0,
                "effectTag": 32,
                "elementType": null,
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": null,
                "memoizedState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                      Object {
                        "children": <_default />,
                      }
                    }
                  />,
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div>
                      <div
                        class="jumbotron text-center"
                      >
                        <h1>
                          Grocery Listify
                        </h1>
                        <p>
                          Grocery Store Management Made easy with
                           
                        </p>
                      </div>
                      <div
                        class="container home"
                      >
                        <div
                          class="row text-center"
                        >
                          <div
                            class="col-md-4"
                          >
                            <h5>
                              Shop
                            </h5>
                            <p>
                              You can use the web app to add/remove item from a shopping experience.
                            </p>
                          </div>
                          <div
                            class="col-md-4"
                          >
                            <h5>
                              Manage Item
                            </h5>
                            <p>
                              You can manage item you add. YOu can also delete an item with a very simple user experience.
                            </p>
                          </div>
                          <div
                            class="col-md-4"
                          >
                            <h5>
                              Transaction Summary
                            </h5>
                            <p>
                              Transaction summary of item purchase can not be easier.
                            </p>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "didError": false,
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "expirationTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "interactionThreadID": 12,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextExpirationTimeToWorkOn": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "timeoutHandle": -1,
                },
                "tag": 3,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "children": <_default />,
                        }
                      }
                    />,
                  },
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": null,
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": null,
                },
              },
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": WrapperComponent {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "children": <_default />,
                  },
                },
                "refs": Object {},
                "state": Object {
                  "context": null,
                  "mount": true,
                  "props": Object {
                    "children": <_default />,
                  },
                },
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": null,
            },
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "effectTag": 1,
            "elementType": [Function],
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": <_default />,
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": <_default />,
            },
            "ref": null,
            "return": FiberNode {
              "_debugID": 49,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "children": <_default />,
                },
              },
              "memoizedState": Object {
                "context": null,
                "mount": true,
                "props": Object {
                  "children": <_default />,
                },
              },
              "mode": 0,
              "nextEffect": FiberNode {
                "_debugID": 47,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": FiberNode {
                  "_debugID": 47,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": [Circular],
                  "child": null,
                  "childExpirationTime": 0,
                  "effectTag": 0,
                  "elementType": null,
                  "expirationTime": 1073741823,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": null,
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": Object {
                    "containerInfo": <div>
                      <div>
                        <div
                          class="jumbotron text-center"
                        >
                          <h1>
                            Grocery Listify
                          </h1>
                          <p>
                            Grocery Store Management Made easy with
                             
                          </p>
                        </div>
                        <div
                          class="container home"
                        >
                          <div
                            class="row text-center"
                          >
                            <div
                              class="col-md-4"
                            >
                              <h5>
                                Shop
                              </h5>
                              <p>
                                You can use the web app to add/remove item from a shopping experience.
                              </p>
                            </div>
                            <div
                              class="col-md-4"
                            >
                              <h5>
                                Manage Item
                              </h5>
                              <p>
                                You can manage item you add. YOu can also delete an item with a very simple user experience.
                              </p>
                            </div>
                            <div
                              class="col-md-4"
                            >
                              <h5>
                                Transaction Summary
                              </h5>
                              <p>
                                Transaction summary of item purchase can not be easier.
                              </p>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>,
                    "context": Object {},
                    "current": [Circular],
                    "didError": false,
                    "earliestPendingTime": 0,
                    "earliestSuspendedTime": 0,
                    "expirationTime": 0,
                    "finishedWork": null,
                    "firstBatch": null,
                    "hydrate": false,
                    "interactionThreadID": 12,
                    "latestPendingTime": 0,
                    "latestPingedTime": 0,
                    "latestSuspendedTime": 0,
                    "memoizedInteractions": Set {},
                    "nextExpirationTimeToWorkOn": 0,
                    "nextScheduledRoot": null,
                    "pendingChildren": null,
                    "pendingCommitExpirationTime": 0,
                    "pendingContext": null,
                    "pendingInteractionMap": Map {},
                    "timeoutHandle": -1,
                  },
                  "tag": 3,
                  "treeBaseDuration": 0,
                  "type": null,
                  "updateQueue": Object {
                    "baseState": null,
                    "firstCapturedEffect": null,
                    "firstCapturedUpdate": null,
                    "firstEffect": null,
                    "firstUpdate": Object {
                      "callback": null,
                      "expirationTime": 1073741823,
                      "next": null,
                      "nextEffect": null,
                      "payload": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "children": <_default />,
                            }
                          }
                        />,
                      },
                      "tag": 0,
                    },
                    "lastCapturedEffect": null,
                    "lastCapturedUpdate": null,
                    "lastEffect": null,
                    "lastUpdate": Object {
                      "callback": null,
                      "expirationTime": 1073741823,
                      "next": null,
                      "nextEffect": null,
                      "payload": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "children": <_default />,
                            }
                          }
                        />,
                      },
                      "tag": 0,
                    },
                  },
                },
                "child": [Circular],
                "childExpirationTime": 0,
                "effectTag": 32,
                "elementType": null,
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": null,
                "memoizedState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                      Object {
                        "children": <_default />,
                      }
                    }
                  />,
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div>
                      <div
                        class="jumbotron text-center"
                      >
                        <h1>
                          Grocery Listify
                        </h1>
                        <p>
                          Grocery Store Management Made easy with
                           
                        </p>
                      </div>
                      <div
                        class="container home"
                      >
                        <div
                          class="row text-center"
                        >
                          <div
                            class="col-md-4"
                          >
                            <h5>
                              Shop
                            </h5>
                            <p>
                              You can use the web app to add/remove item from a shopping experience.
                            </p>
                          </div>
                          <div
                            class="col-md-4"
                          >
                            <h5>
                              Manage Item
                            </h5>
                            <p>
                              You can manage item you add. YOu can also delete an item with a very simple user experience.
                            </p>
                          </div>
                          <div
                            class="col-md-4"
                          >
                            <h5>
                              Transaction Summary
                            </h5>
                            <p>
                              Transaction summary of item purchase can not be easier.
                            </p>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "didError": false,
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "expirationTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "interactionThreadID": 12,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextExpirationTimeToWorkOn": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "timeoutHandle": -1,
                },
                "tag": 3,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "children": <_default />,
                        }
                      }
                    />,
                  },
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": null,
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": null,
                },
              },
              "pendingProps": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "children": <_default />,
                },
              },
              "ref": null,
              "return": FiberNode {
                "_debugID": 47,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": FiberNode {
                  "_debugID": 47,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": [Circular],
                  "child": null,
                  "childExpirationTime": 0,
                  "effectTag": 0,
                  "elementType": null,
                  "expirationTime": 1073741823,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": null,
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": Object {
                    "containerInfo": <div>
                      <div>
                        <div
                          class="jumbotron text-center"
                        >
                          <h1>
                            Grocery Listify
                          </h1>
                          <p>
                            Grocery Store Management Made easy with
                             
                          </p>
                        </div>
                        <div
                          class="container home"
                        >
                          <div
                            class="row text-center"
                          >
                            <div
                              class="col-md-4"
                            >
                              <h5>
                                Shop
                              </h5>
                              <p>
                                You can use the web app to add/remove item from a shopping experience.
                              </p>
                            </div>
                            <div
                              class="col-md-4"
                            >
                              <h5>
                                Manage Item
                              </h5>
                              <p>
                                You can manage item you add. YOu can also delete an item with a very simple user experience.
                              </p>
                            </div>
                            <div
                              class="col-md-4"
                            >
                              <h5>
                                Transaction Summary
                              </h5>
                              <p>
                                Transaction summary of item purchase can not be easier.
                              </p>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>,
                    "context": Object {},
                    "current": [Circular],
                    "didError": false,
                    "earliestPendingTime": 0,
                    "earliestSuspendedTime": 0,
                    "expirationTime": 0,
                    "finishedWork": null,
                    "firstBatch": null,
                    "hydrate": false,
                    "interactionThreadID": 12,
                    "latestPendingTime": 0,
                    "latestPingedTime": 0,
                    "latestSuspendedTime": 0,
                    "memoizedInteractions": Set {},
                    "nextExpirationTimeToWorkOn": 0,
                    "nextScheduledRoot": null,
                    "pendingChildren": null,
                    "pendingCommitExpirationTime": 0,
                    "pendingContext": null,
                    "pendingInteractionMap": Map {},
                    "timeoutHandle": -1,
                  },
                  "tag": 3,
                  "treeBaseDuration": 0,
                  "type": null,
                  "updateQueue": Object {
                    "baseState": null,
                    "firstCapturedEffect": null,
                    "firstCapturedUpdate": null,
                    "firstEffect": null,
                    "firstUpdate": Object {
                      "callback": null,
                      "expirationTime": 1073741823,
                      "next": null,
                      "nextEffect": null,
                      "payload": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "children": <_default />,
                            }
                          }
                        />,
                      },
                      "tag": 0,
                    },
                    "lastCapturedEffect": null,
                    "lastCapturedUpdate": null,
                    "lastEffect": null,
                    "lastUpdate": Object {
                      "callback": null,
                      "expirationTime": 1073741823,
                      "next": null,
                      "nextEffect": null,
                      "payload": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "children": <_default />,
                            }
                          }
                        />,
                      },
                      "tag": 0,
                    },
                  },
                },
                "child": [Circular],
                "childExpirationTime": 0,
                "effectTag": 32,
                "elementType": null,
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": null,
                "memoizedState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                      Object {
                        "children": <_default />,
                      }
                    }
                  />,
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div>
                      <div
                        class="jumbotron text-center"
                      >
                        <h1>
                          Grocery Listify
                        </h1>
                        <p>
                          Grocery Store Management Made easy with
                           
                        </p>
                      </div>
                      <div
                        class="container home"
                      >
                        <div
                          class="row text-center"
                        >
                          <div
                            class="col-md-4"
                          >
                            <h5>
                              Shop
                            </h5>
                            <p>
                              You can use the web app to add/remove item from a shopping experience.
                            </p>
                          </div>
                          <div
                            class="col-md-4"
                          >
                            <h5>
                              Manage Item
                            </h5>
                            <p>
                              You can manage item you add. YOu can also delete an item with a very simple user experience.
                            </p>
                          </div>
                          <div
                            class="col-md-4"
                          >
                            <h5>
                              Transaction Summary
                            </h5>
                            <p>
                              Transaction summary of item purchase can not be easier.
                            </p>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "didError": false,
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "expirationTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "interactionThreadID": 12,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextExpirationTimeToWorkOn": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "timeoutHandle": -1,
                },
                "tag": 3,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "children": <_default />,
                        }
                      }
                    />,
                  },
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": null,
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": null,
                },
              },
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": WrapperComponent {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "children": <_default />,
                  },
                },
                "refs": Object {},
                "state": Object {
                  "context": null,
                  "mount": true,
                  "props": Object {
                    "children": <_default />,
                  },
                },
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": null,
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": BrowserRouter {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "history": Object {
                "action": "POP",
                "block": [Function],
                "createHref": [Function],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "push": [Function],
                "replace": [Function],
              },
              "props": Object {
                "children": <_default />,
              },
              "refs": Object {},
              "state": null,
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 1,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": [Circular],
          "tag": 1,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "_reactInternalInstance": Object {},
        "context": Object {
          "router": undefined,
        },
        "props": Object {
          "children": <_default />,
          "history": Object {
            "action": "POP",
            "block": [Function],
            "createHref": [Function],
            "go": [Function],
            "goBack": [Function],
            "goForward": [Function],
            "length": 1,
            "listen": [Function],
            "location": Object {
              "hash": "",
              "pathname": "/",
              "search": "",
              "state": undefined,
            },
            "push": [Function],
            "replace": [Function],
          },
        },
        "refs": Object {},
        "state": Object {
          "match": Object {
            "isExact": true,
            "params": Object {},
            "path": "/",
            "url": "/",
          },
        },
        "unlisten": [Function],
        "updater": Object {
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
        },
      },
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <_default />,
        "history": Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {},
        "ref": null,
        "rendered": Object {
          "instance": <div>
            <div
              class="jumbotron text-center"
            >
              <h1>
                Grocery Listify
              </h1>
              <p>
                Grocery Store Management Made easy with
                 
              </p>
            </div>
            <div
              class="container home"
            >
              <div
                class="row text-center"
              >
                <div
                  class="col-md-4"
                >
                  <h5>
                    Shop
                  </h5>
                  <p>
                    You can use the web app to add/remove item from a shopping experience.
                  </p>
                </div>
                <div
                  class="col-md-4"
                >
                  <h5>
                    Manage Item
                  </h5>
                  <p>
                    You can manage item you add. YOu can also delete an item with a very simple user experience.
                  </p>
                </div>
                <div
                  class="col-md-4"
                >
                  <h5>
                    Transaction Summary
                  </h5>
                  <p>
                    Transaction summary of item purchase can not be easier.
                  </p>
                </div>
              </div>
            </div>
          </div>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="jumbotron text-center"
              >
                <h1>
                  Grocery Listify
                </h1>
                <p>
                  Grocery Store Management Made easy with
                   
                  <FontAwesomeIcon
                    border={false}
                    className=""
                    fixedWidth={false}
                    flip={null}
                    icon="heart"
                    inverse={false}
                    listItem={false}
                    mask={null}
                    pull={null}
                    pulse={false}
                    rotation={null}
                    size={null}
                    spin={false}
                    symbol={false}
                    title=""
                    transform={null}
                  />
                </p>
              </div>,
              <div
                className="container home"
              >
                <div
                  className="row text-center"
                >
                  <div
                    className="col-md-4"
                  >
                    <FontAwesomeIcon
                      border={false}
                      className=""
                      fixedWidth={false}
                      flip={null}
                      icon="shopping-bag"
                      inverse={false}
                      listItem={false}
                      mask={null}
                      pull={null}
                      pulse={false}
                      rotation={null}
                      size={null}
                      spin={false}
                      symbol={false}
                      title=""
                      transform={null}
                    />
                    <h5>
                      Shop
                    </h5>
                    <p>
                      You can use the web app to add/remove item from a shopping experience.
                    </p>
                  </div>
                  <div
                    className="col-md-4"
                  >
                    <FontAwesomeIcon
                      border={false}
                      className=""
                      fixedWidth={false}
                      flip={null}
                      icon="briefcase"
                      inverse={false}
                      listItem={false}
                      mask={null}
                      pull={null}
                      pulse={false}
                      rotation={null}
                      size={null}
                      spin={false}
                      symbol={false}
                      title=""
                      transform={null}
                    />
                    <h5>
                      Manage Item
                    </h5>
                    <p>
                      You can manage item you add. YOu can also delete an item with a very simple user experience.
                    </p>
                  </div>
                  <div
                    className="col-md-4"
                  >
                    <FontAwesomeIcon
                      border={false}
                      className=""
                      fixedWidth={false}
                      flip={null}
                      icon="chart-line"
                      inverse={false}
                      listItem={false}
                      mask={null}
                      pull={null}
                      pulse={false}
                      rotation={null}
                      size={null}
                      spin={false}
                      symbol={false}
                      title=""
                      transform={null}
                    />
                    <h5>
                      Transaction Summary
                    </h5>
                    <p>
                      Transaction summary of item purchase can not be easier.
                    </p>
                  </div>
                </div>
              </div>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": <div
                class="jumbotron text-center"
              >
                <h1>
                  Grocery Listify
                </h1>
                <p>
                  Grocery Store Management Made easy with
                   
                </p>
              </div>,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <h1>
                    Grocery Listify
                  </h1>,
                  <p>
                    Grocery Store Management Made easy with
                     
                    <FontAwesomeIcon
                      border={false}
                      className=""
                      fixedWidth={false}
                      flip={null}
                      icon="heart"
                      inverse={false}
                      listItem={false}
                      mask={null}
                      pull={null}
                      pulse={false}
                      rotation={null}
                      size={null}
                      spin={false}
                      symbol={false}
                      title=""
                      transform={null}
                    />
                  </p>,
                ],
                "className": "jumbotron text-center",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": <h1>
                    Grocery Listify
                  </h1>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Grocery Listify",
                  },
                  "ref": null,
                  "rendered": Array [
                    "Grocery Listify",
                  ],
                  "type": "h1",
                },
                Object {
                  "instance": <p>
                    Grocery Store Management Made easy with
                     
                  </p>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      "Grocery Store Management Made easy with",
                      " ",
                      <FontAwesomeIcon
                        border={false}
                        className=""
                        fixedWidth={false}
                        flip={null}
                        icon="heart"
                        inverse={false}
                        listItem={false}
                        mask={null}
                        pull={null}
                        pulse={false}
                        rotation={null}
                        size={null}
                        spin={false}
                        symbol={false}
                        title=""
                        transform={null}
                      />,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    "Grocery Store Management Made easy with",
                    " ",
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "border": false,
                        "className": "",
                        "fixedWidth": false,
                        "flip": null,
                        "icon": "heart",
                        "inverse": false,
                        "listItem": false,
                        "mask": null,
                        "pull": null,
                        "pulse": false,
                        "rotation": null,
                        "size": null,
                        "spin": false,
                        "symbol": false,
                        "title": "",
                        "transform": null,
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                  ],
                  "type": "p",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": <div
                class="container home"
              >
                <div
                  class="row text-center"
                >
                  <div
                    class="col-md-4"
                  >
                    <h5>
                      Shop
                    </h5>
                    <p>
                      You can use the web app to add/remove item from a shopping experience.
                    </p>
                  </div>
                  <div
                    class="col-md-4"
                  >
                    <h5>
                      Manage Item
                    </h5>
                    <p>
                      You can manage item you add. YOu can also delete an item with a very simple user experience.
                    </p>
                  </div>
                  <div
                    class="col-md-4"
                  >
                    <h5>
                      Transaction Summary
                    </h5>
                    <p>
                      Transaction summary of item purchase can not be easier.
                    </p>
                  </div>
                </div>
              </div>,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <div
                  className="row text-center"
                >
                  <div
                    className="col-md-4"
                  >
                    <FontAwesomeIcon
                      border={false}
                      className=""
                      fixedWidth={false}
                      flip={null}
                      icon="shopping-bag"
                      inverse={false}
                      listItem={false}
                      mask={null}
                      pull={null}
                      pulse={false}
                      rotation={null}
                      size={null}
                      spin={false}
                      symbol={false}
                      title=""
                      transform={null}
                    />
                    <h5>
                      Shop
                    </h5>
                    <p>
                      You can use the web app to add/remove item from a shopping experience.
                    </p>
                  </div>
                  <div
                    className="col-md-4"
                  >
                    <FontAwesomeIcon
                      border={false}
                      className=""
                      fixedWidth={false}
                      flip={null}
                      icon="briefcase"
                      inverse={false}
                      listItem={false}
                      mask={null}
                      pull={null}
                      pulse={false}
                      rotation={null}
                      size={null}
                      spin={false}
                      symbol={false}
                      title=""
                      transform={null}
                    />
                    <h5>
                      Manage Item
                    </h5>
                    <p>
                      You can manage item you add. YOu can also delete an item with a very simple user experience.
                    </p>
                  </div>
                  <div
                    className="col-md-4"
                  >
                    <FontAwesomeIcon
                      border={false}
                      className=""
                      fixedWidth={false}
                      flip={null}
                      icon="chart-line"
                      inverse={false}
                      listItem={false}
                      mask={null}
                      pull={null}
                      pulse={false}
                      rotation={null}
                      size={null}
                      spin={false}
                      symbol={false}
                      title=""
                      transform={null}
                    />
                    <h5>
                      Transaction Summary
                    </h5>
                    <p>
                      Transaction summary of item purchase can not be easier.
                    </p>
                  </div>
                </div>,
                "className": "container home",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": <div
                    class="row text-center"
                  >
                    <div
                      class="col-md-4"
                    >
                      <h5>
                        Shop
                      </h5>
                      <p>
                        You can use the web app to add/remove item from a shopping experience.
                      </p>
                    </div>
                    <div
                      class="col-md-4"
                    >
                      <h5>
                        Manage Item
                      </h5>
                      <p>
                        You can manage item you add. YOu can also delete an item with a very simple user experience.
                      </p>
                    </div>
                    <div
                      class="col-md-4"
                    >
                      <h5>
                        Transaction Summary
                      </h5>
                      <p>
                        Transaction summary of item purchase can not be easier.
                      </p>
                    </div>
                  </div>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <div
                        className="col-md-4"
                      >
                        <FontAwesomeIcon
                          border={false}
                          className=""
                          fixedWidth={false}
                          flip={null}
                          icon="shopping-bag"
                          inverse={false}
                          listItem={false}
                          mask={null}
                          pull={null}
                          pulse={false}
                          rotation={null}
                          size={null}
                          spin={false}
                          symbol={false}
                          title=""
                          transform={null}
                        />
                        <h5>
                          Shop
                        </h5>
                        <p>
                          You can use the web app to add/remove item from a shopping experience.
                        </p>
                      </div>,
                      <div
                        className="col-md-4"
                      >
                        <FontAwesomeIcon
                          border={false}
                          className=""
                          fixedWidth={false}
                          flip={null}
                          icon="briefcase"
                          inverse={false}
                          listItem={false}
                          mask={null}
                          pull={null}
                          pulse={false}
                          rotation={null}
                          size={null}
                          spin={false}
                          symbol={false}
                          title=""
                          transform={null}
                        />
                        <h5>
                          Manage Item
                        </h5>
                        <p>
                          You can manage item you add. YOu can also delete an item with a very simple user experience.
                        </p>
                      </div>,
                      <div
                        className="col-md-4"
                      >
                        <FontAwesomeIcon
                          border={false}
                          className=""
                          fixedWidth={false}
                          flip={null}
                          icon="chart-line"
                          inverse={false}
                          listItem={false}
                          mask={null}
                          pull={null}
                          pulse={false}
                          rotation={null}
                          size={null}
                          spin={false}
                          symbol={false}
                          title=""
                          transform={null}
                        />
                        <h5>
                          Transaction Summary
                        </h5>
                        <p>
                          Transaction summary of item purchase can not be easier.
                        </p>
                      </div>,
                    ],
                    "className": "row text-center",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": <div
                        class="col-md-4"
                      >
                        <h5>
                          Shop
                        </h5>
                        <p>
                          You can use the web app to add/remove item from a shopping experience.
                        </p>
                      </div>,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          <FontAwesomeIcon
                            border={false}
                            className=""
                            fixedWidth={false}
                            flip={null}
                            icon="shopping-bag"
                            inverse={false}
                            listItem={false}
                            mask={null}
                            pull={null}
                            pulse={false}
                            rotation={null}
                            size={null}
                            spin={false}
                            symbol={false}
                            title=""
                            transform={null}
                          />,
                          <h5>
                            Shop
                          </h5>,
                          <p>
                            You can use the web app to add/remove item from a shopping experience.
                          </p>,
                        ],
                        "className": "col-md-4",
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "function",
                          "props": Object {
                            "border": false,
                            "className": "",
                            "fixedWidth": false,
                            "flip": null,
                            "icon": "shopping-bag",
                            "inverse": false,
                            "listItem": false,
                            "mask": null,
                            "pull": null,
                            "pulse": false,
                            "rotation": null,
                            "size": null,
                            "spin": false,
                            "symbol": false,
                            "title": "",
                            "transform": null,
                          },
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                        Object {
                          "instance": <h5>
                            Shop
                          </h5>,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "Shop",
                          },
                          "ref": null,
                          "rendered": Array [
                            "Shop",
                          ],
                          "type": "h5",
                        },
                        Object {
                          "instance": <p>
                            You can use the web app to add/remove item from a shopping experience.
                          </p>,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "You can use the web app to add/remove item from a shopping experience.",
                          },
                          "ref": null,
                          "rendered": Array [
                            "You can use the web app to add/remove item from a shopping experience.",
                          ],
                          "type": "p",
                        },
                      ],
                      "type": "div",
                    },
                    Object {
                      "instance": <div
                        class="col-md-4"
                      >
                        <h5>
                          Manage Item
                        </h5>
                        <p>
                          You can manage item you add. YOu can also delete an item with a very simple user experience.
                        </p>
                      </div>,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          <FontAwesomeIcon
                            border={false}
                            className=""
                            fixedWidth={false}
                            flip={null}
                            icon="briefcase"
                            inverse={false}
                            listItem={false}
                            mask={null}
                            pull={null}
                            pulse={false}
                            rotation={null}
                            size={null}
                            spin={false}
                            symbol={false}
                            title=""
                            transform={null}
                          />,
                          <h5>
                            Manage Item
                          </h5>,
                          <p>
                            You can manage item you add. YOu can also delete an item with a very simple user experience.
                          </p>,
                        ],
                        "className": "col-md-4",
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "function",
                          "props": Object {
                            "border": false,
                            "className": "",
                            "fixedWidth": false,
                            "flip": null,
                            "icon": "briefcase",
                            "inverse": false,
                            "listItem": false,
                            "mask": null,
                            "pull": null,
                            "pulse": false,
                            "rotation": null,
                            "size": null,
                            "spin": false,
                            "symbol": false,
                            "title": "",
                            "transform": null,
                          },
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                        Object {
                          "instance": <h5>
                            Manage Item
                          </h5>,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "Manage Item",
                          },
                          "ref": null,
                          "rendered": Array [
                            "Manage Item",
                          ],
                          "type": "h5",
                        },
                        Object {
                          "instance": <p>
                            You can manage item you add. YOu can also delete an item with a very simple user experience.
                          </p>,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "You can manage item you add. YOu can also delete an item with a very simple user experience.",
                          },
                          "ref": null,
                          "rendered": Array [
                            "You can manage item you add. YOu can also delete an item with a very simple user experience.",
                          ],
                          "type": "p",
                        },
                      ],
                      "type": "div",
                    },
                    Object {
                      "instance": <div
                        class="col-md-4"
                      >
                        <h5>
                          Transaction Summary
                        </h5>
                        <p>
                          Transaction summary of item purchase can not be easier.
                        </p>
                      </div>,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          <FontAwesomeIcon
                            border={false}
                            className=""
                            fixedWidth={false}
                            flip={null}
                            icon="chart-line"
                            inverse={false}
                            listItem={false}
                            mask={null}
                            pull={null}
                            pulse={false}
                            rotation={null}
                            size={null}
                            spin={false}
                            symbol={false}
                            title=""
                            transform={null}
                          />,
                          <h5>
                            Transaction Summary
                          </h5>,
                          <p>
                            Transaction summary of item purchase can not be easier.
                          </p>,
                        ],
                        "className": "col-md-4",
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "function",
                          "props": Object {
                            "border": false,
                            "className": "",
                            "fixedWidth": false,
                            "flip": null,
                            "icon": "chart-line",
                            "inverse": false,
                            "listItem": false,
                            "mask": null,
                            "pull": null,
                            "pulse": false,
                            "rotation": null,
                            "size": null,
                            "spin": false,
                            "symbol": false,
                            "title": "",
                            "transform": null,
                          },
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                        Object {
                          "instance": <h5>
                            Transaction Summary
                          </h5>,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "Transaction Summary",
                          },
                          "ref": null,
                          "rendered": Array [
                            "Transaction Summary",
                          ],
                          "type": "h5",
                        },
                        Object {
                          "instance": <p>
                            Transaction summary of item purchase can not be easier.
                          </p>,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "Transaction summary of item purchase can not be easier.",
                          },
                          "ref": null,
                          "rendered": Array [
                            "Transaction summary of item purchase can not be easier.",
                          ],
                          "type": "p",
                        },
                      ],
                      "type": "div",
                    },
                  ],
                  "type": "div",
                },
              ],
              "type": "div",
            },
          ],
          "type": "div",
        },
        "type": [Function],
      },
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": BrowserRouter {
        "_reactInternalFiber": FiberNode {
          "_debugID": 50,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": FiberNode {
            "_debugID": 49,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "effectTag": 1,
            "elementType": [Function],
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "children": <_default />,
              },
            },
            "memoizedState": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "children": <_default />,
              },
            },
            "mode": 0,
            "nextEffect": FiberNode {
              "_debugID": 47,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": FiberNode {
                "_debugID": 47,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": [Circular],
                "child": null,
                "childExpirationTime": 0,
                "effectTag": 0,
                "elementType": null,
                "expirationTime": 1073741823,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div>
                      <div
                        class="jumbotron text-center"
                      >
                        <h1>
                          Grocery Listify
                        </h1>
                        <p>
                          Grocery Store Management Made easy with
                           
                        </p>
                      </div>
                      <div
                        class="container home"
                      >
                        <div
                          class="row text-center"
                        >
                          <div
                            class="col-md-4"
                          >
                            <h5>
                              Shop
                            </h5>
                            <p>
                              You can use the web app to add/remove item from a shopping experience.
                            </p>
                          </div>
                          <div
                            class="col-md-4"
                          >
                            <h5>
                              Manage Item
                            </h5>
                            <p>
                              You can manage item you add. YOu can also delete an item with a very simple user experience.
                            </p>
                          </div>
                          <div
                            class="col-md-4"
                          >
                            <h5>
                              Transaction Summary
                            </h5>
                            <p>
                              Transaction summary of item purchase can not be easier.
                            </p>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "didError": false,
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "expirationTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "interactionThreadID": 12,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextExpirationTimeToWorkOn": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "timeoutHandle": -1,
                },
                "tag": 3,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "children": <_default />,
                          }
                        }
                      />,
                    },
                    "tag": 0,
                  },
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "children": <_default />,
                          }
                        }
                      />,
                    },
                    "tag": 0,
                  },
                },
              },
              "child": [Circular],
              "childExpirationTime": 0,
              "effectTag": 32,
              "elementType": null,
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "children": <_default />,
                    }
                  }
                />,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div>
                    <div
                      class="jumbotron text-center"
                    >
                      <h1>
                        Grocery Listify
                      </h1>
                      <p>
                        Grocery Store Management Made easy with
                         
                      </p>
                    </div>
                    <div
                      class="container home"
                    >
                      <div
                        class="row text-center"
                      >
                        <div
                          class="col-md-4"
                        >
                          <h5>
                            Shop
                          </h5>
                          <p>
                            You can use the web app to add/remove item from a shopping experience.
                          </p>
                        </div>
                        <div
                          class="col-md-4"
                        >
                          <h5>
                            Manage Item
                          </h5>
                          <p>
                            You can manage item you add. YOu can also delete an item with a very simple user experience.
                          </p>
                        </div>
                        <div
                          class="col-md-4"
                        >
                          <h5>
                            Transaction Summary
                          </h5>
                          <p>
                            Transaction summary of item purchase can not be easier.
                          </p>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 12,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                      Object {
                        "children": <_default />,
                      }
                    }
                  />,
                },
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": null,
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": null,
              },
            },
            "pendingProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "children": <_default />,
              },
            },
            "ref": null,
            "return": FiberNode {
              "_debugID": 47,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": FiberNode {
                "_debugID": 47,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": [Circular],
                "child": null,
                "childExpirationTime": 0,
                "effectTag": 0,
                "elementType": null,
                "expirationTime": 1073741823,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div>
                      <div
                        class="jumbotron text-center"
                      >
                        <h1>
                          Grocery Listify
                        </h1>
                        <p>
                          Grocery Store Management Made easy with
                           
                        </p>
                      </div>
                      <div
                        class="container home"
                      >
                        <div
                          class="row text-center"
                        >
                          <div
                            class="col-md-4"
                          >
                            <h5>
                              Shop
                            </h5>
                            <p>
                              You can use the web app to add/remove item from a shopping experience.
                            </p>
                          </div>
                          <div
                            class="col-md-4"
                          >
                            <h5>
                              Manage Item
                            </h5>
                            <p>
                              You can manage item you add. YOu can also delete an item with a very simple user experience.
                            </p>
                          </div>
                          <div
                            class="col-md-4"
                          >
                            <h5>
                              Transaction Summary
                            </h5>
                            <p>
                              Transaction summary of item purchase can not be easier.
                            </p>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "didError": false,
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "expirationTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "interactionThreadID": 12,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextExpirationTimeToWorkOn": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "timeoutHandle": -1,
                },
                "tag": 3,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "children": <_default />,
                          }
                        }
                      />,
                    },
                    "tag": 0,
                  },
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "children": <_default />,
                          }
                        }
                      />,
                    },
                    "tag": 0,
                  },
                },
              },
              "child": [Circular],
              "childExpirationTime": 0,
              "effectTag": 32,
              "elementType": null,
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "children": <_default />,
                    }
                  }
                />,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div>
                    <div
                      class="jumbotron text-center"
                    >
                      <h1>
                        Grocery Listify
                      </h1>
                      <p>
                        Grocery Store Management Made easy with
                         
                      </p>
                    </div>
                    <div
                      class="container home"
                    >
                      <div
                        class="row text-center"
                      >
                        <div
                          class="col-md-4"
                        >
                          <h5>
                            Shop
                          </h5>
                          <p>
                            You can use the web app to add/remove item from a shopping experience.
                          </p>
                        </div>
                        <div
                          class="col-md-4"
                        >
                          <h5>
                            Manage Item
                          </h5>
                          <p>
                            You can manage item you add. YOu can also delete an item with a very simple user experience.
                          </p>
                        </div>
                        <div
                          class="col-md-4"
                        >
                          <h5>
                            Transaction Summary
                          </h5>
                          <p>
                            Transaction summary of item purchase can not be easier.
                          </p>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 12,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                      Object {
                        "children": <_default />,
                      }
                    }
                  />,
                },
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": null,
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": null,
              },
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": WrapperComponent {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "children": <_default />,
                },
              },
              "refs": Object {},
              "state": Object {
                "context": null,
                "mount": true,
                "props": Object {
                  "children": <_default />,
                },
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 1,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": FiberNode {
            "_debugID": 51,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": FiberNode {
              "_debugID": 52,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 53,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 54,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 56,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": null,
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "elementType": "h1",
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "Grocery Listify",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": "Grocery Listify",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": FiberNode {
                      "_debugID": 57,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 58,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": null,
                        "childExpirationTime": 0,
                        "effectTag": 0,
                        "elementType": null,
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": "Grocery Store Management Made easy with",
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": "Grocery Store Management Made easy with",
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": FiberNode {
                          "_debugID": 59,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childExpirationTime": 0,
                          "effectTag": 0,
                          "elementType": null,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 1,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": " ",
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": " ",
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": FiberNode {
                            "_debugID": 60,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childExpirationTime": 0,
                            "effectTag": 1,
                            "elementType": [Function],
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 2,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "border": false,
                              "className": "",
                              "fixedWidth": false,
                              "flip": null,
                              "icon": "heart",
                              "inverse": false,
                              "listItem": false,
                              "mask": null,
                              "pull": null,
                              "pulse": false,
                              "rotation": null,
                              "size": null,
                              "spin": false,
                              "symbol": false,
                              "title": "",
                              "transform": null,
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "border": false,
                              "className": "",
                              "fixedWidth": false,
                              "flip": null,
                              "icon": "heart",
                              "inverse": false,
                              "listItem": false,
                              "mask": null,
                              "pull": null,
                              "pulse": false,
                              "rotation": null,
                              "size": null,
                              "spin": false,
                              "symbol": false,
                              "title": "",
                              "transform": null,
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": null,
                            "tag": 0,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "stateNode":  ,
                          "tag": 6,
                          "treeBaseDuration": 0,
                          "type": null,
                          "updateQueue": null,
                        },
                        "stateNode": Grocery Store Management Made easy with,
                        "tag": 6,
                        "treeBaseDuration": 0,
                        "type": null,
                        "updateQueue": null,
                      },
                      "childExpirationTime": 0,
                      "effectTag": 0,
                      "elementType": "p",
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 1,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": Array [
                          "Grocery Store Management Made easy with",
                          " ",
                          <FontAwesomeIcon
                            border={false}
                            className=""
                            fixedWidth={false}
                            flip={null}
                            icon="heart"
                            inverse={false}
                            listItem={false}
                            mask={null}
                            pull={null}
                            pulse={false}
                            rotation={null}
                            size={null}
                            spin={false}
                            symbol={false}
                            title=""
                            transform={null}
                          />,
                        ],
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": Array [
                          "Grocery Store Management Made easy with",
                          " ",
                          <FontAwesomeIcon
                            border={false}
                            className=""
                            fixedWidth={false}
                            flip={null}
                            icon="heart"
                            inverse={false}
                            listItem={false}
                            mask={null}
                            pull={null}
                            pulse={false}
                            rotation={null}
                            size={null}
                            spin={false}
                            symbol={false}
                            title=""
                            transform={null}
                          />,
                        ],
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": <p>
                        Grocery Store Management Made easy with
                         
                      </p>,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "p",
                      "updateQueue": null,
                    },
                    "stateNode": <h1>
                      Grocery Listify
                    </h1>,
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": "h1",
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "effectTag": 0,
                  "elementType": "div",
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <h1>
                        Grocery Listify
                      </h1>,
                      <p>
                        Grocery Store Management Made easy with
                         
                        <FontAwesomeIcon
                          border={false}
                          className=""
                          fixedWidth={false}
                          flip={null}
                          icon="heart"
                          inverse={false}
                          listItem={false}
                          mask={null}
                          pull={null}
                          pulse={false}
                          rotation={null}
                          size={null}
                          spin={false}
                          symbol={false}
                          title=""
                          transform={null}
                        />
                      </p>,
                    ],
                    "className": "jumbotron text-center",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": Array [
                      <h1>
                        Grocery Listify
                      </h1>,
                      <p>
                        Grocery Store Management Made easy with
                         
                        <FontAwesomeIcon
                          border={false}
                          className=""
                          fixedWidth={false}
                          flip={null}
                          icon="heart"
                          inverse={false}
                          listItem={false}
                          mask={null}
                          pull={null}
                          pulse={false}
                          rotation={null}
                          size={null}
                          spin={false}
                          symbol={false}
                          title=""
                          transform={null}
                        />
                      </p>,
                    ],
                    "className": "jumbotron text-center",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": FiberNode {
                    "_debugID": 55,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 61,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 62,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 65,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childExpirationTime": 0,
                          "effectTag": 1,
                          "elementType": [Function],
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "border": false,
                            "className": "",
                            "fixedWidth": false,
                            "flip": null,
                            "icon": "shopping-bag",
                            "inverse": false,
                            "listItem": false,
                            "mask": null,
                            "pull": null,
                            "pulse": false,
                            "rotation": null,
                            "size": null,
                            "spin": false,
                            "symbol": false,
                            "title": "",
                            "transform": null,
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "border": false,
                            "className": "",
                            "fixedWidth": false,
                            "flip": null,
                            "icon": "shopping-bag",
                            "inverse": false,
                            "listItem": false,
                            "mask": null,
                            "pull": null,
                            "pulse": false,
                            "rotation": null,
                            "size": null,
                            "spin": false,
                            "symbol": false,
                            "title": "",
                            "transform": null,
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": FiberNode {
                            "_debugID": 66,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childExpirationTime": 0,
                            "effectTag": 0,
                            "elementType": "h5",
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 1,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": "Shop",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": "Shop",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": FiberNode {
                              "_debugID": 67,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": null,
                              "childExpirationTime": 0,
                              "effectTag": 0,
                              "elementType": "p",
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": null,
                              "index": 2,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": "You can use the web app to add/remove item from a shopping experience.",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": "You can use the web app to add/remove item from a shopping experience.",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": <p>
                                You can use the web app to add/remove item from a shopping experience.
                              </p>,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "p",
                              "updateQueue": null,
                            },
                            "stateNode": <h5>
                              Shop
                            </h5>,
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": "h5",
                            "updateQueue": null,
                          },
                          "stateNode": null,
                          "tag": 0,
                          "treeBaseDuration": 0,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "childExpirationTime": 0,
                        "effectTag": 0,
                        "elementType": "div",
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": Array [
                            <FontAwesomeIcon
                              border={false}
                              className=""
                              fixedWidth={false}
                              flip={null}
                              icon="shopping-bag"
                              inverse={false}
                              listItem={false}
                              mask={null}
                              pull={null}
                              pulse={false}
                              rotation={null}
                              size={null}
                              spin={false}
                              symbol={false}
                              title=""
                              transform={null}
                            />,
                            <h5>
                              Shop
                            </h5>,
                            <p>
                              You can use the web app to add/remove item from a shopping experience.
                            </p>,
                          ],
                          "className": "col-md-4",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": Array [
                            <FontAwesomeIcon
                              border={false}
                              className=""
                              fixedWidth={false}
                              flip={null}
                              icon="shopping-bag"
                              inverse={false}
                              listItem={false}
                              mask={null}
                              pull={null}
                              pulse={false}
                              rotation={null}
                              size={null}
                              spin={false}
                              symbol={false}
                              title=""
                              transform={null}
                            />,
                            <h5>
                              Shop
                            </h5>,
                            <p>
                              You can use the web app to add/remove item from a shopping experience.
                            </p>,
                          ],
                          "className": "col-md-4",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": FiberNode {
                          "_debugID": 63,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 68,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childExpirationTime": 0,
                            "effectTag": 1,
                            "elementType": [Function],
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "border": false,
                              "className": "",
                              "fixedWidth": false,
                              "flip": null,
                              "icon": "briefcase",
                              "inverse": false,
                              "listItem": false,
                              "mask": null,
                              "pull": null,
                              "pulse": false,
                              "rotation": null,
                              "size": null,
                              "spin": false,
                              "symbol": false,
                              "title": "",
                              "transform": null,
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "border": false,
                              "className": "",
                              "fixedWidth": false,
                              "flip": null,
                              "icon": "briefcase",
                              "inverse": false,
                              "listItem": false,
                              "mask": null,
                              "pull": null,
                              "pulse": false,
                              "rotation": null,
                              "size": null,
                              "spin": false,
                              "symbol": false,
                              "title": "",
                              "transform": null,
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": FiberNode {
                              "_debugID": 69,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": null,
                              "childExpirationTime": 0,
                              "effectTag": 0,
                              "elementType": "h5",
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": null,
                              "index": 1,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": "Manage Item",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": "Manage Item",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": FiberNode {
                                "_debugID": 70,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": null,
                                "childExpirationTime": 0,
                                "effectTag": 0,
                                "elementType": "p",
                                "expirationTime": 0,
                                "firstContextDependency": null,
                                "firstEffect": null,
                                "index": 2,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": "You can manage item you add. YOu can also delete an item with a very simple user experience.",
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "children": "You can manage item you add. YOu can also delete an item with a very simple user experience.",
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": <p>
                                  You can manage item you add. YOu can also delete an item with a very simple user experience.
                                </p>,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "p",
                                "updateQueue": null,
                              },
                              "stateNode": <h5>
                                Manage Item
                              </h5>,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "h5",
                              "updateQueue": null,
                            },
                            "stateNode": null,
                            "tag": 0,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "childExpirationTime": 0,
                          "effectTag": 0,
                          "elementType": "div",
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 1,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": Array [
                              <FontAwesomeIcon
                                border={false}
                                className=""
                                fixedWidth={false}
                                flip={null}
                                icon="briefcase"
                                inverse={false}
                                listItem={false}
                                mask={null}
                                pull={null}
                                pulse={false}
                                rotation={null}
                                size={null}
                                spin={false}
                                symbol={false}
                                title=""
                                transform={null}
                              />,
                              <h5>
                                Manage Item
                              </h5>,
                              <p>
                                You can manage item you add. YOu can also delete an item with a very simple user experience.
                              </p>,
                            ],
                            "className": "col-md-4",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": Array [
                              <FontAwesomeIcon
                                border={false}
                                className=""
                                fixedWidth={false}
                                flip={null}
                                icon="briefcase"
                                inverse={false}
                                listItem={false}
                                mask={null}
                                pull={null}
                                pulse={false}
                                rotation={null}
                                size={null}
                                spin={false}
                                symbol={false}
                                title=""
                                transform={null}
                              />,
                              <h5>
                                Manage Item
                              </h5>,
                              <p>
                                You can manage item you add. YOu can also delete an item with a very simple user experience.
                              </p>,
                            ],
                            "className": "col-md-4",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": FiberNode {
                            "_debugID": 64,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": FiberNode {
                              "_debugID": 71,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": null,
                              "childExpirationTime": 0,
                              "effectTag": 1,
                              "elementType": [Function],
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "border": false,
                                "className": "",
                                "fixedWidth": false,
                                "flip": null,
                                "icon": "chart-line",
                                "inverse": false,
                                "listItem": false,
                                "mask": null,
                                "pull": null,
                                "pulse": false,
                                "rotation": null,
                                "size": null,
                                "spin": false,
                                "symbol": false,
                                "title": "",
                                "transform": null,
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "border": false,
                                "className": "",
                                "fixedWidth": false,
                                "flip": null,
                                "icon": "chart-line",
                                "inverse": false,
                                "listItem": false,
                                "mask": null,
                                "pull": null,
                                "pulse": false,
                                "rotation": null,
                                "size": null,
                                "spin": false,
                                "symbol": false,
                                "title": "",
                                "transform": null,
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": FiberNode {
                                "_debugID": 72,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": null,
                                "childExpirationTime": 0,
                                "effectTag": 0,
                                "elementType": "h5",
                                "expirationTime": 0,
                                "firstContextDependency": null,
                                "firstEffect": null,
                                "index": 1,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": "Transaction Summary",
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "children": "Transaction Summary",
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": FiberNode {
                                  "_debugID": 73,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": null,
                                  "childExpirationTime": 0,
                                  "effectTag": 0,
                                  "elementType": "p",
                                  "expirationTime": 0,
                                  "firstContextDependency": null,
                                  "firstEffect": null,
                                  "index": 2,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "children": "Transaction summary of item purchase can not be easier.",
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "children": "Transaction summary of item purchase can not be easier.",
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": <p>
                                    Transaction summary of item purchase can not be easier.
                                  </p>,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "p",
                                  "updateQueue": null,
                                },
                                "stateNode": <h5>
                                  Transaction Summary
                                </h5>,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "h5",
                                "updateQueue": null,
                              },
                              "stateNode": null,
                              "tag": 0,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": null,
                            },
                            "childExpirationTime": 0,
                            "effectTag": 0,
                            "elementType": "div",
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 2,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": Array [
                                <FontAwesomeIcon
                                  border={false}
                                  className=""
                                  fixedWidth={false}
                                  flip={null}
                                  icon="chart-line"
                                  inverse={false}
                                  listItem={false}
                                  mask={null}
                                  pull={null}
                                  pulse={false}
                                  rotation={null}
                                  size={null}
                                  spin={false}
                                  symbol={false}
                                  title=""
                                  transform={null}
                                />,
                                <h5>
                                  Transaction Summary
                                </h5>,
                                <p>
                                  Transaction summary of item purchase can not be easier.
                                </p>,
                              ],
                              "className": "col-md-4",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": Array [
                                <FontAwesomeIcon
                                  border={false}
                                  className=""
                                  fixedWidth={false}
                                  flip={null}
                                  icon="chart-line"
                                  inverse={false}
                                  listItem={false}
                                  mask={null}
                                  pull={null}
                                  pulse={false}
                                  rotation={null}
                                  size={null}
                                  spin={false}
                                  symbol={false}
                                  title=""
                                  transform={null}
                                />,
                                <h5>
                                  Transaction Summary
                                </h5>,
                                <p>
                                  Transaction summary of item purchase can not be easier.
                                </p>,
                              ],
                              "className": "col-md-4",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": <div
                              class="col-md-4"
                            >
                              <h5>
                                Transaction Summary
                              </h5>
                              <p>
                                Transaction summary of item purchase can not be easier.
                              </p>
                            </div>,
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": "div",
                            "updateQueue": null,
                          },
                          "stateNode": <div
                            class="col-md-4"
                          >
                            <h5>
                              Manage Item
                            </h5>
                            <p>
                              You can manage item you add. YOu can also delete an item with a very simple user experience.
                            </p>
                          </div>,
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": "div",
                          "updateQueue": null,
                        },
                        "stateNode": <div
                          class="col-md-4"
                        >
                          <h5>
                            Shop
                          </h5>
                          <p>
                            You can use the web app to add/remove item from a shopping experience.
                          </p>
                        </div>,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "childExpirationTime": 0,
                      "effectTag": 0,
                      "elementType": "div",
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": Array [
                          <div
                            className="col-md-4"
                          >
                            <FontAwesomeIcon
                              border={false}
                              className=""
                              fixedWidth={false}
                              flip={null}
                              icon="shopping-bag"
                              inverse={false}
                              listItem={false}
                              mask={null}
                              pull={null}
                              pulse={false}
                              rotation={null}
                              size={null}
                              spin={false}
                              symbol={false}
                              title=""
                              transform={null}
                            />
                            <h5>
                              Shop
                            </h5>
                            <p>
                              You can use the web app to add/remove item from a shopping experience.
                            </p>
                          </div>,
                          <div
                            className="col-md-4"
                          >
                            <FontAwesomeIcon
                              border={false}
                              className=""
                              fixedWidth={false}
                              flip={null}
                              icon="briefcase"
                              inverse={false}
                              listItem={false}
                              mask={null}
                              pull={null}
                              pulse={false}
                              rotation={null}
                              size={null}
                              spin={false}
                              symbol={false}
                              title=""
                              transform={null}
                            />
                            <h5>
                              Manage Item
                            </h5>
                            <p>
                              You can manage item you add. YOu can also delete an item with a very simple user experience.
                            </p>
                          </div>,
                          <div
                            className="col-md-4"
                          >
                            <FontAwesomeIcon
                              border={false}
                              className=""
                              fixedWidth={false}
                              flip={null}
                              icon="chart-line"
                              inverse={false}
                              listItem={false}
                              mask={null}
                              pull={null}
                              pulse={false}
                              rotation={null}
                              size={null}
                              spin={false}
                              symbol={false}
                              title=""
                              transform={null}
                            />
                            <h5>
                              Transaction Summary
                            </h5>
                            <p>
                              Transaction summary of item purchase can not be easier.
                            </p>
                          </div>,
                        ],
                        "className": "row text-center",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": Array [
                          <div
                            className="col-md-4"
                          >
                            <FontAwesomeIcon
                              border={false}
                              className=""
                              fixedWidth={false}
                              flip={null}
                              icon="shopping-bag"
                              inverse={false}
                              listItem={false}
                              mask={null}
                              pull={null}
                              pulse={false}
                              rotation={null}
                              size={null}
                              spin={false}
                              symbol={false}
                              title=""
                              transform={null}
                            />
                            <h5>
                              Shop
                            </h5>
                            <p>
                              You can use the web app to add/remove item from a shopping experience.
                            </p>
                          </div>,
                          <div
                            className="col-md-4"
                          >
                            <FontAwesomeIcon
                              border={false}
                              className=""
                              fixedWidth={false}
                              flip={null}
                              icon="briefcase"
                              inverse={false}
                              listItem={false}
                              mask={null}
                              pull={null}
                              pulse={false}
                              rotation={null}
                              size={null}
                              spin={false}
                              symbol={false}
                              title=""
                              transform={null}
                            />
                            <h5>
                              Manage Item
                            </h5>
                            <p>
                              You can manage item you add. YOu can also delete an item with a very simple user experience.
                            </p>
                          </div>,
                          <div
                            className="col-md-4"
                          >
                            <FontAwesomeIcon
                              border={false}
                              className=""
                              fixedWidth={false}
                              flip={null}
                              icon="chart-line"
                              inverse={false}
                              listItem={false}
                              mask={null}
                              pull={null}
                              pulse={false}
                              rotation={null}
                              size={null}
                              spin={false}
                              symbol={false}
                              title=""
                              transform={null}
                            />
                            <h5>
                              Transaction Summary
                            </h5>
                            <p>
                              Transaction summary of item purchase can not be easier.
                            </p>
                          </div>,
                        ],
                        "className": "row text-center",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": <div
                        class="row text-center"
                      >
                        <div
                          class="col-md-4"
                        >
                          <h5>
                            Shop
                          </h5>
                          <p>
                            You can use the web app to add/remove item from a shopping experience.
                          </p>
                        </div>
                        <div
                          class="col-md-4"
                        >
                          <h5>
                            Manage Item
                          </h5>
                          <p>
                            You can manage item you add. YOu can also delete an item with a very simple user experience.
                          </p>
                        </div>
                        <div
                          class="col-md-4"
                        >
                          <h5>
                            Transaction Summary
                          </h5>
                          <p>
                            Transaction summary of item purchase can not be easier.
                          </p>
                        </div>
                      </div>,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "elementType": "div",
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 1,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": <div
                        className="row text-center"
                      >
                        <div
                          className="col-md-4"
                        >
                          <FontAwesomeIcon
                            border={false}
                            className=""
                            fixedWidth={false}
                            flip={null}
                            icon="shopping-bag"
                            inverse={false}
                            listItem={false}
                            mask={null}
                            pull={null}
                            pulse={false}
                            rotation={null}
                            size={null}
                            spin={false}
                            symbol={false}
                            title=""
                            transform={null}
                          />
                          <h5>
                            Shop
                          </h5>
                          <p>
                            You can use the web app to add/remove item from a shopping experience.
                          </p>
                        </div>
                        <div
                          className="col-md-4"
                        >
                          <FontAwesomeIcon
                            border={false}
                            className=""
                            fixedWidth={false}
                            flip={null}
                            icon="briefcase"
                            inverse={false}
                            listItem={false}
                            mask={null}
                            pull={null}
                            pulse={false}
                            rotation={null}
                            size={null}
                            spin={false}
                            symbol={false}
                            title=""
                            transform={null}
                          />
                          <h5>
                            Manage Item
                          </h5>
                          <p>
                            You can manage item you add. YOu can also delete an item with a very simple user experience.
                          </p>
                        </div>
                        <div
                          className="col-md-4"
                        >
                          <FontAwesomeIcon
                            border={false}
                            className=""
                            fixedWidth={false}
                            flip={null}
                            icon="chart-line"
                            inverse={false}
                            listItem={false}
                            mask={null}
                            pull={null}
                            pulse={false}
                            rotation={null}
                            size={null}
                            spin={false}
                            symbol={false}
                            title=""
                            transform={null}
                          />
                          <h5>
                            Transaction Summary
                          </h5>
                          <p>
                            Transaction summary of item purchase can not be easier.
                          </p>
                        </div>
                      </div>,
                      "className": "container home",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": <div
                        className="row text-center"
                      >
                        <div
                          className="col-md-4"
                        >
                          <FontAwesomeIcon
                            border={false}
                            className=""
                            fixedWidth={false}
                            flip={null}
                            icon="shopping-bag"
                            inverse={false}
                            listItem={false}
                            mask={null}
                            pull={null}
                            pulse={false}
                            rotation={null}
                            size={null}
                            spin={false}
                            symbol={false}
                            title=""
                            transform={null}
                          />
                          <h5>
                            Shop
                          </h5>
                          <p>
                            You can use the web app to add/remove item from a shopping experience.
                          </p>
                        </div>
                        <div
                          className="col-md-4"
                        >
                          <FontAwesomeIcon
                            border={false}
                            className=""
                            fixedWidth={false}
                            flip={null}
                            icon="briefcase"
                            inverse={false}
                            listItem={false}
                            mask={null}
                            pull={null}
                            pulse={false}
                            rotation={null}
                            size={null}
                            spin={false}
                            symbol={false}
                            title=""
                            transform={null}
                          />
                          <h5>
                            Manage Item
                          </h5>
                          <p>
                            You can manage item you add. YOu can also delete an item with a very simple user experience.
                          </p>
                        </div>
                        <div
                          className="col-md-4"
                        >
                          <FontAwesomeIcon
                            border={false}
                            className=""
                            fixedWidth={false}
                            flip={null}
                            icon="chart-line"
                            inverse={false}
                            listItem={false}
                            mask={null}
                            pull={null}
                            pulse={false}
                            rotation={null}
                            size={null}
                            spin={false}
                            symbol={false}
                            title=""
                            transform={null}
                          />
                          <h5>
                            Transaction Summary
                          </h5>
                          <p>
                            Transaction summary of item purchase can not be easier.
                          </p>
                        </div>
                      </div>,
                      "className": "container home",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": <div
                      class="container home"
                    >
                      <div
                        class="row text-center"
                      >
                        <div
                          class="col-md-4"
                        >
                          <h5>
                            Shop
                          </h5>
                          <p>
                            You can use the web app to add/remove item from a shopping experience.
                          </p>
                        </div>
                        <div
                          class="col-md-4"
                        >
                          <h5>
                            Manage Item
                          </h5>
                          <p>
                            You can manage item you add. YOu can also delete an item with a very simple user experience.
                          </p>
                        </div>
                        <div
                          class="col-md-4"
                        >
                          <h5>
                            Transaction Summary
                          </h5>
                          <p>
                            Transaction summary of item purchase can not be easier.
                          </p>
                        </div>
                      </div>
                    </div>,
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "stateNode": <div
                    class="jumbotron text-center"
                  >
                    <h1>
                      Grocery Listify
                    </h1>
                    <p>
                      Grocery Store Management Made easy with
                       
                    </p>
                  </div>,
                  "tag": 5,
                  "treeBaseDuration": 0,
                  "type": "div",
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "effectTag": 0,
                "elementType": "div",
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <div
                      className="jumbotron text-center"
                    >
                      <h1>
                        Grocery Listify
                      </h1>
                      <p>
                        Grocery Store Management Made easy with
                         
                        <FontAwesomeIcon
                          border={false}
                          className=""
                          fixedWidth={false}
                          flip={null}
                          icon="heart"
                          inverse={false}
                          listItem={false}
                          mask={null}
                          pull={null}
                          pulse={false}
                          rotation={null}
                          size={null}
                          spin={false}
                          symbol={false}
                          title=""
                          transform={null}
                        />
                      </p>
                    </div>,
                    <div
                      className="container home"
                    >
                      <div
                        className="row text-center"
                      >
                        <div
                          className="col-md-4"
                        >
                          <FontAwesomeIcon
                            border={false}
                            className=""
                            fixedWidth={false}
                            flip={null}
                            icon="shopping-bag"
                            inverse={false}
                            listItem={false}
                            mask={null}
                            pull={null}
                            pulse={false}
                            rotation={null}
                            size={null}
                            spin={false}
                            symbol={false}
                            title=""
                            transform={null}
                          />
                          <h5>
                            Shop
                          </h5>
                          <p>
                            You can use the web app to add/remove item from a shopping experience.
                          </p>
                        </div>
                        <div
                          className="col-md-4"
                        >
                          <FontAwesomeIcon
                            border={false}
                            className=""
                            fixedWidth={false}
                            flip={null}
                            icon="briefcase"
                            inverse={false}
                            listItem={false}
                            mask={null}
                            pull={null}
                            pulse={false}
                            rotation={null}
                            size={null}
                            spin={false}
                            symbol={false}
                            title=""
                            transform={null}
                          />
                          <h5>
                            Manage Item
                          </h5>
                          <p>
                            You can manage item you add. YOu can also delete an item with a very simple user experience.
                          </p>
                        </div>
                        <div
                          className="col-md-4"
                        >
                          <FontAwesomeIcon
                            border={false}
                            className=""
                            fixedWidth={false}
                            flip={null}
                            icon="chart-line"
                            inverse={false}
                            listItem={false}
                            mask={null}
                            pull={null}
                            pulse={false}
                            rotation={null}
                            size={null}
                            spin={false}
                            symbol={false}
                            title=""
                            transform={null}
                          />
                          <h5>
                            Transaction Summary
                          </h5>
                          <p>
                            Transaction summary of item purchase can not be easier.
                          </p>
                        </div>
                      </div>
                    </div>,
                  ],
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": Array [
                    <div
                      className="jumbotron text-center"
                    >
                      <h1>
                        Grocery Listify
                      </h1>
                      <p>
                        Grocery Store Management Made easy with
                         
                        <FontAwesomeIcon
                          border={false}
                          className=""
                          fixedWidth={false}
                          flip={null}
                          icon="heart"
                          inverse={false}
                          listItem={false}
                          mask={null}
                          pull={null}
                          pulse={false}
                          rotation={null}
                          size={null}
                          spin={false}
                          symbol={false}
                          title=""
                          transform={null}
                        />
                      </p>
                    </div>,
                    <div
                      className="container home"
                    >
                      <div
                        className="row text-center"
                      >
                        <div
                          className="col-md-4"
                        >
                          <FontAwesomeIcon
                            border={false}
                            className=""
                            fixedWidth={false}
                            flip={null}
                            icon="shopping-bag"
                            inverse={false}
                            listItem={false}
                            mask={null}
                            pull={null}
                            pulse={false}
                            rotation={null}
                            size={null}
                            spin={false}
                            symbol={false}
                            title=""
                            transform={null}
                          />
                          <h5>
                            Shop
                          </h5>
                          <p>
                            You can use the web app to add/remove item from a shopping experience.
                          </p>
                        </div>
                        <div
                          className="col-md-4"
                        >
                          <FontAwesomeIcon
                            border={false}
                            className=""
                            fixedWidth={false}
                            flip={null}
                            icon="briefcase"
                            inverse={false}
                            listItem={false}
                            mask={null}
                            pull={null}
                            pulse={false}
                            rotation={null}
                            size={null}
                            spin={false}
                            symbol={false}
                            title=""
                            transform={null}
                          />
                          <h5>
                            Manage Item
                          </h5>
                          <p>
                            You can manage item you add. YOu can also delete an item with a very simple user experience.
                          </p>
                        </div>
                        <div
                          className="col-md-4"
                        >
                          <FontAwesomeIcon
                            border={false}
                            className=""
                            fixedWidth={false}
                            flip={null}
                            icon="chart-line"
                            inverse={false}
                            listItem={false}
                            mask={null}
                            pull={null}
                            pulse={false}
                            rotation={null}
                            size={null}
                            spin={false}
                            symbol={false}
                            title=""
                            transform={null}
                          />
                          <h5>
                            Transaction Summary
                          </h5>
                          <p>
                            Transaction summary of item purchase can not be easier.
                          </p>
                        </div>
                      </div>
                    </div>,
                  ],
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": <div>
                  <div
                    class="jumbotron text-center"
                  >
                    <h1>
                      Grocery Listify
                    </h1>
                    <p>
                      Grocery Store Management Made easy with
                       
                    </p>
                  </div>
                  <div
                    class="container home"
                  >
                    <div
                      class="row text-center"
                    >
                      <div
                        class="col-md-4"
                      >
                        <h5>
                          Shop
                        </h5>
                        <p>
                          You can use the web app to add/remove item from a shopping experience.
                        </p>
                      </div>
                      <div
                        class="col-md-4"
                      >
                        <h5>
                          Manage Item
                        </h5>
                        <p>
                          You can manage item you add. YOu can also delete an item with a very simple user experience.
                        </p>
                      </div>
                      <div
                        class="col-md-4"
                      >
                        <h5>
                          Transaction Summary
                        </h5>
                        <p>
                          Transaction summary of item purchase can not be easier.
                        </p>
                      </div>
                    </div>
                  </div>
                </div>,
                "tag": 5,
                "treeBaseDuration": 0,
                "type": "div",
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {},
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {},
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 0,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": null,
            },
            "childExpirationTime": 0,
            "effectTag": 1,
            "elementType": [Function],
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": <_default />,
              "history": Object {
                "action": "POP",
                "block": [Function],
                "createHref": [Function],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "push": [Function],
                "replace": [Function],
              },
            },
            "memoizedState": Object {
              "match": Object {
                "isExact": true,
                "params": Object {},
                "path": "/",
                "url": "/",
              },
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": <_default />,
              "history": Object {
                "action": "POP",
                "block": [Function],
                "createHref": [Function],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "push": [Function],
                "replace": [Function],
              },
            },
            "ref": null,
            "return": [Circular],
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Router {
              "__reactInternalMemoizedMaskedChildContext": Object {
                "router": undefined,
              },
              "__reactInternalMemoizedMergedChildContext": Object {
                "router": Object {
                  "history": Object {
                    "action": "POP",
                    "block": [Function],
                    "createHref": [Function],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  },
                  "route": Object {
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "match": Object {
                      "isExact": true,
                      "params": Object {},
                      "path": "/",
                      "url": "/",
                    },
                  },
                },
              },
              "__reactInternalMemoizedUnmaskedChildContext": Object {},
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {
                "router": undefined,
              },
              "props": Object {
                "children": <_default />,
                "history": Object {
                  "action": "POP",
                  "block": [Function],
                  "createHref": [Function],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "push": [Function],
                  "replace": [Function],
                },
              },
              "refs": Object {},
              "state": Object {
                "match": Object {
                  "isExact": true,
                  "params": Object {},
                  "path": "/",
                  "url": "/",
                },
              },
              "unlisten": [Function],
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 1,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "childExpirationTime": 0,
          "effectTag": 1,
          "elementType": [Function],
          "expirationTime": 0,
          "firstContextDependency": null,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "children": <_default />,
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "children": <_default />,
          },
          "ref": null,
          "return": FiberNode {
            "_debugID": 49,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "effectTag": 1,
            "elementType": [Function],
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "children": <_default />,
              },
            },
            "memoizedState": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "children": <_default />,
              },
            },
            "mode": 0,
            "nextEffect": FiberNode {
              "_debugID": 47,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": FiberNode {
                "_debugID": 47,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": [Circular],
                "child": null,
                "childExpirationTime": 0,
                "effectTag": 0,
                "elementType": null,
                "expirationTime": 1073741823,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div>
                      <div
                        class="jumbotron text-center"
                      >
                        <h1>
                          Grocery Listify
                        </h1>
                        <p>
                          Grocery Store Management Made easy with
                           
                        </p>
                      </div>
                      <div
                        class="container home"
                      >
                        <div
                          class="row text-center"
                        >
                          <div
                            class="col-md-4"
                          >
                            <h5>
                              Shop
                            </h5>
                            <p>
                              You can use the web app to add/remove item from a shopping experience.
                            </p>
                          </div>
                          <div
                            class="col-md-4"
                          >
                            <h5>
                              Manage Item
                            </h5>
                            <p>
                              You can manage item you add. YOu can also delete an item with a very simple user experience.
                            </p>
                          </div>
                          <div
                            class="col-md-4"
                          >
                            <h5>
                              Transaction Summary
                            </h5>
                            <p>
                              Transaction summary of item purchase can not be easier.
                            </p>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "didError": false,
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "expirationTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "interactionThreadID": 12,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextExpirationTimeToWorkOn": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "timeoutHandle": -1,
                },
                "tag": 3,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "children": <_default />,
                          }
                        }
                      />,
                    },
                    "tag": 0,
                  },
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "children": <_default />,
                          }
                        }
                      />,
                    },
                    "tag": 0,
                  },
                },
              },
              "child": [Circular],
              "childExpirationTime": 0,
              "effectTag": 32,
              "elementType": null,
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "children": <_default />,
                    }
                  }
                />,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div>
                    <div
                      class="jumbotron text-center"
                    >
                      <h1>
                        Grocery Listify
                      </h1>
                      <p>
                        Grocery Store Management Made easy with
                         
                      </p>
                    </div>
                    <div
                      class="container home"
                    >
                      <div
                        class="row text-center"
                      >
                        <div
                          class="col-md-4"
                        >
                          <h5>
                            Shop
                          </h5>
                          <p>
                            You can use the web app to add/remove item from a shopping experience.
                          </p>
                        </div>
                        <div
                          class="col-md-4"
                        >
                          <h5>
                            Manage Item
                          </h5>
                          <p>
                            You can manage item you add. YOu can also delete an item with a very simple user experience.
                          </p>
                        </div>
                        <div
                          class="col-md-4"
                        >
                          <h5>
                            Transaction Summary
                          </h5>
                          <p>
                            Transaction summary of item purchase can not be easier.
                          </p>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 12,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                      Object {
                        "children": <_default />,
                      }
                    }
                  />,
                },
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": null,
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": null,
              },
            },
            "pendingProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "children": <_default />,
              },
            },
            "ref": null,
            "return": FiberNode {
              "_debugID": 47,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": FiberNode {
                "_debugID": 47,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": [Circular],
                "child": null,
                "childExpirationTime": 0,
                "effectTag": 0,
                "elementType": null,
                "expirationTime": 1073741823,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div>
                      <div
                        class="jumbotron text-center"
                      >
                        <h1>
                          Grocery Listify
                        </h1>
                        <p>
                          Grocery Store Management Made easy with
                           
                        </p>
                      </div>
                      <div
                        class="container home"
                      >
                        <div
                          class="row text-center"
                        >
                          <div
                            class="col-md-4"
                          >
                            <h5>
                              Shop
                            </h5>
                            <p>
                              You can use the web app to add/remove item from a shopping experience.
                            </p>
                          </div>
                          <div
                            class="col-md-4"
                          >
                            <h5>
                              Manage Item
                            </h5>
                            <p>
                              You can manage item you add. YOu can also delete an item with a very simple user experience.
                            </p>
                          </div>
                          <div
                            class="col-md-4"
                          >
                            <h5>
                              Transaction Summary
                            </h5>
                            <p>
                              Transaction summary of item purchase can not be easier.
                            </p>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "didError": false,
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "expirationTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "interactionThreadID": 12,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextExpirationTimeToWorkOn": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "timeoutHandle": -1,
                },
                "tag": 3,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "children": <_default />,
                          }
                        }
                      />,
                    },
                    "tag": 0,
                  },
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "children": <_default />,
                          }
                        }
                      />,
                    },
                    "tag": 0,
                  },
                },
              },
              "child": [Circular],
              "childExpirationTime": 0,
              "effectTag": 32,
              "elementType": null,
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "children": <_default />,
                    }
                  }
                />,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div>
                    <div
                      class="jumbotron text-center"
                    >
                      <h1>
                        Grocery Listify
                      </h1>
                      <p>
                        Grocery Store Management Made easy with
                         
                      </p>
                    </div>
                    <div
                      class="container home"
                    >
                      <div
                        class="row text-center"
                      >
                        <div
                          class="col-md-4"
                        >
                          <h5>
                            Shop
                          </h5>
                          <p>
                            You can use the web app to add/remove item from a shopping experience.
                          </p>
                        </div>
                        <div
                          class="col-md-4"
                        >
                          <h5>
                            Manage Item
                          </h5>
                          <p>
                            You can manage item you add. YOu can also delete an item with a very simple user experience.
                          </p>
                        </div>
                        <div
                          class="col-md-4"
                        >
                          <h5>
                            Transaction Summary
                          </h5>
                          <p>
                            Transaction summary of item purchase can not be easier.
                          </p>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 12,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                      Object {
                        "children": <_default />,
                      }
                    }
                  />,
                },
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": null,
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": null,
              },
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": WrapperComponent {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "children": <_default />,
                },
              },
              "refs": Object {},
              "state": Object {
                "context": null,
                "mount": true,
                "props": Object {
                  "children": <_default />,
                },
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 1,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": [Circular],
          "tag": 1,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "_reactInternalInstance": Object {},
        "context": Object {},
        "history": Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        },
        "props": Object {
          "children": <_default />,
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
        },
      },
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <_default />,
      },
      "ref": null,
      "rendered": Object {
        "instance": Router {
          "__reactInternalMemoizedMaskedChildContext": Object {
            "router": undefined,
          },
          "__reactInternalMemoizedMergedChildContext": Object {
            "router": Object {
              "history": Object {
                "action": "POP",
                "block": [Function],
                "createHref": [Function],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "push": [Function],
                "replace": [Function],
              },
              "route": Object {
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "match": Object {
                  "isExact": true,
                  "params": Object {},
                  "path": "/",
                  "url": "/",
                },
              },
            },
          },
          "__reactInternalMemoizedUnmaskedChildContext": Object {},
          "_reactInternalFiber": FiberNode {
            "_debugID": 51,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": FiberNode {
              "_debugID": 50,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": FiberNode {
                "_debugID": 49,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childExpirationTime": 0,
                "effectTag": 1,
                "elementType": [Function],
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "children": <_default />,
                  },
                },
                "memoizedState": Object {
                  "context": null,
                  "mount": true,
                  "props": Object {
                    "children": <_default />,
                  },
                },
                "mode": 0,
                "nextEffect": FiberNode {
                  "_debugID": 47,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": FiberNode {
                    "_debugID": 47,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": [Circular],
                    "child": null,
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "elementType": null,
                    "expirationTime": 1073741823,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": null,
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div>
                        <div>
                          <div
                            class="jumbotron text-center"
                          >
                            <h1>
                              Grocery Listify
                            </h1>
                            <p>
                              Grocery Store Management Made easy with
                               
                            </p>
                          </div>
                          <div
                            class="container home"
                          >
                            <div
                              class="row text-center"
                            >
                              <div
                                class="col-md-4"
                              >
                                <h5>
                                  Shop
                                </h5>
                                <p>
                                  You can use the web app to add/remove item from a shopping experience.
                                </p>
                              </div>
                              <div
                                class="col-md-4"
                              >
                                <h5>
                                  Manage Item
                                </h5>
                                <p>
                                  You can manage item you add. YOu can also delete an item with a very simple user experience.
                                </p>
                              </div>
                              <div
                                class="col-md-4"
                              >
                                <h5>
                                  Transaction Summary
                                </h5>
                                <p>
                                  Transaction summary of item purchase can not be easier.
                                </p>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>,
                      "context": Object {},
                      "current": [Circular],
                      "didError": false,
                      "earliestPendingTime": 0,
                      "earliestSuspendedTime": 0,
                      "expirationTime": 0,
                      "finishedWork": null,
                      "firstBatch": null,
                      "hydrate": false,
                      "interactionThreadID": 12,
                      "latestPendingTime": 0,
                      "latestPingedTime": 0,
                      "latestSuspendedTime": 0,
                      "memoizedInteractions": Set {},
                      "nextExpirationTimeToWorkOn": 0,
                      "nextScheduledRoot": null,
                      "pendingChildren": null,
                      "pendingCommitExpirationTime": 0,
                      "pendingContext": null,
                      "pendingInteractionMap": Map {},
                      "timeoutHandle": -1,
                    },
                    "tag": 3,
                    "treeBaseDuration": 0,
                    "type": null,
                    "updateQueue": Object {
                      "baseState": null,
                      "firstCapturedEffect": null,
                      "firstCapturedUpdate": null,
                      "firstEffect": null,
                      "firstUpdate": Object {
                        "callback": null,
                        "expirationTime": 1073741823,
                        "next": null,
                        "nextEffect": null,
                        "payload": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "children": <_default />,
                              }
                            }
                          />,
                        },
                        "tag": 0,
                      },
                      "lastCapturedEffect": null,
                      "lastCapturedUpdate": null,
                      "lastEffect": null,
                      "lastUpdate": Object {
                        "callback": null,
                        "expirationTime": 1073741823,
                        "next": null,
                        "nextEffect": null,
                        "payload": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "children": <_default />,
                              }
                            }
                          />,
                        },
                        "tag": 0,
                      },
                    },
                  },
                  "child": [Circular],
                  "childExpirationTime": 0,
                  "effectTag": 32,
                  "elementType": null,
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": null,
                  "memoizedState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "children": <_default />,
                        }
                      }
                    />,
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": Object {
                    "containerInfo": <div>
                      <div>
                        <div
                          class="jumbotron text-center"
                        >
                          <h1>
                            Grocery Listify
                          </h1>
                          <p>
                            Grocery Store Management Made easy with
                             
                          </p>
                        </div>
                        <div
                          class="container home"
                        >
                          <div
                            class="row text-center"
                          >
                            <div
                              class="col-md-4"
                            >
                              <h5>
                                Shop
                              </h5>
                              <p>
                                You can use the web app to add/remove item from a shopping experience.
                              </p>
                            </div>
                            <div
                              class="col-md-4"
                            >
                              <h5>
                                Manage Item
                              </h5>
                              <p>
                                You can manage item you add. YOu can also delete an item with a very simple user experience.
                              </p>
                            </div>
                            <div
                              class="col-md-4"
                            >
                              <h5>
                                Transaction Summary
                              </h5>
                              <p>
                                Transaction summary of item purchase can not be easier.
                              </p>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>,
                    "context": Object {},
                    "current": [Circular],
                    "didError": false,
                    "earliestPendingTime": 0,
                    "earliestSuspendedTime": 0,
                    "expirationTime": 0,
                    "finishedWork": null,
                    "firstBatch": null,
                    "hydrate": false,
                    "interactionThreadID": 12,
                    "latestPendingTime": 0,
                    "latestPingedTime": 0,
                    "latestSuspendedTime": 0,
                    "memoizedInteractions": Set {},
                    "nextExpirationTimeToWorkOn": 0,
                    "nextScheduledRoot": null,
                    "pendingChildren": null,
                    "pendingCommitExpirationTime": 0,
                    "pendingContext": null,
                    "pendingInteractionMap": Map {},
                    "timeoutHandle": -1,
                  },
                  "tag": 3,
                  "treeBaseDuration": 0,
                  "type": null,
                  "updateQueue": Object {
                    "baseState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "children": <_default />,
                          }
                        }
                      />,
                    },
                    "firstCapturedEffect": null,
                    "firstCapturedUpdate": null,
                    "firstEffect": null,
                    "firstUpdate": null,
                    "lastCapturedEffect": null,
                    "lastCapturedUpdate": null,
                    "lastEffect": null,
                    "lastUpdate": null,
                  },
                },
                "pendingProps": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "children": <_default />,
                  },
                },
                "ref": null,
                "return": FiberNode {
                  "_debugID": 47,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": FiberNode {
                    "_debugID": 47,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": [Circular],
                    "child": null,
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "elementType": null,
                    "expirationTime": 1073741823,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": null,
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div>
                        <div>
                          <div
                            class="jumbotron text-center"
                          >
                            <h1>
                              Grocery Listify
                            </h1>
                            <p>
                              Grocery Store Management Made easy with
                               
                            </p>
                          </div>
                          <div
                            class="container home"
                          >
                            <div
                              class="row text-center"
                            >
                              <div
                                class="col-md-4"
                              >
                                <h5>
                                  Shop
                                </h5>
                                <p>
                                  You can use the web app to add/remove item from a shopping experience.
                                </p>
                              </div>
                              <div
                                class="col-md-4"
                              >
                                <h5>
                                  Manage Item
                                </h5>
                                <p>
                                  You can manage item you add. YOu can also delete an item with a very simple user experience.
                                </p>
                              </div>
                              <div
                                class="col-md-4"
                              >
                                <h5>
                                  Transaction Summary
                                </h5>
                                <p>
                                  Transaction summary of item purchase can not be easier.
                                </p>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>,
                      "context": Object {},
                      "current": [Circular],
                      "didError": false,
                      "earliestPendingTime": 0,
                      "earliestSuspendedTime": 0,
                      "expirationTime": 0,
                      "finishedWork": null,
                      "firstBatch": null,
                      "hydrate": false,
                      "interactionThreadID": 12,
                      "latestPendingTime": 0,
                      "latestPingedTime": 0,
                      "latestSuspendedTime": 0,
                      "memoizedInteractions": Set {},
                      "nextExpirationTimeToWorkOn": 0,
                      "nextScheduledRoot": null,
                      "pendingChildren": null,
                      "pendingCommitExpirationTime": 0,
                      "pendingContext": null,
                      "pendingInteractionMap": Map {},
                      "timeoutHandle": -1,
                    },
                    "tag": 3,
                    "treeBaseDuration": 0,
                    "type": null,
                    "updateQueue": Object {
                      "baseState": null,
                      "firstCapturedEffect": null,
                      "firstCapturedUpdate": null,
                      "firstEffect": null,
                      "firstUpdate": Object {
                        "callback": null,
                        "expirationTime": 1073741823,
                        "next": null,
                        "nextEffect": null,
                        "payload": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "children": <_default />,
                              }
                            }
                          />,
                        },
                        "tag": 0,
                      },
                      "lastCapturedEffect": null,
                      "lastCapturedUpdate": null,
                      "lastEffect": null,
                      "lastUpdate": Object {
                        "callback": null,
                        "expirationTime": 1073741823,
                        "next": null,
                        "nextEffect": null,
                        "payload": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "children": <_default />,
                              }
                            }
                          />,
                        },
                        "tag": 0,
                      },
                    },
                  },
                  "child": [Circular],
                  "childExpirationTime": 0,
                  "effectTag": 32,
                  "elementType": null,
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": null,
                  "memoizedState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "children": <_default />,
                        }
                      }
                    />,
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": Object {
                    "containerInfo": <div>
                      <div>
                        <div
                          class="jumbotron text-center"
                        >
                          <h1>
                            Grocery Listify
                          </h1>
                          <p>
                            Grocery Store Management Made easy with
                             
                          </p>
                        </div>
                        <div
                          class="container home"
                        >
                          <div
                            class="row text-center"
                          >
                            <div
                              class="col-md-4"
                            >
                              <h5>
                                Shop
                              </h5>
                              <p>
                                You can use the web app to add/remove item from a shopping experience.
                              </p>
                            </div>
                            <div
                              class="col-md-4"
                            >
                              <h5>
                                Manage Item
                              </h5>
                              <p>
                                You can manage item you add. YOu can also delete an item with a very simple user experience.
                              </p>
                            </div>
                            <div
                              class="col-md-4"
                            >
                              <h5>
                                Transaction Summary
                              </h5>
                              <p>
                                Transaction summary of item purchase can not be easier.
                              </p>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>,
                    "context": Object {},
                    "current": [Circular],
                    "didError": false,
                    "earliestPendingTime": 0,
                    "earliestSuspendedTime": 0,
                    "expirationTime": 0,
                    "finishedWork": null,
                    "firstBatch": null,
                    "hydrate": false,
                    "interactionThreadID": 12,
                    "latestPendingTime": 0,
                    "latestPingedTime": 0,
                    "latestSuspendedTime": 0,
                    "memoizedInteractions": Set {},
                    "nextExpirationTimeToWorkOn": 0,
                    "nextScheduledRoot": null,
                    "pendingChildren": null,
                    "pendingCommitExpirationTime": 0,
                    "pendingContext": null,
                    "pendingInteractionMap": Map {},
                    "timeoutHandle": -1,
                  },
                  "tag": 3,
                  "treeBaseDuration": 0,
                  "type": null,
                  "updateQueue": Object {
                    "baseState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "children": <_default />,
                          }
                        }
                      />,
                    },
                    "firstCapturedEffect": null,
                    "firstCapturedUpdate": null,
                    "firstEffect": null,
                    "firstUpdate": null,
                    "lastCapturedEffect": null,
                    "lastCapturedUpdate": null,
                    "lastEffect": null,
                    "lastUpdate": null,
                  },
                },
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": WrapperComponent {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "Component": [Function],
                    "context": null,
                    "props": Object {
                      "children": <_default />,
                    },
                  },
                  "refs": Object {},
                  "state": Object {
                    "context": null,
                    "mount": true,
                    "props": Object {
                      "children": <_default />,
                    },
                  },
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 1,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": null,
              },
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": <_default />,
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": <_default />,
              },
              "ref": null,
              "return": FiberNode {
                "_debugID": 49,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childExpirationTime": 0,
                "effectTag": 1,
                "elementType": [Function],
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "children": <_default />,
                  },
                },
                "memoizedState": Object {
                  "context": null,
                  "mount": true,
                  "props": Object {
                    "children": <_default />,
                  },
                },
                "mode": 0,
                "nextEffect": FiberNode {
                  "_debugID": 47,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": FiberNode {
                    "_debugID": 47,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": [Circular],
                    "child": null,
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "elementType": null,
                    "expirationTime": 1073741823,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": null,
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div>
                        <div>
                          <div
                            class="jumbotron text-center"
                          >
                            <h1>
                              Grocery Listify
                            </h1>
                            <p>
                              Grocery Store Management Made easy with
                               
                            </p>
                          </div>
                          <div
                            class="container home"
                          >
                            <div
                              class="row text-center"
                            >
                              <div
                                class="col-md-4"
                              >
                                <h5>
                                  Shop
                                </h5>
                                <p>
                                  You can use the web app to add/remove item from a shopping experience.
                                </p>
                              </div>
                              <div
                                class="col-md-4"
                              >
                                <h5>
                                  Manage Item
                                </h5>
                                <p>
                                  You can manage item you add. YOu can also delete an item with a very simple user experience.
                                </p>
                              </div>
                              <div
                                class="col-md-4"
                              >
                                <h5>
                                  Transaction Summary
                                </h5>
                                <p>
                                  Transaction summary of item purchase can not be easier.
                                </p>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>,
                      "context": Object {},
                      "current": [Circular],
                      "didError": false,
                      "earliestPendingTime": 0,
                      "earliestSuspendedTime": 0,
                      "expirationTime": 0,
                      "finishedWork": null,
                      "firstBatch": null,
                      "hydrate": false,
                      "interactionThreadID": 12,
                      "latestPendingTime": 0,
                      "latestPingedTime": 0,
                      "latestSuspendedTime": 0,
                      "memoizedInteractions": Set {},
                      "nextExpirationTimeToWorkOn": 0,
                      "nextScheduledRoot": null,
                      "pendingChildren": null,
                      "pendingCommitExpirationTime": 0,
                      "pendingContext": null,
                      "pendingInteractionMap": Map {},
                      "timeoutHandle": -1,
                    },
                    "tag": 3,
                    "treeBaseDuration": 0,
                    "type": null,
                    "updateQueue": Object {
                      "baseState": null,
                      "firstCapturedEffect": null,
                      "firstCapturedUpdate": null,
                      "firstEffect": null,
                      "firstUpdate": Object {
                        "callback": null,
                        "expirationTime": 1073741823,
                        "next": null,
                        "nextEffect": null,
                        "payload": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "children": <_default />,
                              }
                            }
                          />,
                        },
                        "tag": 0,
                      },
                      "lastCapturedEffect": null,
                      "lastCapturedUpdate": null,
                      "lastEffect": null,
                      "lastUpdate": Object {
                        "callback": null,
                        "expirationTime": 1073741823,
                        "next": null,
                        "nextEffect": null,
                        "payload": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "children": <_default />,
                              }
                            }
                          />,
                        },
                        "tag": 0,
                      },
                    },
                  },
                  "child": [Circular],
                  "childExpirationTime": 0,
                  "effectTag": 32,
                  "elementType": null,
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": null,
                  "memoizedState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "children": <_default />,
                        }
                      }
                    />,
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": Object {
                    "containerInfo": <div>
                      <div>
                        <div
                          class="jumbotron text-center"
                        >
                          <h1>
                            Grocery Listify
                          </h1>
                          <p>
                            Grocery Store Management Made easy with
                             
                          </p>
                        </div>
                        <div
                          class="container home"
                        >
                          <div
                            class="row text-center"
                          >
                            <div
                              class="col-md-4"
                            >
                              <h5>
                                Shop
                              </h5>
                              <p>
                                You can use the web app to add/remove item from a shopping experience.
                              </p>
                            </div>
                            <div
                              class="col-md-4"
                            >
                              <h5>
                                Manage Item
                              </h5>
                              <p>
                                You can manage item you add. YOu can also delete an item with a very simple user experience.
                              </p>
                            </div>
                            <div
                              class="col-md-4"
                            >
                              <h5>
                                Transaction Summary
                              </h5>
                              <p>
                                Transaction summary of item purchase can not be easier.
                              </p>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>,
                    "context": Object {},
                    "current": [Circular],
                    "didError": false,
                    "earliestPendingTime": 0,
                    "earliestSuspendedTime": 0,
                    "expirationTime": 0,
                    "finishedWork": null,
                    "firstBatch": null,
                    "hydrate": false,
                    "interactionThreadID": 12,
                    "latestPendingTime": 0,
                    "latestPingedTime": 0,
                    "latestSuspendedTime": 0,
                    "memoizedInteractions": Set {},
                    "nextExpirationTimeToWorkOn": 0,
                    "nextScheduledRoot": null,
                    "pendingChildren": null,
                    "pendingCommitExpirationTime": 0,
                    "pendingContext": null,
                    "pendingInteractionMap": Map {},
                    "timeoutHandle": -1,
                  },
                  "tag": 3,
                  "treeBaseDuration": 0,
                  "type": null,
                  "updateQueue": Object {
                    "baseState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "children": <_default />,
                          }
                        }
                      />,
                    },
                    "firstCapturedEffect": null,
                    "firstCapturedUpdate": null,
                    "firstEffect": null,
                    "firstUpdate": null,
                    "lastCapturedEffect": null,
                    "lastCapturedUpdate": null,
                    "lastEffect": null,
                    "lastUpdate": null,
                  },
                },
                "pendingProps": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "children": <_default />,
                  },
                },
                "ref": null,
                "return": FiberNode {
                  "_debugID": 47,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": FiberNode {
                    "_debugID": 47,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": [Circular],
                    "child": null,
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "elementType": null,
                    "expirationTime": 1073741823,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": null,
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div>
                        <div>
                          <div
                            class="jumbotron text-center"
                          >
                            <h1>
                              Grocery Listify
                            </h1>
                            <p>
                              Grocery Store Management Made easy with
                               
                            </p>
                          </div>
                          <div
                            class="container home"
                          >
                            <div
                              class="row text-center"
                            >
                              <div
                                class="col-md-4"
                              >
                                <h5>
                                  Shop
                                </h5>
                                <p>
                                  You can use the web app to add/remove item from a shopping experience.
                                </p>
                              </div>
                              <div
                                class="col-md-4"
                              >
                                <h5>
                                  Manage Item
                                </h5>
                                <p>
                                  You can manage item you add. YOu can also delete an item with a very simple user experience.
                                </p>
                              </div>
                              <div
                                class="col-md-4"
                              >
                                <h5>
                                  Transaction Summary
                                </h5>
                                <p>
                                  Transaction summary of item purchase can not be easier.
                                </p>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>,
                      "context": Object {},
                      "current": [Circular],
                      "didError": false,
                      "earliestPendingTime": 0,
                      "earliestSuspendedTime": 0,
                      "expirationTime": 0,
                      "finishedWork": null,
                      "firstBatch": null,
                      "hydrate": false,
                      "interactionThreadID": 12,
                      "latestPendingTime": 0,
                      "latestPingedTime": 0,
                      "latestSuspendedTime": 0,
                      "memoizedInteractions": Set {},
                      "nextExpirationTimeToWorkOn": 0,
                      "nextScheduledRoot": null,
                      "pendingChildren": null,
                      "pendingCommitExpirationTime": 0,
                      "pendingContext": null,
                      "pendingInteractionMap": Map {},
                      "timeoutHandle": -1,
                    },
                    "tag": 3,
                    "treeBaseDuration": 0,
                    "type": null,
                    "updateQueue": Object {
                      "baseState": null,
                      "firstCapturedEffect": null,
                      "firstCapturedUpdate": null,
                      "firstEffect": null,
                      "firstUpdate": Object {
                        "callback": null,
                        "expirationTime": 1073741823,
                        "next": null,
                        "nextEffect": null,
                        "payload": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "children": <_default />,
                              }
                            }
                          />,
                        },
                        "tag": 0,
                      },
                      "lastCapturedEffect": null,
                      "lastCapturedUpdate": null,
                      "lastEffect": null,
                      "lastUpdate": Object {
                        "callback": null,
                        "expirationTime": 1073741823,
                        "next": null,
                        "nextEffect": null,
                        "payload": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "children": <_default />,
                              }
                            }
                          />,
                        },
                        "tag": 0,
                      },
                    },
                  },
                  "child": [Circular],
                  "childExpirationTime": 0,
                  "effectTag": 32,
                  "elementType": null,
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": null,
                  "memoizedState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "children": <_default />,
                        }
                      }
                    />,
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": Object {
                    "containerInfo": <div>
                      <div>
                        <div
                          class="jumbotron text-center"
                        >
                          <h1>
                            Grocery Listify
                          </h1>
                          <p>
                            Grocery Store Management Made easy with
                             
                          </p>
                        </div>
                        <div
                          class="container home"
                        >
                          <div
                            class="row text-center"
                          >
                            <div
                              class="col-md-4"
                            >
                              <h5>
                                Shop
                              </h5>
                              <p>
                                You can use the web app to add/remove item from a shopping experience.
                              </p>
                            </div>
                            <div
                              class="col-md-4"
                            >
                              <h5>
                                Manage Item
                              </h5>
                              <p>
                                You can manage item you add. YOu can also delete an item with a very simple user experience.
                              </p>
                            </div>
                            <div
                              class="col-md-4"
                            >
                              <h5>
                                Transaction Summary
                              </h5>
                              <p>
                                Transaction summary of item purchase can not be easier.
                              </p>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>,
                    "context": Object {},
                    "current": [Circular],
                    "didError": false,
                    "earliestPendingTime": 0,
                    "earliestSuspendedTime": 0,
                    "expirationTime": 0,
                    "finishedWork": null,
                    "firstBatch": null,
                    "hydrate": false,
                    "interactionThreadID": 12,
                    "latestPendingTime": 0,
                    "latestPingedTime": 0,
                    "latestSuspendedTime": 0,
                    "memoizedInteractions": Set {},
                    "nextExpirationTimeToWorkOn": 0,
                    "nextScheduledRoot": null,
                    "pendingChildren": null,
                    "pendingCommitExpirationTime": 0,
                    "pendingContext": null,
                    "pendingInteractionMap": Map {},
                    "timeoutHandle": -1,
                  },
                  "tag": 3,
                  "treeBaseDuration": 0,
                  "type": null,
                  "updateQueue": Object {
                    "baseState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "children": <_default />,
                          }
                        }
                      />,
                    },
                    "firstCapturedEffect": null,
                    "firstCapturedUpdate": null,
                    "firstEffect": null,
                    "firstUpdate": null,
                    "lastCapturedEffect": null,
                    "lastCapturedUpdate": null,
                    "lastEffect": null,
                    "lastUpdate": null,
                  },
                },
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": WrapperComponent {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "Component": [Function],
                    "context": null,
                    "props": Object {
                      "children": <_default />,
                    },
                  },
                  "refs": Object {},
                  "state": Object {
                    "context": null,
                    "mount": true,
                    "props": Object {
                      "children": <_default />,
                    },
                  },
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 1,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": null,
              },
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": BrowserRouter {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "history": Object {
                  "action": "POP",
                  "block": [Function],
                  "createHref": [Function],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "push": [Function],
                  "replace": [Function],
                },
                "props": Object {
                  "children": <_default />,
                },
                "refs": Object {},
                "state": null,
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": null,
            },
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": FiberNode {
              "_debugID": 52,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 53,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 54,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 56,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": null,
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "elementType": "h1",
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "Grocery Listify",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": "Grocery Listify",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": FiberNode {
                      "_debugID": 57,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 58,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": null,
                        "childExpirationTime": 0,
                        "effectTag": 0,
                        "elementType": null,
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": "Grocery Store Management Made easy with",
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": "Grocery Store Management Made easy with",
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": FiberNode {
                          "_debugID": 59,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childExpirationTime": 0,
                          "effectTag": 0,
                          "elementType": null,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 1,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": " ",
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": " ",
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": FiberNode {
                            "_debugID": 60,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childExpirationTime": 0,
                            "effectTag": 1,
                            "elementType": [Function],
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 2,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "border": false,
                              "className": "",
                              "fixedWidth": false,
                              "flip": null,
                              "icon": "heart",
                              "inverse": false,
                              "listItem": false,
                              "mask": null,
                              "pull": null,
                              "pulse": false,
                              "rotation": null,
                              "size": null,
                              "spin": false,
                              "symbol": false,
                              "title": "",
                              "transform": null,
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "border": false,
                              "className": "",
                              "fixedWidth": false,
                              "flip": null,
                              "icon": "heart",
                              "inverse": false,
                              "listItem": false,
                              "mask": null,
                              "pull": null,
                              "pulse": false,
                              "rotation": null,
                              "size": null,
                              "spin": false,
                              "symbol": false,
                              "title": "",
                              "transform": null,
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": null,
                            "tag": 0,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "stateNode":  ,
                          "tag": 6,
                          "treeBaseDuration": 0,
                          "type": null,
                          "updateQueue": null,
                        },
                        "stateNode": Grocery Store Management Made easy with,
                        "tag": 6,
                        "treeBaseDuration": 0,
                        "type": null,
                        "updateQueue": null,
                      },
                      "childExpirationTime": 0,
                      "effectTag": 0,
                      "elementType": "p",
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 1,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": Array [
                          "Grocery Store Management Made easy with",
                          " ",
                          <FontAwesomeIcon
                            border={false}
                            className=""
                            fixedWidth={false}
                            flip={null}
                            icon="heart"
                            inverse={false}
                            listItem={false}
                            mask={null}
                            pull={null}
                            pulse={false}
                            rotation={null}
                            size={null}
                            spin={false}
                            symbol={false}
                            title=""
                            transform={null}
                          />,
                        ],
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": Array [
                          "Grocery Store Management Made easy with",
                          " ",
                          <FontAwesomeIcon
                            border={false}
                            className=""
                            fixedWidth={false}
                            flip={null}
                            icon="heart"
                            inverse={false}
                            listItem={false}
                            mask={null}
                            pull={null}
                            pulse={false}
                            rotation={null}
                            size={null}
                            spin={false}
                            symbol={false}
                            title=""
                            transform={null}
                          />,
                        ],
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": <p>
                        Grocery Store Management Made easy with
                         
                      </p>,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "p",
                      "updateQueue": null,
                    },
                    "stateNode": <h1>
                      Grocery Listify
                    </h1>,
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": "h1",
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "effectTag": 0,
                  "elementType": "div",
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <h1>
                        Grocery Listify
                      </h1>,
                      <p>
                        Grocery Store Management Made easy with
                         
                        <FontAwesomeIcon
                          border={false}
                          className=""
                          fixedWidth={false}
                          flip={null}
                          icon="heart"
                          inverse={false}
                          listItem={false}
                          mask={null}
                          pull={null}
                          pulse={false}
                          rotation={null}
                          size={null}
                          spin={false}
                          symbol={false}
                          title=""
                          transform={null}
                        />
                      </p>,
                    ],
                    "className": "jumbotron text-center",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": Array [
                      <h1>
                        Grocery Listify
                      </h1>,
                      <p>
                        Grocery Store Management Made easy with
                         
                        <FontAwesomeIcon
                          border={false}
                          className=""
                          fixedWidth={false}
                          flip={null}
                          icon="heart"
                          inverse={false}
                          listItem={false}
                          mask={null}
                          pull={null}
                          pulse={false}
                          rotation={null}
                          size={null}
                          spin={false}
                          symbol={false}
                          title=""
                          transform={null}
                        />
                      </p>,
                    ],
                    "className": "jumbotron text-center",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": FiberNode {
                    "_debugID": 55,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 61,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 62,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 65,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childExpirationTime": 0,
                          "effectTag": 1,
                          "elementType": [Function],
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "border": false,
                            "className": "",
                            "fixedWidth": false,
                            "flip": null,
                            "icon": "shopping-bag",
                            "inverse": false,
                            "listItem": false,
                            "mask": null,
                            "pull": null,
                            "pulse": false,
                            "rotation": null,
                            "size": null,
                            "spin": false,
                            "symbol": false,
                            "title": "",
                            "transform": null,
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "border": false,
                            "className": "",
                            "fixedWidth": false,
                            "flip": null,
                            "icon": "shopping-bag",
                            "inverse": false,
                            "listItem": false,
                            "mask": null,
                            "pull": null,
                            "pulse": false,
                            "rotation": null,
                            "size": null,
                            "spin": false,
                            "symbol": false,
                            "title": "",
                            "transform": null,
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": FiberNode {
                            "_debugID": 66,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childExpirationTime": 0,
                            "effectTag": 0,
                            "elementType": "h5",
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 1,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": "Shop",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": "Shop",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": FiberNode {
                              "_debugID": 67,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": null,
                              "childExpirationTime": 0,
                              "effectTag": 0,
                              "elementType": "p",
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": null,
                              "index": 2,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": "You can use the web app to add/remove item from a shopping experience.",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": "You can use the web app to add/remove item from a shopping experience.",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": <p>
                                You can use the web app to add/remove item from a shopping experience.
                              </p>,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "p",
                              "updateQueue": null,
                            },
                            "stateNode": <h5>
                              Shop
                            </h5>,
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": "h5",
                            "updateQueue": null,
                          },
                          "stateNode": null,
                          "tag": 0,
                          "treeBaseDuration": 0,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "childExpirationTime": 0,
                        "effectTag": 0,
                        "elementType": "div",
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": Array [
                            <FontAwesomeIcon
                              border={false}
                              className=""
                              fixedWidth={false}
                              flip={null}
                              icon="shopping-bag"
                              inverse={false}
                              listItem={false}
                              mask={null}
                              pull={null}
                              pulse={false}
                              rotation={null}
                              size={null}
                              spin={false}
                              symbol={false}
                              title=""
                              transform={null}
                            />,
                            <h5>
                              Shop
                            </h5>,
                            <p>
                              You can use the web app to add/remove item from a shopping experience.
                            </p>,
                          ],
                          "className": "col-md-4",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": Array [
                            <FontAwesomeIcon
                              border={false}
                              className=""
                              fixedWidth={false}
                              flip={null}
                              icon="shopping-bag"
                              inverse={false}
                              listItem={false}
                              mask={null}
                              pull={null}
                              pulse={false}
                              rotation={null}
                              size={null}
                              spin={false}
                              symbol={false}
                              title=""
                              transform={null}
                            />,
                            <h5>
                              Shop
                            </h5>,
                            <p>
                              You can use the web app to add/remove item from a shopping experience.
                            </p>,
                          ],
                          "className": "col-md-4",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": FiberNode {
                          "_debugID": 63,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 68,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childExpirationTime": 0,
                            "effectTag": 1,
                            "elementType": [Function],
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "border": false,
                              "className": "",
                              "fixedWidth": false,
                              "flip": null,
                              "icon": "briefcase",
                              "inverse": false,
                              "listItem": false,
                              "mask": null,
                              "pull": null,
                              "pulse": false,
                              "rotation": null,
                              "size": null,
                              "spin": false,
                              "symbol": false,
                              "title": "",
                              "transform": null,
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "border": false,
                              "className": "",
                              "fixedWidth": false,
                              "flip": null,
                              "icon": "briefcase",
                              "inverse": false,
                              "listItem": false,
                              "mask": null,
                              "pull": null,
                              "pulse": false,
                              "rotation": null,
                              "size": null,
                              "spin": false,
                              "symbol": false,
                              "title": "",
                              "transform": null,
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": FiberNode {
                              "_debugID": 69,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": null,
                              "childExpirationTime": 0,
                              "effectTag": 0,
                              "elementType": "h5",
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": null,
                              "index": 1,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": "Manage Item",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": "Manage Item",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": FiberNode {
                                "_debugID": 70,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": null,
                                "childExpirationTime": 0,
                                "effectTag": 0,
                                "elementType": "p",
                                "expirationTime": 0,
                                "firstContextDependency": null,
                                "firstEffect": null,
                                "index": 2,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": "You can manage item you add. YOu can also delete an item with a very simple user experience.",
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "children": "You can manage item you add. YOu can also delete an item with a very simple user experience.",
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": <p>
                                  You can manage item you add. YOu can also delete an item with a very simple user experience.
                                </p>,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "p",
                                "updateQueue": null,
                              },
                              "stateNode": <h5>
                                Manage Item
                              </h5>,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "h5",
                              "updateQueue": null,
                            },
                            "stateNode": null,
                            "tag": 0,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "childExpirationTime": 0,
                          "effectTag": 0,
                          "elementType": "div",
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 1,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": Array [
                              <FontAwesomeIcon
                                border={false}
                                className=""
                                fixedWidth={false}
                                flip={null}
                                icon="briefcase"
                                inverse={false}
                                listItem={false}
                                mask={null}
                                pull={null}
                                pulse={false}
                                rotation={null}
                                size={null}
                                spin={false}
                                symbol={false}
                                title=""
                                transform={null}
                              />,
                              <h5>
                                Manage Item
                              </h5>,
                              <p>
                                You can manage item you add. YOu can also delete an item with a very simple user experience.
                              </p>,
                            ],
                            "className": "col-md-4",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": Array [
                              <FontAwesomeIcon
                                border={false}
                                className=""
                                fixedWidth={false}
                                flip={null}
                                icon="briefcase"
                                inverse={false}
                                listItem={false}
                                mask={null}
                                pull={null}
                                pulse={false}
                                rotation={null}
                                size={null}
                                spin={false}
                                symbol={false}
                                title=""
                                transform={null}
                              />,
                              <h5>
                                Manage Item
                              </h5>,
                              <p>
                                You can manage item you add. YOu can also delete an item with a very simple user experience.
                              </p>,
                            ],
                            "className": "col-md-4",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": FiberNode {
                            "_debugID": 64,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": FiberNode {
                              "_debugID": 71,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": null,
                              "childExpirationTime": 0,
                              "effectTag": 1,
                              "elementType": [Function],
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "border": false,
                                "className": "",
                                "fixedWidth": false,
                                "flip": null,
                                "icon": "chart-line",
                                "inverse": false,
                                "listItem": false,
                                "mask": null,
                                "pull": null,
                                "pulse": false,
                                "rotation": null,
                                "size": null,
                                "spin": false,
                                "symbol": false,
                                "title": "",
                                "transform": null,
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "border": false,
                                "className": "",
                                "fixedWidth": false,
                                "flip": null,
                                "icon": "chart-line",
                                "inverse": false,
                                "listItem": false,
                                "mask": null,
                                "pull": null,
                                "pulse": false,
                                "rotation": null,
                                "size": null,
                                "spin": false,
                                "symbol": false,
                                "title": "",
                                "transform": null,
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": FiberNode {
                                "_debugID": 72,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": null,
                                "childExpirationTime": 0,
                                "effectTag": 0,
                                "elementType": "h5",
                                "expirationTime": 0,
                                "firstContextDependency": null,
                                "firstEffect": null,
                                "index": 1,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": "Transaction Summary",
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "children": "Transaction Summary",
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": FiberNode {
                                  "_debugID": 73,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": null,
                                  "childExpirationTime": 0,
                                  "effectTag": 0,
                                  "elementType": "p",
                                  "expirationTime": 0,
                                  "firstContextDependency": null,
                                  "firstEffect": null,
                                  "index": 2,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "children": "Transaction summary of item purchase can not be easier.",
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "children": "Transaction summary of item purchase can not be easier.",
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": <p>
                                    Transaction summary of item purchase can not be easier.
                                  </p>,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "p",
                                  "updateQueue": null,
                                },
                                "stateNode": <h5>
                                  Transaction Summary
                                </h5>,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "h5",
                                "updateQueue": null,
                              },
                              "stateNode": null,
                              "tag": 0,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": null,
                            },
                            "childExpirationTime": 0,
                            "effectTag": 0,
                            "elementType": "div",
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 2,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": Array [
                                <FontAwesomeIcon
                                  border={false}
                                  className=""
                                  fixedWidth={false}
                                  flip={null}
                                  icon="chart-line"
                                  inverse={false}
                                  listItem={false}
                                  mask={null}
                                  pull={null}
                                  pulse={false}
                                  rotation={null}
                                  size={null}
                                  spin={false}
                                  symbol={false}
                                  title=""
                                  transform={null}
                                />,
                                <h5>
                                  Transaction Summary
                                </h5>,
                                <p>
                                  Transaction summary of item purchase can not be easier.
                                </p>,
                              ],
                              "className": "col-md-4",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": Array [
                                <FontAwesomeIcon
                                  border={false}
                                  className=""
                                  fixedWidth={false}
                                  flip={null}
                                  icon="chart-line"
                                  inverse={false}
                                  listItem={false}
                                  mask={null}
                                  pull={null}
                                  pulse={false}
                                  rotation={null}
                                  size={null}
                                  spin={false}
                                  symbol={false}
                                  title=""
                                  transform={null}
                                />,
                                <h5>
                                  Transaction Summary
                                </h5>,
                                <p>
                                  Transaction summary of item purchase can not be easier.
                                </p>,
                              ],
                              "className": "col-md-4",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": <div
                              class="col-md-4"
                            >
                              <h5>
                                Transaction Summary
                              </h5>
                              <p>
                                Transaction summary of item purchase can not be easier.
                              </p>
                            </div>,
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": "div",
                            "updateQueue": null,
                          },
                          "stateNode": <div
                            class="col-md-4"
                          >
                            <h5>
                              Manage Item
                            </h5>
                            <p>
                              You can manage item you add. YOu can also delete an item with a very simple user experience.
                            </p>
                          </div>,
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": "div",
                          "updateQueue": null,
                        },
                        "stateNode": <div
                          class="col-md-4"
                        >
                          <h5>
                            Shop
                          </h5>
                          <p>
                            You can use the web app to add/remove item from a shopping experience.
                          </p>
                        </div>,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "childExpirationTime": 0,
                      "effectTag": 0,
                      "elementType": "div",
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": Array [
                          <div
                            className="col-md-4"
                          >
                            <FontAwesomeIcon
                              border={false}
                              className=""
                              fixedWidth={false}
                              flip={null}
                              icon="shopping-bag"
                              inverse={false}
                              listItem={false}
                              mask={null}
                              pull={null}
                              pulse={false}
                              rotation={null}
                              size={null}
                              spin={false}
                              symbol={false}
                              title=""
                              transform={null}
                            />
                            <h5>
                              Shop
                            </h5>
                            <p>
                              You can use the web app to add/remove item from a shopping experience.
                            </p>
                          </div>,
                          <div
                            className="col-md-4"
                          >
                            <FontAwesomeIcon
                              border={false}
                              className=""
                              fixedWidth={false}
                              flip={null}
                              icon="briefcase"
                              inverse={false}
                              listItem={false}
                              mask={null}
                              pull={null}
                              pulse={false}
                              rotation={null}
                              size={null}
                              spin={false}
                              symbol={false}
                              title=""
                              transform={null}
                            />
                            <h5>
                              Manage Item
                            </h5>
                            <p>
                              You can manage item you add. YOu can also delete an item with a very simple user experience.
                            </p>
                          </div>,
                          <div
                            className="col-md-4"
                          >
                            <FontAwesomeIcon
                              border={false}
                              className=""
                              fixedWidth={false}
                              flip={null}
                              icon="chart-line"
                              inverse={false}
                              listItem={false}
                              mask={null}
                              pull={null}
                              pulse={false}
                              rotation={null}
                              size={null}
                              spin={false}
                              symbol={false}
                              title=""
                              transform={null}
                            />
                            <h5>
                              Transaction Summary
                            </h5>
                            <p>
                              Transaction summary of item purchase can not be easier.
                            </p>
                          </div>,
                        ],
                        "className": "row text-center",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": Array [
                          <div
                            className="col-md-4"
                          >
                            <FontAwesomeIcon
                              border={false}
                              className=""
                              fixedWidth={false}
                              flip={null}
                              icon="shopping-bag"
                              inverse={false}
                              listItem={false}
                              mask={null}
                              pull={null}
                              pulse={false}
                              rotation={null}
                              size={null}
                              spin={false}
                              symbol={false}
                              title=""
                              transform={null}
                            />
                            <h5>
                              Shop
                            </h5>
                            <p>
                              You can use the web app to add/remove item from a shopping experience.
                            </p>
                          </div>,
                          <div
                            className="col-md-4"
                          >
                            <FontAwesomeIcon
                              border={false}
                              className=""
                              fixedWidth={false}
                              flip={null}
                              icon="briefcase"
                              inverse={false}
                              listItem={false}
                              mask={null}
                              pull={null}
                              pulse={false}
                              rotation={null}
                              size={null}
                              spin={false}
                              symbol={false}
                              title=""
                              transform={null}
                            />
                            <h5>
                              Manage Item
                            </h5>
                            <p>
                              You can manage item you add. YOu can also delete an item with a very simple user experience.
                            </p>
                          </div>,
                          <div
                            className="col-md-4"
                          >
                            <FontAwesomeIcon
                              border={false}
                              className=""
                              fixedWidth={false}
                              flip={null}
                              icon="chart-line"
                              inverse={false}
                              listItem={false}
                              mask={null}
                              pull={null}
                              pulse={false}
                              rotation={null}
                              size={null}
                              spin={false}
                              symbol={false}
                              title=""
                              transform={null}
                            />
                            <h5>
                              Transaction Summary
                            </h5>
                            <p>
                              Transaction summary of item purchase can not be easier.
                            </p>
                          </div>,
                        ],
                        "className": "row text-center",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": <div
                        class="row text-center"
                      >
                        <div
                          class="col-md-4"
                        >
                          <h5>
                            Shop
                          </h5>
                          <p>
                            You can use the web app to add/remove item from a shopping experience.
                          </p>
                        </div>
                        <div
                          class="col-md-4"
                        >
                          <h5>
                            Manage Item
                          </h5>
                          <p>
                            You can manage item you add. YOu can also delete an item with a very simple user experience.
                          </p>
                        </div>
                        <div
                          class="col-md-4"
                        >
                          <h5>
                            Transaction Summary
                          </h5>
                          <p>
                            Transaction summary of item purchase can not be easier.
                          </p>
                        </div>
                      </div>,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "elementType": "div",
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 1,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": <div
                        className="row text-center"
                      >
                        <div
                          className="col-md-4"
                        >
                          <FontAwesomeIcon
                            border={false}
                            className=""
                            fixedWidth={false}
                            flip={null}
                            icon="shopping-bag"
                            inverse={false}
                            listItem={false}
                            mask={null}
                            pull={null}
                            pulse={false}
                            rotation={null}
                            size={null}
                            spin={false}
                            symbol={false}
                            title=""
                            transform={null}
                          />
                          <h5>
                            Shop
                          </h5>
                          <p>
                            You can use the web app to add/remove item from a shopping experience.
                          </p>
                        </div>
                        <div
                          className="col-md-4"
                        >
                          <FontAwesomeIcon
                            border={false}
                            className=""
                            fixedWidth={false}
                            flip={null}
                            icon="briefcase"
                            inverse={false}
                            listItem={false}
                            mask={null}
                            pull={null}
                            pulse={false}
                            rotation={null}
                            size={null}
                            spin={false}
                            symbol={false}
                            title=""
                            transform={null}
                          />
                          <h5>
                            Manage Item
                          </h5>
                          <p>
                            You can manage item you add. YOu can also delete an item with a very simple user experience.
                          </p>
                        </div>
                        <div
                          className="col-md-4"
                        >
                          <FontAwesomeIcon
                            border={false}
                            className=""
                            fixedWidth={false}
                            flip={null}
                            icon="chart-line"
                            inverse={false}
                            listItem={false}
                            mask={null}
                            pull={null}
                            pulse={false}
                            rotation={null}
                            size={null}
                            spin={false}
                            symbol={false}
                            title=""
                            transform={null}
                          />
                          <h5>
                            Transaction Summary
                          </h5>
                          <p>
                            Transaction summary of item purchase can not be easier.
                          </p>
                        </div>
                      </div>,
                      "className": "container home",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": <div
                        className="row text-center"
                      >
                        <div
                          className="col-md-4"
                        >
                          <FontAwesomeIcon
                            border={false}
                            className=""
                            fixedWidth={false}
                            flip={null}
                            icon="shopping-bag"
                            inverse={false}
                            listItem={false}
                            mask={null}
                            pull={null}
                            pulse={false}
                            rotation={null}
                            size={null}
                            spin={false}
                            symbol={false}
                            title=""
                            transform={null}
                          />
                          <h5>
                            Shop
                          </h5>
                          <p>
                            You can use the web app to add/remove item from a shopping experience.
                          </p>
                        </div>
                        <div
                          className="col-md-4"
                        >
                          <FontAwesomeIcon
                            border={false}
                            className=""
                            fixedWidth={false}
                            flip={null}
                            icon="briefcase"
                            inverse={false}
                            listItem={false}
                            mask={null}
                            pull={null}
                            pulse={false}
                            rotation={null}
                            size={null}
                            spin={false}
                            symbol={false}
                            title=""
                            transform={null}
                          />
                          <h5>
                            Manage Item
                          </h5>
                          <p>
                            You can manage item you add. YOu can also delete an item with a very simple user experience.
                          </p>
                        </div>
                        <div
                          className="col-md-4"
                        >
                          <FontAwesomeIcon
                            border={false}
                            className=""
                            fixedWidth={false}
                            flip={null}
                            icon="chart-line"
                            inverse={false}
                            listItem={false}
                            mask={null}
                            pull={null}
                            pulse={false}
                            rotation={null}
                            size={null}
                            spin={false}
                            symbol={false}
                            title=""
                            transform={null}
                          />
                          <h5>
                            Transaction Summary
                          </h5>
                          <p>
                            Transaction summary of item purchase can not be easier.
                          </p>
                        </div>
                      </div>,
                      "className": "container home",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": <div
                      class="container home"
                    >
                      <div
                        class="row text-center"
                      >
                        <div
                          class="col-md-4"
                        >
                          <h5>
                            Shop
                          </h5>
                          <p>
                            You can use the web app to add/remove item from a shopping experience.
                          </p>
                        </div>
                        <div
                          class="col-md-4"
                        >
                          <h5>
                            Manage Item
                          </h5>
                          <p>
                            You can manage item you add. YOu can also delete an item with a very simple user experience.
                          </p>
                        </div>
                        <div
                          class="col-md-4"
                        >
                          <h5>
                            Transaction Summary
                          </h5>
                          <p>
                            Transaction summary of item purchase can not be easier.
                          </p>
                        </div>
                      </div>
                    </div>,
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "stateNode": <div
                    class="jumbotron text-center"
                  >
                    <h1>
                      Grocery Listify
                    </h1>
                    <p>
                      Grocery Store Management Made easy with
                       
                    </p>
                  </div>,
                  "tag": 5,
                  "treeBaseDuration": 0,
                  "type": "div",
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "effectTag": 0,
                "elementType": "div",
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <div
                      className="jumbotron text-center"
                    >
                      <h1>
                        Grocery Listify
                      </h1>
                      <p>
                        Grocery Store Management Made easy with
                         
                        <FontAwesomeIcon
                          border={false}
                          className=""
                          fixedWidth={false}
                          flip={null}
                          icon="heart"
                          inverse={false}
                          listItem={false}
                          mask={null}
                          pull={null}
                          pulse={false}
                          rotation={null}
                          size={null}
                          spin={false}
                          symbol={false}
                          title=""
                          transform={null}
                        />
                      </p>
                    </div>,
                    <div
                      className="container home"
                    >
                      <div
                        className="row text-center"
                      >
                        <div
                          className="col-md-4"
                        >
                          <FontAwesomeIcon
                            border={false}
                            className=""
                            fixedWidth={false}
                            flip={null}
                            icon="shopping-bag"
                            inverse={false}
                            listItem={false}
                            mask={null}
                            pull={null}
                            pulse={false}
                            rotation={null}
                            size={null}
                            spin={false}
                            symbol={false}
                            title=""
                            transform={null}
                          />
                          <h5>
                            Shop
                          </h5>
                          <p>
                            You can use the web app to add/remove item from a shopping experience.
                          </p>
                        </div>
                        <div
                          className="col-md-4"
                        >
                          <FontAwesomeIcon
                            border={false}
                            className=""
                            fixedWidth={false}
                            flip={null}
                            icon="briefcase"
                            inverse={false}
                            listItem={false}
                            mask={null}
                            pull={null}
                            pulse={false}
                            rotation={null}
                            size={null}
                            spin={false}
                            symbol={false}
                            title=""
                            transform={null}
                          />
                          <h5>
                            Manage Item
                          </h5>
                          <p>
                            You can manage item you add. YOu can also delete an item with a very simple user experience.
                          </p>
                        </div>
                        <div
                          className="col-md-4"
                        >
                          <FontAwesomeIcon
                            border={false}
                            className=""
                            fixedWidth={false}
                            flip={null}
                            icon="chart-line"
                            inverse={false}
                            listItem={false}
                            mask={null}
                            pull={null}
                            pulse={false}
                            rotation={null}
                            size={null}
                            spin={false}
                            symbol={false}
                            title=""
                            transform={null}
                          />
                          <h5>
                            Transaction Summary
                          </h5>
                          <p>
                            Transaction summary of item purchase can not be easier.
                          </p>
                        </div>
                      </div>
                    </div>,
                  ],
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": Array [
                    <div
                      className="jumbotron text-center"
                    >
                      <h1>
                        Grocery Listify
                      </h1>
                      <p>
                        Grocery Store Management Made easy with
                         
                        <FontAwesomeIcon
                          border={false}
                          className=""
                          fixedWidth={false}
                          flip={null}
                          icon="heart"
                          inverse={false}
                          listItem={false}
                          mask={null}
                          pull={null}
                          pulse={false}
                          rotation={null}
                          size={null}
                          spin={false}
                          symbol={false}
                          title=""
                          transform={null}
                        />
                      </p>
                    </div>,
                    <div
                      className="container home"
                    >
                      <div
                        className="row text-center"
                      >
                        <div
                          className="col-md-4"
                        >
                          <FontAwesomeIcon
                            border={false}
                            className=""
                            fixedWidth={false}
                            flip={null}
                            icon="shopping-bag"
                            inverse={false}
                            listItem={false}
                            mask={null}
                            pull={null}
                            pulse={false}
                            rotation={null}
                            size={null}
                            spin={false}
                            symbol={false}
                            title=""
                            transform={null}
                          />
                          <h5>
                            Shop
                          </h5>
                          <p>
                            You can use the web app to add/remove item from a shopping experience.
                          </p>
                        </div>
                        <div
                          className="col-md-4"
                        >
                          <FontAwesomeIcon
                            border={false}
                            className=""
                            fixedWidth={false}
                            flip={null}
                            icon="briefcase"
                            inverse={false}
                            listItem={false}
                            mask={null}
                            pull={null}
                            pulse={false}
                            rotation={null}
                            size={null}
                            spin={false}
                            symbol={false}
                            title=""
                            transform={null}
                          />
                          <h5>
                            Manage Item
                          </h5>
                          <p>
                            You can manage item you add. YOu can also delete an item with a very simple user experience.
                          </p>
                        </div>
                        <div
                          className="col-md-4"
                        >
                          <FontAwesomeIcon
                            border={false}
                            className=""
                            fixedWidth={false}
                            flip={null}
                            icon="chart-line"
                            inverse={false}
                            listItem={false}
                            mask={null}
                            pull={null}
                            pulse={false}
                            rotation={null}
                            size={null}
                            spin={false}
                            symbol={false}
                            title=""
                            transform={null}
                          />
                          <h5>
                            Transaction Summary
                          </h5>
                          <p>
                            Transaction summary of item purchase can not be easier.
                          </p>
                        </div>
                      </div>
                    </div>,
                  ],
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": <div>
                  <div
                    class="jumbotron text-center"
                  >
                    <h1>
                      Grocery Listify
                    </h1>
                    <p>
                      Grocery Store Management Made easy with
                       
                    </p>
                  </div>
                  <div
                    class="container home"
                  >
                    <div
                      class="row text-center"
                    >
                      <div
                        class="col-md-4"
                      >
                        <h5>
                          Shop
                        </h5>
                        <p>
                          You can use the web app to add/remove item from a shopping experience.
                        </p>
                      </div>
                      <div
                        class="col-md-4"
                      >
                        <h5>
                          Manage Item
                        </h5>
                        <p>
                          You can manage item you add. YOu can also delete an item with a very simple user experience.
                        </p>
                      </div>
                      <div
                        class="col-md-4"
                      >
                        <h5>
                          Transaction Summary
                        </h5>
                        <p>
                          Transaction summary of item purchase can not be easier.
                        </p>
                      </div>
                    </div>
                  </div>
                </div>,
                "tag": 5,
                "treeBaseDuration": 0,
                "type": "div",
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {},
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {},
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 0,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": null,
            },
            "childExpirationTime": 0,
            "effectTag": 1,
            "elementType": [Function],
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": <_default />,
              "history": Object {
                "action": "POP",
                "block": [Function],
                "createHref": [Function],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "push": [Function],
                "replace": [Function],
              },
            },
            "memoizedState": Object {
              "match": Object {
                "isExact": true,
                "params": Object {},
                "path": "/",
                "url": "/",
              },
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": <_default />,
              "history": Object {
                "action": "POP",
                "block": [Function],
                "createHref": [Function],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "push": [Function],
                "replace": [Function],
              },
            },
            "ref": null,
            "return": FiberNode {
              "_debugID": 50,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": FiberNode {
                "_debugID": 49,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childExpirationTime": 0,
                "effectTag": 1,
                "elementType": [Function],
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "children": <_default />,
                  },
                },
                "memoizedState": Object {
                  "context": null,
                  "mount": true,
                  "props": Object {
                    "children": <_default />,
                  },
                },
                "mode": 0,
                "nextEffect": FiberNode {
                  "_debugID": 47,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": FiberNode {
                    "_debugID": 47,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": [Circular],
                    "child": null,
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "elementType": null,
                    "expirationTime": 1073741823,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": null,
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div>
                        <div>
                          <div
                            class="jumbotron text-center"
                          >
                            <h1>
                              Grocery Listify
                            </h1>
                            <p>
                              Grocery Store Management Made easy with
                               
                            </p>
                          </div>
                          <div
                            class="container home"
                          >
                            <div
                              class="row text-center"
                            >
                              <div
                                class="col-md-4"
                              >
                                <h5>
                                  Shop
                                </h5>
                                <p>
                                  You can use the web app to add/remove item from a shopping experience.
                                </p>
                              </div>
                              <div
                                class="col-md-4"
                              >
                                <h5>
                                  Manage Item
                                </h5>
                                <p>
                                  You can manage item you add. YOu can also delete an item with a very simple user experience.
                                </p>
                              </div>
                              <div
                                class="col-md-4"
                              >
                                <h5>
                                  Transaction Summary
                                </h5>
                                <p>
                                  Transaction summary of item purchase can not be easier.
                                </p>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>,
                      "context": Object {},
                      "current": [Circular],
                      "didError": false,
                      "earliestPendingTime": 0,
                      "earliestSuspendedTime": 0,
                      "expirationTime": 0,
                      "finishedWork": null,
                      "firstBatch": null,
                      "hydrate": false,
                      "interactionThreadID": 12,
                      "latestPendingTime": 0,
                      "latestPingedTime": 0,
                      "latestSuspendedTime": 0,
                      "memoizedInteractions": Set {},
                      "nextExpirationTimeToWorkOn": 0,
                      "nextScheduledRoot": null,
                      "pendingChildren": null,
                      "pendingCommitExpirationTime": 0,
                      "pendingContext": null,
                      "pendingInteractionMap": Map {},
                      "timeoutHandle": -1,
                    },
                    "tag": 3,
                    "treeBaseDuration": 0,
                    "type": null,
                    "updateQueue": Object {
                      "baseState": null,
                      "firstCapturedEffect": null,
                      "firstCapturedUpdate": null,
                      "firstEffect": null,
                      "firstUpdate": Object {
                        "callback": null,
                        "expirationTime": 1073741823,
                        "next": null,
                        "nextEffect": null,
                        "payload": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "children": <_default />,
                              }
                            }
                          />,
                        },
                        "tag": 0,
                      },
                      "lastCapturedEffect": null,
                      "lastCapturedUpdate": null,
                      "lastEffect": null,
                      "lastUpdate": Object {
                        "callback": null,
                        "expirationTime": 1073741823,
                        "next": null,
                        "nextEffect": null,
                        "payload": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "children": <_default />,
                              }
                            }
                          />,
                        },
                        "tag": 0,
                      },
                    },
                  },
                  "child": [Circular],
                  "childExpirationTime": 0,
                  "effectTag": 32,
                  "elementType": null,
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": null,
                  "memoizedState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "children": <_default />,
                        }
                      }
                    />,
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": Object {
                    "containerInfo": <div>
                      <div>
                        <div
                          class="jumbotron text-center"
                        >
                          <h1>
                            Grocery Listify
                          </h1>
                          <p>
                            Grocery Store Management Made easy with
                             
                          </p>
                        </div>
                        <div
                          class="container home"
                        >
                          <div
                            class="row text-center"
                          >
                            <div
                              class="col-md-4"
                            >
                              <h5>
                                Shop
                              </h5>
                              <p>
                                You can use the web app to add/remove item from a shopping experience.
                              </p>
                            </div>
                            <div
                              class="col-md-4"
                            >
                              <h5>
                                Manage Item
                              </h5>
                              <p>
                                You can manage item you add. YOu can also delete an item with a very simple user experience.
                              </p>
                            </div>
                            <div
                              class="col-md-4"
                            >
                              <h5>
                                Transaction Summary
                              </h5>
                              <p>
                                Transaction summary of item purchase can not be easier.
                              </p>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>,
                    "context": Object {},
                    "current": [Circular],
                    "didError": false,
                    "earliestPendingTime": 0,
                    "earliestSuspendedTime": 0,
                    "expirationTime": 0,
                    "finishedWork": null,
                    "firstBatch": null,
                    "hydrate": false,
                    "interactionThreadID": 12,
                    "latestPendingTime": 0,
                    "latestPingedTime": 0,
                    "latestSuspendedTime": 0,
                    "memoizedInteractions": Set {},
                    "nextExpirationTimeToWorkOn": 0,
                    "nextScheduledRoot": null,
                    "pendingChildren": null,
                    "pendingCommitExpirationTime": 0,
                    "pendingContext": null,
                    "pendingInteractionMap": Map {},
                    "timeoutHandle": -1,
                  },
                  "tag": 3,
                  "treeBaseDuration": 0,
                  "type": null,
                  "updateQueue": Object {
                    "baseState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "children": <_default />,
                          }
                        }
                      />,
                    },
                    "firstCapturedEffect": null,
                    "firstCapturedUpdate": null,
                    "firstEffect": null,
                    "firstUpdate": null,
                    "lastCapturedEffect": null,
                    "lastCapturedUpdate": null,
                    "lastEffect": null,
                    "lastUpdate": null,
                  },
                },
                "pendingProps": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "children": <_default />,
                  },
                },
                "ref": null,
                "return": FiberNode {
                  "_debugID": 47,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": FiberNode {
                    "_debugID": 47,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": [Circular],
                    "child": null,
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "elementType": null,
                    "expirationTime": 1073741823,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": null,
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div>
                        <div>
                          <div
                            class="jumbotron text-center"
                          >
                            <h1>
                              Grocery Listify
                            </h1>
                            <p>
                              Grocery Store Management Made easy with
                               
                            </p>
                          </div>
                          <div
                            class="container home"
                          >
                            <div
                              class="row text-center"
                            >
                              <div
                                class="col-md-4"
                              >
                                <h5>
                                  Shop
                                </h5>
                                <p>
                                  You can use the web app to add/remove item from a shopping experience.
                                </p>
                              </div>
                              <div
                                class="col-md-4"
                              >
                                <h5>
                                  Manage Item
                                </h5>
                                <p>
                                  You can manage item you add. YOu can also delete an item with a very simple user experience.
                                </p>
                              </div>
                              <div
                                class="col-md-4"
                              >
                                <h5>
                                  Transaction Summary
                                </h5>
                                <p>
                                  Transaction summary of item purchase can not be easier.
                                </p>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>,
                      "context": Object {},
                      "current": [Circular],
                      "didError": false,
                      "earliestPendingTime": 0,
                      "earliestSuspendedTime": 0,
                      "expirationTime": 0,
                      "finishedWork": null,
                      "firstBatch": null,
                      "hydrate": false,
                      "interactionThreadID": 12,
                      "latestPendingTime": 0,
                      "latestPingedTime": 0,
                      "latestSuspendedTime": 0,
                      "memoizedInteractions": Set {},
                      "nextExpirationTimeToWorkOn": 0,
                      "nextScheduledRoot": null,
                      "pendingChildren": null,
                      "pendingCommitExpirationTime": 0,
                      "pendingContext": null,
                      "pendingInteractionMap": Map {},
                      "timeoutHandle": -1,
                    },
                    "tag": 3,
                    "treeBaseDuration": 0,
                    "type": null,
                    "updateQueue": Object {
                      "baseState": null,
                      "firstCapturedEffect": null,
                      "firstCapturedUpdate": null,
                      "firstEffect": null,
                      "firstUpdate": Object {
                        "callback": null,
                        "expirationTime": 1073741823,
                        "next": null,
                        "nextEffect": null,
                        "payload": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "children": <_default />,
                              }
                            }
                          />,
                        },
                        "tag": 0,
                      },
                      "lastCapturedEffect": null,
                      "lastCapturedUpdate": null,
                      "lastEffect": null,
                      "lastUpdate": Object {
                        "callback": null,
                        "expirationTime": 1073741823,
                        "next": null,
                        "nextEffect": null,
                        "payload": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "children": <_default />,
                              }
                            }
                          />,
                        },
                        "tag": 0,
                      },
                    },
                  },
                  "child": [Circular],
                  "childExpirationTime": 0,
                  "effectTag": 32,
                  "elementType": null,
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": null,
                  "memoizedState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "children": <_default />,
                        }
                      }
                    />,
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": Object {
                    "containerInfo": <div>
                      <div>
                        <div
                          class="jumbotron text-center"
                        >
                          <h1>
                            Grocery Listify
                          </h1>
                          <p>
                            Grocery Store Management Made easy with
                             
                          </p>
                        </div>
                        <div
                          class="container home"
                        >
                          <div
                            class="row text-center"
                          >
                            <div
                              class="col-md-4"
                            >
                              <h5>
                                Shop
                              </h5>
                              <p>
                                You can use the web app to add/remove item from a shopping experience.
                              </p>
                            </div>
                            <div
                              class="col-md-4"
                            >
                              <h5>
                                Manage Item
                              </h5>
                              <p>
                                You can manage item you add. YOu can also delete an item with a very simple user experience.
                              </p>
                            </div>
                            <div
                              class="col-md-4"
                            >
                              <h5>
                                Transaction Summary
                              </h5>
                              <p>
                                Transaction summary of item purchase can not be easier.
                              </p>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>,
                    "context": Object {},
                    "current": [Circular],
                    "didError": false,
                    "earliestPendingTime": 0,
                    "earliestSuspendedTime": 0,
                    "expirationTime": 0,
                    "finishedWork": null,
                    "firstBatch": null,
                    "hydrate": false,
                    "interactionThreadID": 12,
                    "latestPendingTime": 0,
                    "latestPingedTime": 0,
                    "latestSuspendedTime": 0,
                    "memoizedInteractions": Set {},
                    "nextExpirationTimeToWorkOn": 0,
                    "nextScheduledRoot": null,
                    "pendingChildren": null,
                    "pendingCommitExpirationTime": 0,
                    "pendingContext": null,
                    "pendingInteractionMap": Map {},
                    "timeoutHandle": -1,
                  },
                  "tag": 3,
                  "treeBaseDuration": 0,
                  "type": null,
                  "updateQueue": Object {
                    "baseState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "children": <_default />,
                          }
                        }
                      />,
                    },
                    "firstCapturedEffect": null,
                    "firstCapturedUpdate": null,
                    "firstEffect": null,
                    "firstUpdate": null,
                    "lastCapturedEffect": null,
                    "lastCapturedUpdate": null,
                    "lastEffect": null,
                    "lastUpdate": null,
                  },
                },
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": WrapperComponent {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "Component": [Function],
                    "context": null,
                    "props": Object {
                      "children": <_default />,
                    },
                  },
                  "refs": Object {},
                  "state": Object {
                    "context": null,
                    "mount": true,
                    "props": Object {
                      "children": <_default />,
                    },
                  },
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 1,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": null,
              },
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": <_default />,
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": <_default />,
              },
              "ref": null,
              "return": FiberNode {
                "_debugID": 49,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childExpirationTime": 0,
                "effectTag": 1,
                "elementType": [Function],
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "children": <_default />,
                  },
                },
                "memoizedState": Object {
                  "context": null,
                  "mount": true,
                  "props": Object {
                    "children": <_default />,
                  },
                },
                "mode": 0,
                "nextEffect": FiberNode {
                  "_debugID": 47,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": FiberNode {
                    "_debugID": 47,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": [Circular],
                    "child": null,
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "elementType": null,
                    "expirationTime": 1073741823,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": null,
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div>
                        <div>
                          <div
                            class="jumbotron text-center"
                          >
                            <h1>
                              Grocery Listify
                            </h1>
                            <p>
                              Grocery Store Management Made easy with
                               
                            </p>
                          </div>
                          <div
                            class="container home"
                          >
                            <div
                              class="row text-center"
                            >
                              <div
                                class="col-md-4"
                              >
                                <h5>
                                  Shop
                                </h5>
                                <p>
                                  You can use the web app to add/remove item from a shopping experience.
                                </p>
                              </div>
                              <div
                                class="col-md-4"
                              >
                                <h5>
                                  Manage Item
                                </h5>
                                <p>
                                  You can manage item you add. YOu can also delete an item with a very simple user experience.
                                </p>
                              </div>
                              <div
                                class="col-md-4"
                              >
                                <h5>
                                  Transaction Summary
                                </h5>
                                <p>
                                  Transaction summary of item purchase can not be easier.
                                </p>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>,
                      "context": Object {},
                      "current": [Circular],
                      "didError": false,
                      "earliestPendingTime": 0,
                      "earliestSuspendedTime": 0,
                      "expirationTime": 0,
                      "finishedWork": null,
                      "firstBatch": null,
                      "hydrate": false,
                      "interactionThreadID": 12,
                      "latestPendingTime": 0,
                      "latestPingedTime": 0,
                      "latestSuspendedTime": 0,
                      "memoizedInteractions": Set {},
                      "nextExpirationTimeToWorkOn": 0,
                      "nextScheduledRoot": null,
                      "pendingChildren": null,
                      "pendingCommitExpirationTime": 0,
                      "pendingContext": null,
                      "pendingInteractionMap": Map {},
                      "timeoutHandle": -1,
                    },
                    "tag": 3,
                    "treeBaseDuration": 0,
                    "type": null,
                    "updateQueue": Object {
                      "baseState": null,
                      "firstCapturedEffect": null,
                      "firstCapturedUpdate": null,
                      "firstEffect": null,
                      "firstUpdate": Object {
                        "callback": null,
                        "expirationTime": 1073741823,
                        "next": null,
                        "nextEffect": null,
                        "payload": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "children": <_default />,
                              }
                            }
                          />,
                        },
                        "tag": 0,
                      },
                      "lastCapturedEffect": null,
                      "lastCapturedUpdate": null,
                      "lastEffect": null,
                      "lastUpdate": Object {
                        "callback": null,
                        "expirationTime": 1073741823,
                        "next": null,
                        "nextEffect": null,
                        "payload": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "children": <_default />,
                              }
                            }
                          />,
                        },
                        "tag": 0,
                      },
                    },
                  },
                  "child": [Circular],
                  "childExpirationTime": 0,
                  "effectTag": 32,
                  "elementType": null,
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": null,
                  "memoizedState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "children": <_default />,
                        }
                      }
                    />,
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": Object {
                    "containerInfo": <div>
                      <div>
                        <div
                          class="jumbotron text-center"
                        >
                          <h1>
                            Grocery Listify
                          </h1>
                          <p>
                            Grocery Store Management Made easy with
                             
                          </p>
                        </div>
                        <div
                          class="container home"
                        >
                          <div
                            class="row text-center"
                          >
                            <div
                              class="col-md-4"
                            >
                              <h5>
                                Shop
                              </h5>
                              <p>
                                You can use the web app to add/remove item from a shopping experience.
                              </p>
                            </div>
                            <div
                              class="col-md-4"
                            >
                              <h5>
                                Manage Item
                              </h5>
                              <p>
                                You can manage item you add. YOu can also delete an item with a very simple user experience.
                              </p>
                            </div>
                            <div
                              class="col-md-4"
                            >
                              <h5>
                                Transaction Summary
                              </h5>
                              <p>
                                Transaction summary of item purchase can not be easier.
                              </p>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>,
                    "context": Object {},
                    "current": [Circular],
                    "didError": false,
                    "earliestPendingTime": 0,
                    "earliestSuspendedTime": 0,
                    "expirationTime": 0,
                    "finishedWork": null,
                    "firstBatch": null,
                    "hydrate": false,
                    "interactionThreadID": 12,
                    "latestPendingTime": 0,
                    "latestPingedTime": 0,
                    "latestSuspendedTime": 0,
                    "memoizedInteractions": Set {},
                    "nextExpirationTimeToWorkOn": 0,
                    "nextScheduledRoot": null,
                    "pendingChildren": null,
                    "pendingCommitExpirationTime": 0,
                    "pendingContext": null,
                    "pendingInteractionMap": Map {},
                    "timeoutHandle": -1,
                  },
                  "tag": 3,
                  "treeBaseDuration": 0,
                  "type": null,
                  "updateQueue": Object {
                    "baseState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "children": <_default />,
                          }
                        }
                      />,
                    },
                    "firstCapturedEffect": null,
                    "firstCapturedUpdate": null,
                    "firstEffect": null,
                    "firstUpdate": null,
                    "lastCapturedEffect": null,
                    "lastCapturedUpdate": null,
                    "lastEffect": null,
                    "lastUpdate": null,
                  },
                },
                "pendingProps": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "children": <_default />,
                  },
                },
                "ref": null,
                "return": FiberNode {
                  "_debugID": 47,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": FiberNode {
                    "_debugID": 47,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": [Circular],
                    "child": null,
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "elementType": null,
                    "expirationTime": 1073741823,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": null,
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div>
                        <div>
                          <div
                            class="jumbotron text-center"
                          >
                            <h1>
                              Grocery Listify
                            </h1>
                            <p>
                              Grocery Store Management Made easy with
                               
                            </p>
                          </div>
                          <div
                            class="container home"
                          >
                            <div
                              class="row text-center"
                            >
                              <div
                                class="col-md-4"
                              >
                                <h5>
                                  Shop
                                </h5>
                                <p>
                                  You can use the web app to add/remove item from a shopping experience.
                                </p>
                              </div>
                              <div
                                class="col-md-4"
                              >
                                <h5>
                                  Manage Item
                                </h5>
                                <p>
                                  You can manage item you add. YOu can also delete an item with a very simple user experience.
                                </p>
                              </div>
                              <div
                                class="col-md-4"
                              >
                                <h5>
                                  Transaction Summary
                                </h5>
                                <p>
                                  Transaction summary of item purchase can not be easier.
                                </p>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>,
                      "context": Object {},
                      "current": [Circular],
                      "didError": false,
                      "earliestPendingTime": 0,
                      "earliestSuspendedTime": 0,
                      "expirationTime": 0,
                      "finishedWork": null,
                      "firstBatch": null,
                      "hydrate": false,
                      "interactionThreadID": 12,
                      "latestPendingTime": 0,
                      "latestPingedTime": 0,
                      "latestSuspendedTime": 0,
                      "memoizedInteractions": Set {},
                      "nextExpirationTimeToWorkOn": 0,
                      "nextScheduledRoot": null,
                      "pendingChildren": null,
                      "pendingCommitExpirationTime": 0,
                      "pendingContext": null,
                      "pendingInteractionMap": Map {},
                      "timeoutHandle": -1,
                    },
                    "tag": 3,
                    "treeBaseDuration": 0,
                    "type": null,
                    "updateQueue": Object {
                      "baseState": null,
                      "firstCapturedEffect": null,
                      "firstCapturedUpdate": null,
                      "firstEffect": null,
                      "firstUpdate": Object {
                        "callback": null,
                        "expirationTime": 1073741823,
                        "next": null,
                        "nextEffect": null,
                        "payload": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "children": <_default />,
                              }
                            }
                          />,
                        },
                        "tag": 0,
                      },
                      "lastCapturedEffect": null,
                      "lastCapturedUpdate": null,
                      "lastEffect": null,
                      "lastUpdate": Object {
                        "callback": null,
                        "expirationTime": 1073741823,
                        "next": null,
                        "nextEffect": null,
                        "payload": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "children": <_default />,
                              }
                            }
                          />,
                        },
                        "tag": 0,
                      },
                    },
                  },
                  "child": [Circular],
                  "childExpirationTime": 0,
                  "effectTag": 32,
                  "elementType": null,
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": null,
                  "memoizedState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "children": <_default />,
                        }
                      }
                    />,
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": Object {
                    "containerInfo": <div>
                      <div>
                        <div
                          class="jumbotron text-center"
                        >
                          <h1>
                            Grocery Listify
                          </h1>
                          <p>
                            Grocery Store Management Made easy with
                             
                          </p>
                        </div>
                        <div
                          class="container home"
                        >
                          <div
                            class="row text-center"
                          >
                            <div
                              class="col-md-4"
                            >
                              <h5>
                                Shop
                              </h5>
                              <p>
                                You can use the web app to add/remove item from a shopping experience.
                              </p>
                            </div>
                            <div
                              class="col-md-4"
                            >
                              <h5>
                                Manage Item
                              </h5>
                              <p>
                                You can manage item you add. YOu can also delete an item with a very simple user experience.
                              </p>
                            </div>
                            <div
                              class="col-md-4"
                            >
                              <h5>
                                Transaction Summary
                              </h5>
                              <p>
                                Transaction summary of item purchase can not be easier.
                              </p>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>,
                    "context": Object {},
                    "current": [Circular],
                    "didError": false,
                    "earliestPendingTime": 0,
                    "earliestSuspendedTime": 0,
                    "expirationTime": 0,
                    "finishedWork": null,
                    "firstBatch": null,
                    "hydrate": false,
                    "interactionThreadID": 12,
                    "latestPendingTime": 0,
                    "latestPingedTime": 0,
                    "latestSuspendedTime": 0,
                    "memoizedInteractions": Set {},
                    "nextExpirationTimeToWorkOn": 0,
                    "nextScheduledRoot": null,
                    "pendingChildren": null,
                    "pendingCommitExpirationTime": 0,
                    "pendingContext": null,
                    "pendingInteractionMap": Map {},
                    "timeoutHandle": -1,
                  },
                  "tag": 3,
                  "treeBaseDuration": 0,
                  "type": null,
                  "updateQueue": Object {
                    "baseState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "children": <_default />,
                          }
                        }
                      />,
                    },
                    "firstCapturedEffect": null,
                    "firstCapturedUpdate": null,
                    "firstEffect": null,
                    "firstUpdate": null,
                    "lastCapturedEffect": null,
                    "lastCapturedUpdate": null,
                    "lastEffect": null,
                    "lastUpdate": null,
                  },
                },
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": WrapperComponent {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "Component": [Function],
                    "context": null,
                    "props": Object {
                      "children": <_default />,
                    },
                  },
                  "refs": Object {},
                  "state": Object {
                    "context": null,
                    "mount": true,
                    "props": Object {
                      "children": <_default />,
                    },
                  },
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 1,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": null,
              },
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": BrowserRouter {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "history": Object {
                  "action": "POP",
                  "block": [Function],
                  "createHref": [Function],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "push": [Function],
                  "replace": [Function],
                },
                "props": Object {
                  "children": <_default />,
                },
                "refs": Object {},
                "state": null,
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": null,
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": [Circular],
            "tag": 1,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "_reactInternalInstance": Object {},
          "context": Object {
            "router": undefined,
          },
          "props": Object {
            "children": <_default />,
            "history": Object {
              "action": "POP",
              "block": [Function],
              "createHref": [Function],
              "go": [Function],
              "goBack": [Function],
              "goForward": [Function],
              "length": 1,
              "listen": [Function],
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
              "push": [Function],
              "replace": [Function],
            },
          },
          "refs": Object {},
          "state": Object {
            "match": Object {
              "isExact": true,
              "params": Object {},
              "path": "/",
              "url": "/",
            },
          },
          "unlisten": [Function],
          "updater": Object {
            "enqueueForceUpdate": [Function],
            "enqueueReplaceState": [Function],
            "enqueueSetState": [Function],
            "isMounted": [Function],
          },
        },
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <_default />,
          "history": Object {
            "action": "POP",
            "block": [Function],
            "createHref": [Function],
            "go": [Function],
            "goBack": [Function],
            "goForward": [Function],
            "length": 1,
            "listen": [Function],
            "location": Object {
              "hash": "",
              "pathname": "/",
              "search": "",
              "state": undefined,
            },
            "push": [Function],
            "replace": [Function],
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {},
          "ref": null,
          "rendered": Object {
            "instance": <div>
              <div
                class="jumbotron text-center"
              >
                <h1>
                  Grocery Listify
                </h1>
                <p>
                  Grocery Store Management Made easy with
                   
                </p>
              </div>
              <div
                class="container home"
              >
                <div
                  class="row text-center"
                >
                  <div
                    class="col-md-4"
                  >
                    <h5>
                      Shop
                    </h5>
                    <p>
                      You can use the web app to add/remove item from a shopping experience.
                    </p>
                  </div>
                  <div
                    class="col-md-4"
                  >
                    <h5>
                      Manage Item
                    </h5>
                    <p>
                      You can manage item you add. YOu can also delete an item with a very simple user experience.
                    </p>
                  </div>
                  <div
                    class="col-md-4"
                  >
                    <h5>
                      Transaction Summary
                    </h5>
                    <p>
                      Transaction summary of item purchase can not be easier.
                    </p>
                  </div>
                </div>
              </div>
            </div>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="jumbotron text-center"
                >
                  <h1>
                    Grocery Listify
                  </h1>
                  <p>
                    Grocery Store Management Made easy with
                     
                    <FontAwesomeIcon
                      border={false}
                      className=""
                      fixedWidth={false}
                      flip={null}
                      icon="heart"
                      inverse={false}
                      listItem={false}
                      mask={null}
                      pull={null}
                      pulse={false}
                      rotation={null}
                      size={null}
                      spin={false}
                      symbol={false}
                      title=""
                      transform={null}
                    />
                  </p>
                </div>,
                <div
                  className="container home"
                >
                  <div
                    className="row text-center"
                  >
                    <div
                      className="col-md-4"
                    >
                      <FontAwesomeIcon
                        border={false}
                        className=""
                        fixedWidth={false}
                        flip={null}
                        icon="shopping-bag"
                        inverse={false}
                        listItem={false}
                        mask={null}
                        pull={null}
                        pulse={false}
                        rotation={null}
                        size={null}
                        spin={false}
                        symbol={false}
                        title=""
                        transform={null}
                      />
                      <h5>
                        Shop
                      </h5>
                      <p>
                        You can use the web app to add/remove item from a shopping experience.
                      </p>
                    </div>
                    <div
                      className="col-md-4"
                    >
                      <FontAwesomeIcon
                        border={false}
                        className=""
                        fixedWidth={false}
                        flip={null}
                        icon="briefcase"
                        inverse={false}
                        listItem={false}
                        mask={null}
                        pull={null}
                        pulse={false}
                        rotation={null}
                        size={null}
                        spin={false}
                        symbol={false}
                        title=""
                        transform={null}
                      />
                      <h5>
                        Manage Item
                      </h5>
                      <p>
                        You can manage item you add. YOu can also delete an item with a very simple user experience.
                      </p>
                    </div>
                    <div
                      className="col-md-4"
                    >
                      <FontAwesomeIcon
                        border={false}
                        className=""
                        fixedWidth={false}
                        flip={null}
                        icon="chart-line"
                        inverse={false}
                        listItem={false}
                        mask={null}
                        pull={null}
                        pulse={false}
                        rotation={null}
                        size={null}
                        spin={false}
                        symbol={false}
                        title=""
                        transform={null}
                      />
                      <h5>
                        Transaction Summary
                      </h5>
                      <p>
                        Transaction summary of item purchase can not be easier.
                      </p>
                    </div>
                  </div>
                </div>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": <div
                  class="jumbotron text-center"
                >
                  <h1>
                    Grocery Listify
                  </h1>
                  <p>
                    Grocery Store Management Made easy with
                     
                  </p>
                </div>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <h1>
                      Grocery Listify
                    </h1>,
                    <p>
                      Grocery Store Management Made easy with
                       
                      <FontAwesomeIcon
                        border={false}
                        className=""
                        fixedWidth={false}
                        flip={null}
                        icon="heart"
                        inverse={false}
                        listItem={false}
                        mask={null}
                        pull={null}
                        pulse={false}
                        rotation={null}
                        size={null}
                        spin={false}
                        symbol={false}
                        title=""
                        transform={null}
                      />
                    </p>,
                  ],
                  "className": "jumbotron text-center",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": <h1>
                      Grocery Listify
                    </h1>,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Grocery Listify",
                    },
                    "ref": null,
                    "rendered": Array [
                      "Grocery Listify",
                    ],
                    "type": "h1",
                  },
                  Object {
                    "instance": <p>
                      Grocery Store Management Made easy with
                       
                    </p>,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        "Grocery Store Management Made easy with",
                        " ",
                        <FontAwesomeIcon
                          border={false}
                          className=""
                          fixedWidth={false}
                          flip={null}
                          icon="heart"
                          inverse={false}
                          listItem={false}
                          mask={null}
                          pull={null}
                          pulse={false}
                          rotation={null}
                          size={null}
                          spin={false}
                          symbol={false}
                          title=""
                          transform={null}
                        />,
                      ],
                    },
                    "ref": null,
                    "rendered": Array [
                      "Grocery Store Management Made easy with",
                      " ",
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {
                          "border": false,
                          "className": "",
                          "fixedWidth": false,
                          "flip": null,
                          "icon": "heart",
                          "inverse": false,
                          "listItem": false,
                          "mask": null,
                          "pull": null,
                          "pulse": false,
                          "rotation": null,
                          "size": null,
                          "spin": false,
                          "symbol": false,
                          "title": "",
                          "transform": null,
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                    ],
                    "type": "p",
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": <div
                  class="container home"
                >
                  <div
                    class="row text-center"
                  >
                    <div
                      class="col-md-4"
                    >
                      <h5>
                        Shop
                      </h5>
                      <p>
                        You can use the web app to add/remove item from a shopping experience.
                      </p>
                    </div>
                    <div
                      class="col-md-4"
                    >
                      <h5>
                        Manage Item
                      </h5>
                      <p>
                        You can manage item you add. YOu can also delete an item with a very simple user experience.
                      </p>
                    </div>
                    <div
                      class="col-md-4"
                    >
                      <h5>
                        Transaction Summary
                      </h5>
                      <p>
                        Transaction summary of item purchase can not be easier.
                      </p>
                    </div>
                  </div>
                </div>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <div
                    className="row text-center"
                  >
                    <div
                      className="col-md-4"
                    >
                      <FontAwesomeIcon
                        border={false}
                        className=""
                        fixedWidth={false}
                        flip={null}
                        icon="shopping-bag"
                        inverse={false}
                        listItem={false}
                        mask={null}
                        pull={null}
                        pulse={false}
                        rotation={null}
                        size={null}
                        spin={false}
                        symbol={false}
                        title=""
                        transform={null}
                      />
                      <h5>
                        Shop
                      </h5>
                      <p>
                        You can use the web app to add/remove item from a shopping experience.
                      </p>
                    </div>
                    <div
                      className="col-md-4"
                    >
                      <FontAwesomeIcon
                        border={false}
                        className=""
                        fixedWidth={false}
                        flip={null}
                        icon="briefcase"
                        inverse={false}
                        listItem={false}
                        mask={null}
                        pull={null}
                        pulse={false}
                        rotation={null}
                        size={null}
                        spin={false}
                        symbol={false}
                        title=""
                        transform={null}
                      />
                      <h5>
                        Manage Item
                      </h5>
                      <p>
                        You can manage item you add. YOu can also delete an item with a very simple user experience.
                      </p>
                    </div>
                    <div
                      className="col-md-4"
                    >
                      <FontAwesomeIcon
                        border={false}
                        className=""
                        fixedWidth={false}
                        flip={null}
                        icon="chart-line"
                        inverse={false}
                        listItem={false}
                        mask={null}
                        pull={null}
                        pulse={false}
                        rotation={null}
                        size={null}
                        spin={false}
                        symbol={false}
                        title=""
                        transform={null}
                      />
                      <h5>
                        Transaction Summary
                      </h5>
                      <p>
                        Transaction summary of item purchase can not be easier.
                      </p>
                    </div>
                  </div>,
                  "className": "container home",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": <div
                      class="row text-center"
                    >
                      <div
                        class="col-md-4"
                      >
                        <h5>
                          Shop
                        </h5>
                        <p>
                          You can use the web app to add/remove item from a shopping experience.
                        </p>
                      </div>
                      <div
                        class="col-md-4"
                      >
                        <h5>
                          Manage Item
                        </h5>
                        <p>
                          You can manage item you add. YOu can also delete an item with a very simple user experience.
                        </p>
                      </div>
                      <div
                        class="col-md-4"
                      >
                        <h5>
                          Transaction Summary
                        </h5>
                        <p>
                          Transaction summary of item purchase can not be easier.
                        </p>
                      </div>
                    </div>,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <div
                          className="col-md-4"
                        >
                          <FontAwesomeIcon
                            border={false}
                            className=""
                            fixedWidth={false}
                            flip={null}
                            icon="shopping-bag"
                            inverse={false}
                            listItem={false}
                            mask={null}
                            pull={null}
                            pulse={false}
                            rotation={null}
                            size={null}
                            spin={false}
                            symbol={false}
                            title=""
                            transform={null}
                          />
                          <h5>
                            Shop
                          </h5>
                          <p>
                            You can use the web app to add/remove item from a shopping experience.
                          </p>
                        </div>,
                        <div
                          className="col-md-4"
                        >
                          <FontAwesomeIcon
                            border={false}
                            className=""
                            fixedWidth={false}
                            flip={null}
                            icon="briefcase"
                            inverse={false}
                            listItem={false}
                            mask={null}
                            pull={null}
                            pulse={false}
                            rotation={null}
                            size={null}
                            spin={false}
                            symbol={false}
                            title=""
                            transform={null}
                          />
                          <h5>
                            Manage Item
                          </h5>
                          <p>
                            You can manage item you add. YOu can also delete an item with a very simple user experience.
                          </p>
                        </div>,
                        <div
                          className="col-md-4"
                        >
                          <FontAwesomeIcon
                            border={false}
                            className=""
                            fixedWidth={false}
                            flip={null}
                            icon="chart-line"
                            inverse={false}
                            listItem={false}
                            mask={null}
                            pull={null}
                            pulse={false}
                            rotation={null}
                            size={null}
                            spin={false}
                            symbol={false}
                            title=""
                            transform={null}
                          />
                          <h5>
                            Transaction Summary
                          </h5>
                          <p>
                            Transaction summary of item purchase can not be easier.
                          </p>
                        </div>,
                      ],
                      "className": "row text-center",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": <div
                          class="col-md-4"
                        >
                          <h5>
                            Shop
                          </h5>
                          <p>
                            You can use the web app to add/remove item from a shopping experience.
                          </p>
                        </div>,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": Array [
                            <FontAwesomeIcon
                              border={false}
                              className=""
                              fixedWidth={false}
                              flip={null}
                              icon="shopping-bag"
                              inverse={false}
                              listItem={false}
                              mask={null}
                              pull={null}
                              pulse={false}
                              rotation={null}
                              size={null}
                              spin={false}
                              symbol={false}
                              title=""
                              transform={null}
                            />,
                            <h5>
                              Shop
                            </h5>,
                            <p>
                              You can use the web app to add/remove item from a shopping experience.
                            </p>,
                          ],
                          "className": "col-md-4",
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "function",
                            "props": Object {
                              "border": false,
                              "className": "",
                              "fixedWidth": false,
                              "flip": null,
                              "icon": "shopping-bag",
                              "inverse": false,
                              "listItem": false,
                              "mask": null,
                              "pull": null,
                              "pulse": false,
                              "rotation": null,
                              "size": null,
                              "spin": false,
                              "symbol": false,
                              "title": "",
                              "transform": null,
                            },
                            "ref": null,
                            "rendered": null,
                            "type": [Function],
                          },
                          Object {
                            "instance": <h5>
                              Shop
                            </h5>,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": "Shop",
                            },
                            "ref": null,
                            "rendered": Array [
                              "Shop",
                            ],
                            "type": "h5",
                          },
                          Object {
                            "instance": <p>
                              You can use the web app to add/remove item from a shopping experience.
                            </p>,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": "You can use the web app to add/remove item from a shopping experience.",
                            },
                            "ref": null,
                            "rendered": Array [
                              "You can use the web app to add/remove item from a shopping experience.",
                            ],
                            "type": "p",
                          },
                        ],
                        "type": "div",
                      },
                      Object {
                        "instance": <div
                          class="col-md-4"
                        >
                          <h5>
                            Manage Item
                          </h5>
                          <p>
                            You can manage item you add. YOu can also delete an item with a very simple user experience.
                          </p>
                        </div>,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": Array [
                            <FontAwesomeIcon
                              border={false}
                              className=""
                              fixedWidth={false}
                              flip={null}
                              icon="briefcase"
                              inverse={false}
                              listItem={false}
                              mask={null}
                              pull={null}
                              pulse={false}
                              rotation={null}
                              size={null}
                              spin={false}
                              symbol={false}
                              title=""
                              transform={null}
                            />,
                            <h5>
                              Manage Item
                            </h5>,
                            <p>
                              You can manage item you add. YOu can also delete an item with a very simple user experience.
                            </p>,
                          ],
                          "className": "col-md-4",
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "function",
                            "props": Object {
                              "border": false,
                              "className": "",
                              "fixedWidth": false,
                              "flip": null,
                              "icon": "briefcase",
                              "inverse": false,
                              "listItem": false,
                              "mask": null,
                              "pull": null,
                              "pulse": false,
                              "rotation": null,
                              "size": null,
                              "spin": false,
                              "symbol": false,
                              "title": "",
                              "transform": null,
                            },
                            "ref": null,
                            "rendered": null,
                            "type": [Function],
                          },
                          Object {
                            "instance": <h5>
                              Manage Item
                            </h5>,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": "Manage Item",
                            },
                            "ref": null,
                            "rendered": Array [
                              "Manage Item",
                            ],
                            "type": "h5",
                          },
                          Object {
                            "instance": <p>
                              You can manage item you add. YOu can also delete an item with a very simple user experience.
                            </p>,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": "You can manage item you add. YOu can also delete an item with a very simple user experience.",
                            },
                            "ref": null,
                            "rendered": Array [
                              "You can manage item you add. YOu can also delete an item with a very simple user experience.",
                            ],
                            "type": "p",
                          },
                        ],
                        "type": "div",
                      },
                      Object {
                        "instance": <div
                          class="col-md-4"
                        >
                          <h5>
                            Transaction Summary
                          </h5>
                          <p>
                            Transaction summary of item purchase can not be easier.
                          </p>
                        </div>,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": Array [
                            <FontAwesomeIcon
                              border={false}
                              className=""
                              fixedWidth={false}
                              flip={null}
                              icon="chart-line"
                              inverse={false}
                              listItem={false}
                              mask={null}
                              pull={null}
                              pulse={false}
                              rotation={null}
                              size={null}
                              spin={false}
                              symbol={false}
                              title=""
                              transform={null}
                            />,
                            <h5>
                              Transaction Summary
                            </h5>,
                            <p>
                              Transaction summary of item purchase can not be easier.
                            </p>,
                          ],
                          "className": "col-md-4",
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "function",
                            "props": Object {
                              "border": false,
                              "className": "",
                              "fixedWidth": false,
                              "flip": null,
                              "icon": "chart-line",
                              "inverse": false,
                              "listItem": false,
                              "mask": null,
                              "pull": null,
                              "pulse": false,
                              "rotation": null,
                              "size": null,
                              "spin": false,
                              "symbol": false,
                              "title": "",
                              "transform": null,
                            },
                            "ref": null,
                            "rendered": null,
                            "type": [Function],
                          },
                          Object {
                            "instance": <h5>
                              Transaction Summary
                            </h5>,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": "Transaction Summary",
                            },
                            "ref": null,
                            "rendered": Array [
                              "Transaction Summary",
                            ],
                            "type": "h5",
                          },
                          Object {
                            "instance": <p>
                              Transaction summary of item purchase can not be easier.
                            </p>,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": "Transaction summary of item purchase can not be easier.",
                            },
                            "ref": null,
                            "rendered": Array [
                              "Transaction summary of item purchase can not be easier.",
                            ],
                            "type": "p",
                          },
                        ],
                        "type": "div",
                      },
                    ],
                    "type": "div",
                  },
                ],
                "type": "div",
              },
            ],
            "type": "div",
          },
          "type": [Function],
        },
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
